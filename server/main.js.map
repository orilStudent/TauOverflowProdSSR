{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@angular/material/autocomplete/typings/index.d.ts.MatAutocomplete.html","webpack:///./node_modules/@angular/material/button/typings/index.d.ts.MatButton.html","webpack:///./node_modules/@angular/material/button/typings/index.d.ts.MatAnchor.html","webpack:///./node_modules/@angular/material/card/typings/index.d.ts.MatCard.html","webpack:///./node_modules/@angular/material/card/typings/index.d.ts.MatCardHeader.html","webpack:///./node_modules/@angular/material/card/typings/index.d.ts.MatCardTitleGroup.html","webpack:///./node_modules/@angular/material/chips/typings/index.d.ts.MatChipList.html","webpack:///./node_modules/@angular/material/core/typings/index.d.ts.MatOption.html","webpack:///./node_modules/@angular/material/core/typings/index.d.ts.MatOptgroup.html","webpack:///./node_modules/@angular/material/dialog/typings/index.d.ts.MatDialogContainer.html","webpack:///./node_modules/@angular/material/expansion/typings/index.d.ts.MatExpansionPanel.html","webpack:///./node_modules/@angular/material/expansion/typings/index.d.ts.MatExpansionPanelHeader.html","webpack:///./node_modules/@angular/material/form-field/typings/index.d.ts.MatFormField.html","webpack:///./node_modules/@angular/material/icon/typings/index.d.ts.MatIcon.html","webpack:///./node_modules/@angular/material/list/typings/index.d.ts.MatNavList.html","webpack:///./node_modules/@angular/material/list/typings/index.d.ts.MatList.html","webpack:///./node_modules/@angular/material/list/typings/index.d.ts.MatListItem.html","webpack:///./node_modules/@angular/material/list/typings/index.d.ts.MatListOption.html","webpack:///./node_modules/@angular/material/list/typings/index.d.ts.MatSelectionList.html","webpack:///./node_modules/@angular/material/menu/typings/index.d.ts.MatMenu.html","webpack:///./node_modules/@angular/material/menu/typings/index.d.ts.MatMenuItem.html","webpack:///./node_modules/@angular/material/progress-spinner/typings/index.d.ts.MatProgressSpinner.html","webpack:///./node_modules/@angular/material/progress-spinner/typings/index.d.ts.MatSpinner.html","webpack:///./node_modules/@angular/material/slide-toggle/typings/index.d.ts.MatSlideToggle.html","webpack:///./node_modules/@angular/material/snack-bar/typings/index.d.ts.MatSnackBarContainer.html","webpack:///./node_modules/@angular/material/snack-bar/typings/index.d.ts.SimpleSnackBar.html","webpack:///./node_modules/@angular/material/tabs/typings/index.d.ts.MatTabGroup.html","webpack:///./node_modules/@angular/material/tabs/typings/index.d.ts.MatTabBody.html","webpack:///./node_modules/@angular/material/tabs/typings/index.d.ts.MatTabHeader.html","webpack:///./node_modules/@angular/material/tabs/typings/index.d.ts.MatTab.html","webpack:///./node_modules/@angular/material/tabs/typings/index.d.ts.MatTabNav.html","webpack:///./node_modules/@angular/material/toolbar/typings/index.d.ts.MatToolbar.html","webpack:///./node_modules/@angular/material/tooltip/typings/index.d.ts.TooltipComponent.html","webpack:///./node_modules/@angular/router/router.d.ts.ÉµEmptyOutletComponent.html","webpack:///./node_modules/@kolkov/angular-editor/kolkov-angular-editor.d.ts.AngularEditorComponent.html","webpack:///./node_modules/@kolkov/angular-editor/kolkov-angular-editor.d.ts.AngularEditorToolbarComponent.html","webpack:///./src/app/answer-card/answer-card.component.html","webpack:///./src/app/answer-card/answer-card.component.ts","webpack:///./src/app/app-routing-data.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.server.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/autocomplete/autocomplete.component.html","webpack:///./src/app/autocomplete/autocomplete.component.ts","webpack:///./src/app/clickable-profile-picture/clickable-profile-picture.component.html","webpack:///./src/app/clickable-profile-picture/clickable-profile-picture.component.ts","webpack:///./src/app/copy-to-clipboard/copy-to-clipboard.component.html","webpack:///./src/app/copy-to-clipboard/copy-to-clipboard.component.ts","webpack:///./src/app/course-page/course-page.component.html","webpack:///./src/app/course-page/course-page.component.ts","webpack:///./src/app/course-review-editor/course-review-editor.component.html","webpack:///./src/app/course-review-editor/course-review-editor.component.ts","webpack:///./src/app/courses/courses.component.html","webpack:///./src/app/courses/courses.component.ts","webpack:///./src/app/delete-confirm-dialog/delete-confirm-dialog.component.html","webpack:///./src/app/delete-confirm-dialog/delete-confirm-dialog.component.ts","webpack:///./src/app/empty-state/empty-state.component.html","webpack:///./src/app/empty-state/empty-state.component.ts","webpack:///./src/app/file-uploader/file-uploader.component.html","webpack:///./src/app/file-uploader/file-uploader.component.ts","webpack:///./src/app/filter-dialog/filter-dialog.component.html","webpack:///./src/app/filter-dialog/filter-dialog.component.ts","webpack:///./src/app/find-a-partner-editor/find-a-partner-editor.component.html","webpack:///./src/app/find-a-partner-editor/find-a-partner-editor.component.ts","webpack:///./src/app/form-field/form-field.component.html","webpack:///./src/app/form-field/form-field.component.ts","webpack:///./src/app/home-page/home-page.component.html","webpack:///./src/app/home-page/home-page.component.ts","webpack:///./src/app/initial-details-dialog/initial-details-dialog.component.html","webpack:///./src/app/initial-details-dialog/initial-details-dialog.component.ts","webpack:///./src/app/models/answer.model.ts","webpack:///./src/app/models/change-hours-post.model.ts","webpack:///./src/app/models/course-related-post.model.ts","webpack:///./src/app/models/course-review.model.ts","webpack:///./src/app/models/course.model.ts","webpack:///./src/app/models/name.model.ts","webpack:///./src/app/models/notification-settings.model.ts","webpack:///./src/app/models/notification.model.ts","webpack:///./src/app/models/partner-post.model.ts","webpack:///./src/app/models/post.model.ts","webpack:///./src/app/models/program.model.ts","webpack:///./src/app/models/question.model.ts","webpack:///./src/app/models/ui-course.model.ts","webpack:///./src/app/models/ui-user.model.ts","webpack:///./src/app/models/upvote.model.ts","webpack:///./src/app/models/user-profile.model.ts","webpack:///./src/app/multi-select-autocomplete/multi-select-autocomplete.component.html","webpack:///./src/app/multi-select-autocomplete/multi-select-autocomplete.component.ts","webpack:///./src/app/nav-bar/nav-bar.component.html","webpack:///./src/app/nav-bar/nav-bar.component.ts","webpack:///./src/app/notification-settings-dialog/notification-settings-dialog.component.html","webpack:///./src/app/notification-settings-dialog/notification-settings-dialog.component.ts","webpack:///./src/app/notification/notification.component.html","webpack:///./src/app/notification/notification.component.ts","webpack:///./src/app/notifications-card/notification-host.directive.ts","webpack:///./src/app/notifications-card/notifications-card.component.html","webpack:///./src/app/notifications-card/notifications-card.component.ts","webpack:///./src/app/post-editor/post-editor.component.html","webpack:///./src/app/post-editor/post-editor.component.ts","webpack:///./src/app/profile-details-dialog/profile-details-dialog.component.html","webpack:///./src/app/profile-details-dialog/profile-details-dialog.component.ts","webpack:///./src/app/profile-details/profile-details.component.html","webpack:///./src/app/profile-details/profile-details.component.ts","webpack:///./src/app/question-card/question-card.component.html","webpack:///./src/app/question-card/question-card.component.ts","webpack:///./src/app/question-editor/question-editor.component.html","webpack:///./src/app/question-editor/question-editor.component.ts","webpack:///./src/app/question-page/question-page.component.html","webpack:///./src/app/question-page/question-page.component.ts","webpack:///./src/app/search-bar/search-bar.component.html","webpack:///./src/app/search-bar/search-bar.component.ts","webpack:///./src/app/search-results/search-results.component.html","webpack:///./src/app/search-results/search-results.component.ts","webpack:///./src/app/services/answer.service.ts","webpack:///./src/app/services/auth/auth.guard.ts","webpack:///./src/app/services/auth/auth.service.ts","webpack:///./src/app/services/course.service.ts","webpack:///./src/app/services/http-requests.service.ts","webpack:///./src/app/services/messaging.service.ts","webpack:///./src/app/services/partner-post.service.ts","webpack:///./src/app/services/program.service.ts","webpack:///./src/app/services/query.service.ts","webpack:///./src/app/services/question.service.ts","webpack:///./src/app/services/review.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/sign-up/sign-up.component.html","webpack:///./src/app/sign-up/sign-up.component.ts","webpack:///./src/app/single-answer-editor/single-answer-editor.component.html","webpack:///./src/app/single-answer-editor/single-answer-editor.component.ts","webpack:///./src/app/spinner/spinner.component.html","webpack:///./src/app/spinner/spinner.component.ts","webpack:///./src/app/user-profile/user-profile.component.html","webpack:///./src/app/user-profile/user-profile.component.ts","webpack:///./src/main.server.ts","webpack:///external \"@angular/animations\"","webpack:///external \"@angular/animations/browser\"","webpack:///external \"@angular/cdk/a11y\"","webpack:///external \"@angular/cdk/accordion\"","webpack:///external \"@angular/cdk/bidi\"","webpack:///external \"@angular/cdk/collections\"","webpack:///external \"@angular/cdk/keycodes\"","webpack:///external \"@angular/cdk/layout\"","webpack:///external \"@angular/cdk/observers\"","webpack:///external \"@angular/cdk/overlay\"","webpack:///external \"@angular/cdk/platform\"","webpack:///external \"@angular/cdk/portal\"","webpack:///external \"@angular/cdk/scrolling\"","webpack:///external \"@angular/cdk/text-field\"","webpack:///external \"@angular/common\"","webpack:///external \"@angular/common/http\"","webpack:///external \"@angular/core\"","webpack:///external \"@angular/fire\"","webpack:///external \"@angular/fire/auth\"","webpack:///external \"@angular/fire/database\"","webpack:///external \"@angular/fire/firestore\"","webpack:///external \"@angular/fire/messaging\"","webpack:///external \"@angular/forms\"","webpack:///external \"@angular/http\"","webpack:///external \"@angular/material\"","webpack:///external \"@angular/material/autocomplete\"","webpack:///external \"@angular/material/badge\"","webpack:///external \"@angular/material/button\"","webpack:///external \"@angular/material/card\"","webpack:///external \"@angular/material/checkbox\"","webpack:///external \"@angular/material/chips\"","webpack:///external \"@angular/material/core\"","webpack:///external \"@angular/material/dialog\"","webpack:///external \"@angular/material/divider\"","webpack:///external \"@angular/material/expansion\"","webpack:///external \"@angular/material/form-field\"","webpack:///external \"@angular/material/icon\"","webpack:///external \"@angular/material/input\"","webpack:///external \"@angular/material/list\"","webpack:///external \"@angular/material/menu\"","webpack:///external \"@angular/material/progress-spinner\"","webpack:///external \"@angular/material/select\"","webpack:///external \"@angular/material/slide-toggle\"","webpack:///external \"@angular/material/snack-bar\"","webpack:///external \"@angular/material/tabs\"","webpack:///external \"@angular/material/toolbar\"","webpack:///external \"@angular/material/tooltip\"","webpack:///external \"@angular/platform-browser\"","webpack:///external \"@angular/platform-browser/animations\"","webpack:///external \"@angular/platform-server\"","webpack:///external \"@angular/router\"","webpack:///external \"@kolkov/angular-editor\"","webpack:///external \"@nguniversal/module-map-ngfactory-loader\"","webpack:///external \"angularfire2/auth\"","webpack:///external \"angularfire2/database\"","webpack:///external \"angularfire2/firestore\"","webpack:///external \"angularfire2/messaging\"","webpack:///external \"firebase/app\"","webpack:///external \"ngx-clipboard\"","webpack:///external \"ngx-window-token\"","webpack:///external \"rxjs\"","webpack:///external \"rxjs/operators\"","webpack:///external \"util\""],"names":[],"mappings":"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Y;QAChB,OAAO,KAAK,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC;IACH,2BAAC;AAAD,CAAC;AAtEY,oDAAoB;;;;;;;;;;;;;;;;;ACfjC,+GAA0D;AAAjD,6DAAe;;;;;;;;;;;;;;;;;;;;;;;;;ACDxB,gD;;;;;;;;;;;ACAA,wD;;;;;;;;;;;ACAA,8C;;;;;;;;;;;ACAA,mD;;;;;;;;;;;ACAA,8C;;;;;;;;;;;ACAA,qD;;;;;;;;;;;ACAA,kD;;;;;;;;;;;ACAA,gD;;;;;;;;;;;ACAA,mD;;;;;;;;;;;ACAA,iD;;;;;;;;;;;ACAA,kD;;;;;;;;;;;ACAA,gD;;;;;;;;;;;ACAA,mD;;;;;;;;;;;ACAA,oD;;;;;;;;;;;ACAA,4C;;;;;;;;;;;ACAA,iD;;;;;;;;;;;ACAA,0C;;;;;;;;;;;ACAA,0C;;;;;;;;;;;ACAA,+C;;;;;;;;;;;ACAA,mD;;;;;;;;;;;ACAA,oD;;;;;;;;;;;ACAA,oD;;;;;;;;;;;ACAA,2C;;;;;;;;;;;ACAA,0C;;;;;;;;;;;ACAA,8C;;;;;;;;;;;ACAA,2D;;;;;;;;;;;ACAA,oD;;;;;;;;;;;ACAA,qD;;;;;;;;;;;ACAA,mD;;;;;;;;;;;ACAA,uD;;;;;;;;;;;ACAA,oD;;;;;;;;;;;ACAA,mD;;;;;;;;;;;ACAA,qD;;;;;;;;;;;ACAA,sD;;;;;;;;;;;ACAA,wD;;;;;;;;;;;ACAA,yD;;;;;;;;;;;ACAA,mD;;;;;;;;;;;ACAA,oD;;;;;;;;;;;ACAA,mD;;;;;;;;;;;ACAA,mD;;;;;;;;;;;ACAA,+D;;;;;;;;;;;ACAA,qD;;;;;;;;;;;ACAA,2D;;;;;;;;;;;ACAA,wD;;;;;;;;;;;ACAA,mD;;;;;;;;;;;ACAA,sD;;;;;;;;;;;ACAA,sD;;;;;;;;;;;ACAA,sD;;;;;;;;;;;ACAA,iE;;;;;;;;;;;ACAA,qD;;;;;;;;;;;ACAA,4C;;;;;;;;;;;ACAA,mD;;;;;;;;;;;ACAA,qE;;;;;;;;;;;ACAA,8C;;;;;;;;;;;ACAA,kD;;;;;;;;;;;ACAA,mD;;;;;;;;;;;ACAA,mD;;;;;;;;;;;ACAA,yC;;;;;;;;;;;ACAA,0C;;;;;;;;;;;ACAA,6C;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,2C;;;;;;;;;;;ACAA,iC","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","<ng-template><div class=\"mat-autocomplete-panel\" role=\"listbox\" [id]=\"id\" [ngClass]=\"_classList\" #panel><ng-content></ng-content></div></ng-template>","<span class=\"mat-button-wrapper\"><ng-content></ng-content></span><div matRipple class=\"mat-button-ripple\" [class.mat-button-ripple-round]=\"isRoundButton || isIconButton\" [matRippleDisabled]=\"_isRippleDisabled()\" [matRippleCentered]=\"isIconButton\" [matRippleTrigger]=\"_getHostElement()\"></div><div class=\"mat-button-focus-overlay\"></div>","<span class=\"mat-button-wrapper\"><ng-content></ng-content></span><div matRipple class=\"mat-button-ripple\" [class.mat-button-ripple-round]=\"isRoundButton || isIconButton\" [matRippleDisabled]=\"_isRippleDisabled()\" [matRippleCentered]=\"isIconButton\" [matRippleTrigger]=\"_getHostElement()\"></div><div class=\"mat-button-focus-overlay\"></div>","<ng-content></ng-content><ng-content select=\"mat-card-footer\"></ng-content>","<ng-content select=\"[mat-card-avatar], [matCardAvatar]\"></ng-content><div class=\"mat-card-header-text\"><ng-content select=\"mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]\"></ng-content></div><ng-content></ng-content>","<div><ng-content select=\"mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]\"></ng-content></div><ng-content select=\"img\"></ng-content><ng-content></ng-content>","<div class=\"mat-chip-list-wrapper\"><ng-content></ng-content></div>","<mat-pseudo-checkbox *ngIf=\"multiple\" class=\"mat-option-pseudo-checkbox\" [state]=\"selected ? 'checked' : ''\" [disabled]=\"disabled\"></mat-pseudo-checkbox><span class=\"mat-option-text\"><ng-content></ng-content></span><div class=\"mat-option-ripple\" mat-ripple [matRippleTrigger]=\"_getHostElement()\" [matRippleDisabled]=\"disabled || disableRipple\"></div>","<label class=\"mat-optgroup-label\" [id]=\"_labelId\">{{ label }}<ng-content></ng-content></label><ng-content select=\"mat-option, ng-container\"></ng-content>","<ng-template cdkPortalOutlet></ng-template>","<ng-content select=\"mat-expansion-panel-header\"></ng-content><div class=\"mat-expansion-panel-content\" role=\"region\" [@bodyExpansion]=\"_getExpandedState()\" (@bodyExpansion.done)=\"_bodyAnimationDone.next($event)\" [attr.aria-labelledby]=\"_headerId\" [id]=\"id\" #body><div class=\"mat-expansion-panel-body\"><ng-content></ng-content><ng-template [cdkPortalOutlet]=\"_portal\"></ng-template></div><ng-content select=\"mat-action-row\"></ng-content></div>","<span class=\"mat-content\"><ng-content select=\"mat-panel-title\"></ng-content><ng-content select=\"mat-panel-description\"></ng-content><ng-content></ng-content></span><span [@indicatorRotate]=\"_getExpandedState()\" *ngIf=\"_showToggle()\" class=\"mat-expansion-indicator\"></span>","<div class=\"mat-form-field-wrapper\"><div class=\"mat-form-field-flex\" #connectionContainer (click)=\"_control.onContainerClick && _control.onContainerClick($event)\"><ng-container *ngIf=\"appearance == 'outline'\"><div class=\"mat-form-field-outline\"><div class=\"mat-form-field-outline-start\"></div><div class=\"mat-form-field-outline-gap\"></div><div class=\"mat-form-field-outline-end\"></div></div><div class=\"mat-form-field-outline mat-form-field-outline-thick\"><div class=\"mat-form-field-outline-start\"></div><div class=\"mat-form-field-outline-gap\"></div><div class=\"mat-form-field-outline-end\"></div></div></ng-container><div class=\"mat-form-field-prefix\" *ngIf=\"_prefixChildren.length\"><ng-content select=\"[matPrefix]\"></ng-content></div><div class=\"mat-form-field-infix\" #inputContainer><ng-content></ng-content><span class=\"mat-form-field-label-wrapper\"><label class=\"mat-form-field-label\" (cdkObserveContent)=\"updateOutlineGap()\" [cdkObserveContentDisabled]=\"appearance != 'outline'\" [id]=\"_labelId\" [attr.for]=\"_control.id\" [attr.aria-owns]=\"_control.id\" [class.mat-empty]=\"_control.empty && !_shouldAlwaysFloat\" [class.mat-form-field-empty]=\"_control.empty && !_shouldAlwaysFloat\" [class.mat-accent]=\"color == 'accent'\" [class.mat-warn]=\"color == 'warn'\" #label *ngIf=\"_hasFloatingLabel()\" [ngSwitch]=\"_hasLabel()\"><ng-container *ngSwitchCase=\"false\"><ng-content select=\"mat-placeholder\"></ng-content>{{_control.placeholder}}</ng-container><ng-content select=\"mat-label\" *ngSwitchCase=\"true\"></ng-content><span class=\"mat-placeholder-required mat-form-field-required-marker\" aria-hidden=\"true\" *ngIf=\"!hideRequiredMarker && _control.required && !_control.disabled\">&nbsp;*</span></label></span></div><div class=\"mat-form-field-suffix\" *ngIf=\"_suffixChildren.length\"><ng-content select=\"[matSuffix]\"></ng-content></div></div><div class=\"mat-form-field-underline\" #underline *ngIf=\"appearance != 'outline'\"><span class=\"mat-form-field-ripple\" [class.mat-accent]=\"color == 'accent'\" [class.mat-warn]=\"color == 'warn'\"></span></div><div class=\"mat-form-field-subscript-wrapper\" [ngSwitch]=\"_getDisplayedMessages()\"><div *ngSwitchCase=\"'error'\" [@transitionMessages]=\"_subscriptAnimationState\"><ng-content select=\"mat-error\"></ng-content></div><div class=\"mat-form-field-hint-wrapper\" *ngSwitchCase=\"'hint'\" [@transitionMessages]=\"_subscriptAnimationState\"><div *ngIf=\"hintLabel\" [id]=\"_hintLabelId\" class=\"mat-hint\">{{hintLabel}}</div><ng-content select=\"mat-hint:not([align='end'])\"></ng-content><div class=\"mat-form-field-hint-spacer\"></div><ng-content select=\"mat-hint[align='end']\"></ng-content></div></div></div>","<ng-content></ng-content>","<ng-content></ng-content>","<ng-content></ng-content>","<div class=\"mat-list-item-content\"><div class=\"mat-list-item-ripple\" mat-ripple [matRippleTrigger]=\"_getHostElement()\" [matRippleDisabled]=\"_isRippleDisabled()\"></div><ng-content select=\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\"></ng-content><div class=\"mat-list-text\"><ng-content select=\"[mat-line], [matLine]\"></ng-content></div><ng-content></ng-content></div>","<div class=\"mat-list-item-content\" [class.mat-list-item-content-reverse]=\"checkboxPosition == 'after'\"><div mat-ripple class=\"mat-list-item-ripple\" [matRippleTrigger]=\"_getHostElement()\" [matRippleDisabled]=\"_isRippleDisabled()\"></div><mat-pseudo-checkbox [state]=\"selected ? 'checked' : 'unchecked'\" [disabled]=\"disabled\"></mat-pseudo-checkbox><div class=\"mat-list-text\" #text><ng-content></ng-content></div><ng-content select=\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\"></ng-content></div>","<ng-content></ng-content>","<ng-template><div class=\"mat-menu-panel\" [ngClass]=\"_classList\" (keydown)=\"_handleKeydown($event)\" (click)=\"closed.emit('click')\" [@transformMenu]=\"_panelAnimationState\" (@transformMenu.start)=\"_isAnimating = true\" (@transformMenu.done)=\"_onAnimationDone($event)\" tabindex=\"-1\" role=\"menu\"><div class=\"mat-menu-content\"><ng-content></ng-content></div></div></ng-template>","<ng-content></ng-content><div class=\"mat-menu-ripple\" matRipple [matRippleDisabled]=\"disableRipple || disabled\" [matRippleTrigger]=\"_getHostElement()\"></div>","<svg [style.width.px]=\"diameter\" [style.height.px]=\"diameter\" [attr.viewBox]=\"_viewBox\" preserveAspectRatio=\"xMidYMid meet\" focusable=\"false\" [ngSwitch]=\"mode === 'indeterminate'\"><circle *ngSwitchCase=\"true\" cx=\"50%\" cy=\"50%\" [attr.r]=\"_circleRadius\" [style.animation-name]=\"'mat-progress-spinner-stroke-rotate-' + diameter\" [style.stroke-dashoffset.px]=\"_strokeDashOffset\" [style.stroke-dasharray.px]=\"_strokeCircumference\" [style.stroke-width.%]=\"_circleStrokeWidth\"></circle><circle *ngSwitchCase=\"false\" cx=\"50%\" cy=\"50%\" [attr.r]=\"_circleRadius\" [style.stroke-dashoffset.px]=\"_strokeDashOffset\" [style.stroke-dasharray.px]=\"_strokeCircumference\" [style.stroke-width.%]=\"_circleStrokeWidth\"></circle></svg>","<svg [style.width.px]=\"diameter\" [style.height.px]=\"diameter\" [attr.viewBox]=\"_viewBox\" preserveAspectRatio=\"xMidYMid meet\" focusable=\"false\" [ngSwitch]=\"mode === 'indeterminate'\"><circle *ngSwitchCase=\"true\" cx=\"50%\" cy=\"50%\" [attr.r]=\"_circleRadius\" [style.animation-name]=\"'mat-progress-spinner-stroke-rotate-' + diameter\" [style.stroke-dashoffset.px]=\"_strokeDashOffset\" [style.stroke-dasharray.px]=\"_strokeCircumference\" [style.stroke-width.%]=\"_circleStrokeWidth\"></circle><circle *ngSwitchCase=\"false\" cx=\"50%\" cy=\"50%\" [attr.r]=\"_circleRadius\" [style.stroke-dashoffset.px]=\"_strokeDashOffset\" [style.stroke-dasharray.px]=\"_strokeCircumference\" [style.stroke-width.%]=\"_circleStrokeWidth\"></circle></svg>","<label class=\"mat-slide-toggle-label\" #label><div #toggleBar class=\"mat-slide-toggle-bar\" [class.mat-slide-toggle-bar-no-side-margin]=\"!labelContent.textContent || !labelContent.textContent.trim()\"><input #input class=\"mat-slide-toggle-input cdk-visually-hidden\" type=\"checkbox\" [id]=\"inputId\" [required]=\"required\" [tabIndex]=\"tabIndex\" [checked]=\"checked\" [disabled]=\"disabled\" [attr.name]=\"name\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledby\" (change)=\"_onChangeEvent($event)\" (click)=\"_onInputClick($event)\"><div class=\"mat-slide-toggle-thumb-container\" #thumbContainer (slidestart)=\"_onDragStart()\" (slide)=\"_onDrag($event)\" (slideend)=\"_onDragEnd()\"><div class=\"mat-slide-toggle-thumb\"></div><div class=\"mat-slide-toggle-ripple\" mat-ripple [matRippleTrigger]=\"label\" [matRippleDisabled]=\"disableRipple || disabled\" [matRippleCentered]=\"true\" [matRippleRadius]=\"20\" [matRippleAnimation]=\"{enterDuration: 150}\"><div class=\"mat-ripple-element mat-slide-toggle-persistent-ripple\"></div></div></div></div><span class=\"mat-slide-toggle-content\" #labelContent (cdkObserveContent)=\"_onLabelTextChange()\"><ng-content></ng-content></span></label>","<ng-template cdkPortalOutlet></ng-template>","<span>{{data.message}}</span><div class=\"mat-simple-snackbar-action\" *ngIf=\"hasAction\"><button mat-button (click)=\"action()\">{{data.action}}</button></div>","<mat-tab-header #tabHeader [selectedIndex]=\"selectedIndex\" [disableRipple]=\"disableRipple\" (indexFocused)=\"_focusChanged($event)\" (selectFocusedIndex)=\"selectedIndex = $event\"><div class=\"mat-tab-label\" role=\"tab\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus *ngFor=\"let tab of _tabs; let i = index\" [id]=\"_getTabLabelId(i)\" [attr.tabIndex]=\"_getTabIndex(tab, i)\" [attr.aria-posinset]=\"i + 1\" [attr.aria-setsize]=\"_tabs.length\" [attr.aria-controls]=\"_getTabContentId(i)\" [attr.aria-selected]=\"selectedIndex == i\" [attr.aria-label]=\"tab.ariaLabel || null\" [attr.aria-labelledby]=\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\" [class.mat-tab-label-active]=\"selectedIndex == i\" [disabled]=\"tab.disabled\" [matRippleDisabled]=\"tab.disabled || disableRipple\" (click)=\"_handleClick(tab, tabHeader, i)\"><div class=\"mat-tab-label-content\"><ng-template [ngIf]=\"tab.templateLabel\"><ng-template [cdkPortalOutlet]=\"tab.templateLabel\"></ng-template></ng-template><ng-template [ngIf]=\"!tab.templateLabel\">{{tab.textLabel}}</ng-template></div></div></mat-tab-header><div class=\"mat-tab-body-wrapper\" #tabBodyWrapper><mat-tab-body role=\"tabpanel\" *ngFor=\"let tab of _tabs; let i = index\" [id]=\"_getTabContentId(i)\" [attr.aria-labelledby]=\"_getTabLabelId(i)\" [class.mat-tab-body-active]=\"selectedIndex == i\" [content]=\"tab.content\" [position]=\"tab.position\" [origin]=\"tab.origin\" [animationDuration]=\"animationDuration\" (_onCentered)=\"_removeTabBodyWrapperHeight()\" (_onCentering)=\"_setTabBodyWrapperHeight($event)\"></mat-tab-body></div>","<div class=\"mat-tab-body-content\" #content [@translateTab]=\"{\n        value: _position,\n        params: {animationDuration: animationDuration}\n     }\" (@translateTab.start)=\"_onTranslateTabStarted($event)\" (@translateTab.done)=\"_translateTabComplete.next($event)\"><ng-template matTabBodyHost></ng-template></div>","<div class=\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\" aria-hidden=\"true\" mat-ripple [matRippleDisabled]=\"_disableScrollBefore || disableRipple\" [class.mat-tab-header-pagination-disabled]=\"_disableScrollBefore\" (click)=\"_scrollHeader('before')\"><div class=\"mat-tab-header-pagination-chevron\"></div></div><div class=\"mat-tab-label-container\" #tabListContainer (keydown)=\"_handleKeydown($event)\"><div class=\"mat-tab-list\" #tabList role=\"tablist\" (cdkObserveContent)=\"_onContentChanges()\"><div class=\"mat-tab-labels\"><ng-content></ng-content></div><mat-ink-bar></mat-ink-bar></div></div><div class=\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\" aria-hidden=\"true\" mat-ripple [matRippleDisabled]=\"_disableScrollAfter || disableRipple\" [class.mat-tab-header-pagination-disabled]=\"_disableScrollAfter\" (click)=\"_scrollHeader('after')\"><div class=\"mat-tab-header-pagination-chevron\"></div></div>","<ng-template><ng-content></ng-content></ng-template>","<div class=\"mat-tab-links\" (cdkObserveContent)=\"_alignInkBar()\"><ng-content></ng-content><mat-ink-bar></mat-ink-bar></div>","<ng-content></ng-content><ng-content select=\"mat-toolbar-row\"></ng-content>","<div class=\"mat-tooltip\" [ngClass]=\"tooltipClass\" [class.mat-tooltip-handset]=\"(_isHandset | async)?.matches\" [@state]=\"_visibility\" (@state.start)=\"_animationStart()\" (@state.done)=\"_animationDone($event)\">{{message}}</div>","<router-outlet></router-outlet>","<div (focus)=\"onEditorFocus()\" class=\"angular-editor\" id=\"angularEditor\" [style.width]=\"config.width\"\n     [style.minWidth]=\"config.minWidth\">\n  <angular-editor-toolbar #editorToolbar (execute)=\"executeCommand($event)\"></angular-editor-toolbar>\n\n  <div class=\"angular-editor-wrapper\" #editorWrapper>\n    <div #editor id=\"editor\" class=\"angular-editor-textarea\" [attr.contenteditable]=\"config.editable\"\n         [attr.translate]=\"config.translate\"\n         [attr.spellcheck]=\"config.spellcheck\" [style.height]=\"config.height\" [style.minHeight]=\"config.minHeight\" [style.maxHeight]=\"config.maxHeight\"\n         (input)=\"onContentChange($event.target.innerHTML)\" (focus)=\"onTextAreaFocus()\" (blur)=\"onTextAreaBlur($event)\" (click)=\"exec()\" (keyup)=\"exec()\">\n    </div>\n    <span class=\"angular-editor-placeholder\">{{ placeholder || config['placeholder'] }}</span>\n  </div>\n</div>\n","<div class=\"angular-editor-toolbar\" *ngIf=\"showToolbar\">\n  <div class=\"angular-editor-toolbar-set\">\n    <button type=\"button\" title=\"Undo\" class=\"angular-editor-button\" (click)=\"triggerCommand('undo')\" tabindex=\"-1\"><i\n      class='fa fa-undo'></i></button>\n    <button type=\"button\" title=\"Redo\" class=\"angular-editor-button\" (click)=\"triggerCommand('redo')\" tabindex=\"-1\"><i\n      class='fa fa-repeat'></i></button>\n  </div>\n  <div class=\"angular-editor-toolbar-set\">\n    <button [id]=\"'bold-'+id\" type=\"button\" title=\"Bold\" class=\"angular-editor-button\" (click)=\"triggerCommand('bold')\"\n            [disabled]=\"htmlMode\" tabindex=\"-1\"><i class='fa fa-bold'></i></button>\n    <button [id]=\"'italic-'+id\" type=\"button\" title=\"Italic\" class=\"angular-editor-button\"\n            (click)=\"triggerCommand('italic')\"\n            [disabled]=\"htmlMode\" tabindex=\"-1\"><i class='fa fa-italic'></i></button>\n    <button [id]=\"'underline-'+id\" type=\"button\" title=\"Underline\" class=\"angular-editor-button\"\n            (click)=\"triggerCommand('underline')\" [disabled]=\"htmlMode\" tabindex=\"-1\"><i class='fa fa-underline'></i></button>\n    <button [id]=\"'strikeThrough-'+id\" type=\"button\" title=\"Strikethrough\" class=\"angular-editor-button\"\n            (click)=\"triggerCommand('strikeThrough')\" [disabled]=\"htmlMode\" tabindex=\"-1\"><i class='fa fa-strikethrough'></i></button>\n    <button [id]=\"'subscript-'+id\" type=\"button\" title=\"Subscript\" class=\"angular-editor-button\"\n            (click)=\"triggerCommand('subscript')\" [disabled]=\"htmlMode\" tabindex=\"-1\"><i class='fa fa-subscript'></i></button>\n    <button [id]=\"'superscript-'+id\" type=\"button\" title=\"Superscript\" class=\"angular-editor-button\"\n            (click)=\"triggerCommand('superscript')\" [disabled]=\"htmlMode\" tabindex=\"-1\"><i class='fa fa-superscript'></i></button>\n  </div>\n  <div class=\"angular-editor-toolbar-set\">\n    <button [id]=\"'justifyLeft-'+id\" type=\"button\" title=\"Justify Left\" class=\"angular-editor-button\"\n            (click)=\"triggerCommand('justifyLeft')\" [disabled]=\"htmlMode\" tabindex=\"-1\"><i\n      class='fa fa-align-left'></i></button>\n    <button [id]=\"'justifyCenter-'+id\" type=\"button\" title=\"Justify Center\" class=\"angular-editor-button\"\n            (click)=\"triggerCommand('justifyCenter')\" [disabled]=\"htmlMode\" tabindex=\"-1\"><i class='fa fa-align-center'></i></button>\n    <button [id]=\"'justifyRight-'+id\" type=\"button\" title=\"Justify Right\" class=\"angular-editor-button\"\n            (click)=\"triggerCommand('justifyRight')\" [disabled]=\"htmlMode\" tabindex=\"-1\">\n      <i class='fa fa-align-right'></i></button>\n    <button [id]=\"'justifyFull-'+id\" type=\"button\" title=\"Justify Full\" class=\"angular-editor-button\"\n            (click)=\"triggerCommand('justifyFull')\" [disabled]=\"htmlMode\" tabindex=\"-1\"><i\n      class='fa fa-align-justify'></i></button>\n  </div>\n  <div class=\"angular-editor-toolbar-set\">\n    <button [id]=\"'indent-'+id\" type=\"button\" title=\"Indent\" class=\"angular-editor-button\"\n            (click)=\"triggerCommand('indent')\"\n            [disabled]=\"htmlMode\" tabindex=\"-1\"><i\n      class='fa fa-indent'></i></button>\n    <button [id]=\"'outdent-'+id\" type=\"button\" title=\"Outdent\" class=\"angular-editor-button\"\n            (click)=\"triggerCommand('outdent')\"\n            [disabled]=\"htmlMode\" tabindex=\"-1\"><i\n      class='fa fa-outdent'></i></button>\n  </div>\n  <div class=\"angular-editor-toolbar-set\">\n    <button [id]=\"'insertUnorderedList-'+id\" type=\"button\" title=\"Unordered List\" class=\"angular-editor-button\"\n            (click)=\"triggerCommand('insertUnorderedList')\" [disabled]=\"htmlMode\" tabindex=\"-1\"><i class='fa fa-list-ul'></i></button>\n    <button [id]=\"'insertOrderedList-'+id\" type=\"button\" title=\"Ordered List\" class=\"angular-editor-button\"\n            (click)=\"triggerCommand('insertOrderedList')\" [disabled]=\"htmlMode\" tabindex=\"-1\"><i class='fa fa-list-ol'></i></button>\n  </div>\n  <div class=\"angular-editor-toolbar-set\">\n    <label [for]=\"'heading-'+id\" class=\"block-label\" tabindex=\"-1\"></label>\n    <select title=\"Formatting\" [id]=\"'heading-'+id\" class=\"select-heading\" [(ngModel)]=\"block\"\n            (change)=\"triggerCommand(block)\"\n            [disabled]=\"htmlMode\"  tabindex=\"-1\">\n      <optgroup label=\"Formatting\"></optgroup>\n      <option class=\"h1\" value=\"h1\">Heading 1</option>\n      <option class=\"h2\" value=\"h2\">Heading 2</option>\n      <option class=\"h3\" value=\"h3\">Heading 3</option>\n      <option class=\"h4\" value=\"h4\">Heading 4</option>\n      <option class=\"h5\" value=\"h5\">Heading 5</option>\n      <option class=\"h6\" value=\"h6\">Heading 6</option>\n      <option class=\"p\" value=\"p\">Paragraph</option>\n      <option class=\"pre\" value=\"pre\">Predefined</option>\n      <option class=\"div\" value=\"div\">Standard</option>\n      <option class=\"default\" value=\"default\">Default</option>\n    </select>\n  </div>\n  <div class=\"angular-editor-toolbar-set\">\n    <label [for]=\"'fontSelector-'+id\" class=\"block-label\"></label>\n    <select title=\"Font Name\" [id]=\"'fontSelector-'+id\" class=\"select-font\" [(ngModel)]=\"fontId\"\n            (change)=\"setFontName(fontId)\"\n            [disabled]=\"htmlMode\" tabindex=\"-1\">\n      <optgroup label=\"Font Name\"></optgroup>\n      <option *ngFor=\"let item of fonts; let i = index\" [class]=\"item.class\" [value]=\"i\">{{item.name}}</option>\n     <!-- <option class=\"arial\" value=\"Arial\">Arial</option>\n      <option class=\"calibri\" value=\"Calibri\">Calibri</option>\n      <option class=\"comic-sans-ms\" value=\"Comic Sans MS\">Comic Sans MS</option>\n      <option class=\"times-new-roman\" value=\"Times New Roman\">Times New Roman</option>-->\n    </select>\n  </div>\n  <div class=\"angular-editor-toolbar-set\">\n    <label [for]=\"'fontSizeSelector-'+id\" class=\"block-label\"></label>\n    <select title=\"Font Size\" [id]=\"'fontSizeSelector-'+id\" class=\"select-font-size\" [(ngModel)]=\"fontSize\"\n            (change)=\"setFontSize(fontSize)\"\n            [disabled]=\"htmlMode\" tabindex=\"-1\">\n      <optgroup label=\"Font Sizing\"></optgroup>\n      <option class=\"size1\" value=\"1\">1</option>\n      <option class=\"size2\" value=\"2\">2</option>\n      <option class=\"size3\" value=\"3\">3</option>\n      <option class=\"size4\" value=\"4\">4</option>\n      <option class=\"size5\" value=\"5\">5</option>\n      <option class=\"size6\" value=\"6\">6</option>\n      <option class=\"size7\" value=\"7\">7</option>\n    </select>\n  </div>\n  <div class=\"angular-editor-toolbar-set\">\n    <input\n      style=\"display: none\"\n      type=\"color\" (change)=\"insertColor(fgInput.value, 'textColor')\"\n      #fgInput>\n    <button [id]=\"'foregroundColorPicker-'+id\" type=\"button\" class=\"angular-editor-button\" (click)=\"fgInput.click()\" title=\"Text Color\"\n            [disabled]=\"htmlMode\" tabindex=\"-1\"><span class=\"color-label foreground\"><i class=\"fa fa-font\"></i></span></button>\n    <input\n      style=\"display: none\"\n      type=\"color\" (change)=\"insertColor(bgInput.value, 'backgroundColor')\"\n      #bgInput>\n    <button [id]=\"'backgroundColorPicker-'+id\" type=\"button\" class=\"angular-editor-button\" (click)=\"bgInput.click()\" title=\"Background Color\"\n            [disabled]=\"htmlMode\" tabindex=\"-1\"><span class=\"color-label background\"><i class=\"fa fa-font\"></i></span></button>\n  </div>\n  <div *ngIf=\"customClasses\" class=\"angular-editor-toolbar-set\">\n    <label [for]=\"'customClassSelector-'+id\" class=\"block-label\"></label>\n    <select title=\"Custom Style\" [id]=\"'customClassSelector-'+id\" class=\"select-custom-style\" [(ngModel)]=\"customClassId\"\n            (change)=\"setCustomClass(customClassId)\"\n            [disabled]=\"htmlMode\" tabindex=\"-1\">\n      <optgroup label=\"Custom Class\"></optgroup>\n      <option class=\"\" value=-1>Clear Class</option>\n      <option *ngFor=\"let item of customClasses; let i = index\" [class]=\"item.class\" [value]=\"i\">{{item.name}}</option>\n    </select>\n  </div>\n  <div class=\"angular-editor-toolbar-set\">\n    <button [id]=\"'link-'+id\" type=\"button\" class=\"angular-editor-button\" (click)=\"insertUrl()\"\n            title=\"Insert Link\" [disabled]=\"htmlMode\" tabindex=\"-1\">\n      <i class=\"fa fa-link\"></i>\n    </button>\n    <button type=\"button\" class=\"angular-editor-button\" (click)=\"triggerCommand('unlink')\"\n            title=\"Unlink\" [disabled]=\"htmlMode\" tabindex=\"-1\">\n      <i class=\"fa fa-chain-broken\"></i>\n    </button>\n    <input\n      style=\"display: none\"\n      accept=\"image/*\"\n      type=\"file\" (change)=\"onFileChanged($event)\"\n      #fileInput>\n    <button type=\"button\" class=\"angular-editor-button\" (click)=\"fileInput.click()\" title=\"Insert Image\"\n            [disabled]=\"htmlMode\" tabindex=\"-1\"><i class=\"fa fa-image\"></i></button>\n    <button type=\"button\" title=\"Horizontal Line\" class=\"angular-editor-button\"\n            (click)=\"triggerCommand('insertHorizontalRule')\" [disabled]=\"htmlMode\" tabindex=\"-1\"><i class=\"fa fa-minus\"></i></button>\n  </div>\n  <div class=\"angular-editor-toolbar-set\">\n    <button type=\"button\" title=\"Clear Formatting\" class=\"angular-editor-button\"\n            (click)=\"triggerCommand('removeFormat')\" [disabled]=\"htmlMode\" tabindex=\"-1\"><i class='fa fa-remove'></i></button>\n  </div>\n  <div class=\"angular-editor-toolbar-set\">\n    <button [id]=\"'toggleEditorMode-'+id\" type=\"button\" title=\"HTML Code\" class=\"angular-editor-button\"\n            (click)=\"triggerCommand('toggleEditorMode')\" tabindex=\"-1\"><i class='fa fa-code'></i></button>\n  </div>\n</div>\n","<div class=\"AnswerCard\" *ngIf=\"answer\">\r\n  <div class=\"UserPicture\">\r\n    <app-clickable-profile-picture [isUserOwner]=\"isUserOwner\" [owner]=\"answer.owner\"></app-clickable-profile-picture>\r\n    <div>{{answer.owner.name.first}} {{answer.owner.name.last}}</div>\r\n  </div>\r\n  <mat-card class=\"{{isEvenAnswer ? 'EvenPostCard' : 'OddPostCard'}} mat-card\">\r\n    <mat-card-content class=\"ContentAndDetails\">\r\n      <div class=\"AnswerContent\" [innerHtml]=\"answer.content\"></div>\r\n      <div class=\"Date\">\r\n        {{answer.timestamp | date}}\r\n      </div>\r\n    </mat-card-content>\r\n    <mat-divider></mat-divider>\r\n    <div class=\"AnswerBottom\">\r\n      <span class=\"ButtonsContainer\">\r\n      <button mat-icon-button class=\"Button\" (click)=\"upvote()\">\r\n          <mat-icon class=\"ThumbIcon\">thumb_up</mat-icon>\r\n        </button>\r\n      <span class=\"NumOfLikes\">{{answer.upvote.count}}</span>\r\n    </span>\r\n      <span *ngIf=\"isUserOwner\">\r\n        <button mat-icon-button class=\"Button\" (click)=\"deleteAnswer()\">\r\n        <mat-icon class=\"DeleteIcon\">delete</mat-icon>\r\n      </button>\r\n      </span>\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Answer} from '../models/answer.model';\r\nimport {AnswerService} from '../services/answer.service';\r\nimport {UserService} from '../services/user.service';\r\nimport {MatDialog, MatDialogConfig, MatSnackBar} from '@angular/material';\r\nimport {DeleteConfirmDialogComponent} from '../delete-confirm-dialog/delete-confirm-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-answer-card',\r\n  templateUrl: './answer-card.component.html',\r\n  styleUrls: ['./answer-card.component.scss']\r\n})\r\nexport class AnswerCardComponent implements OnInit {\r\n  @Input() answer: Answer;\r\n  @Input() isEvenAnswer: boolean;\r\n  @Input() isUserOwner: boolean;\r\n\r\n  constructor(private answerService: AnswerService,\r\n              private userService: UserService,\r\n              private snackBar: MatSnackBar,\r\n              private dialog: MatDialog) {\r\n  }\r\n\r\n  upvote() {\r\n    this.userService.getUser().then((user) => {\r\n      if (this.answer.upvote.upvoters.includes(user.id)) {\r\n        return;\r\n      }\r\n      this.answer.upvote.count++;\r\n      this.answer.upvote.upvoters.push(user.id);\r\n      this.answerService.updateAnswer(this.answer).subscribe(res => {\r\n        console.log('Update Succesful');\r\n      }, err => {\r\n        console.error('Update Unsuccesful');\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  private deleteAnswer() {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.width = '500px';\r\n    dialogConfig.data = {title: 'Delete Answer',\r\n      text: 'Are you sure you want to delete this answer? It will be no longer exist'};\r\n    this.dialog.open(DeleteConfirmDialogComponent, dialogConfig).afterClosed().subscribe(\r\n      (result: boolean) => {\r\n        if (result) {\r\n          this.answerService.deleteAnswer(this.answer.id).subscribe();\r\n          this.answer = null;\r\n          this.snackBar.open('Post Successfully Deleted', '', {\r\n            duration: 2000 // Prompt the toast 2 seconds.\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\nexport interface RoutingData<T> {\r\n  getData(): T;\r\n}\r\n\r\n@Injectable()\r\nexport class AppRoutingDataService {\r\n  private routingData: {[key: string]: RoutingData<any>} = {};\r\n\r\n  constructor() {}\r\n\r\n  setRoutingData(key: string, data: RoutingData<any>) {\r\n    this.routingData[key] = data;\r\n  }\r\n\r\n  getRoutingData(key: string): RoutingData<any> {\r\n    return this.routingData[key];\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {HomePageComponent} from './home-page/home-page.component';\r\nimport {SignUpComponent} from './sign-up/sign-up.component';\r\nimport {CoursesComponent} from './courses/courses.component';\r\nimport {QuestionEditorComponent} from './question-editor/question-editor.component';\r\nimport {CoursePageComponent} from './course-page/course-page.component';\r\nimport {SearchResultsComponent} from './search-results/search-results.component';\r\nimport {UserProfileComponent} from './user-profile/user-profile.component';\r\nimport {QuestionPageComponent} from './question-page/question-page.component';\r\nimport {FindAPartnerEditorComponent} from './find-a-partner-editor/find-a-partner-editor.component';\r\nimport {CourseReviewEditorComponent} from './course-review-editor/course-review-editor.component';\r\nimport {AuthGuard} from './services/auth/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SignUpComponent,\r\n    canActivate: [AuthGuard],\r\n    data: {pageTitle: 'Sign Up'}\r\n  },\r\n  {\r\n    path: 'home-page',\r\n    component: HomePageComponent,\r\n    canActivate: [AuthGuard],\r\n    data: {pageTitle: 'Home Page'}\r\n  },\r\n  {\r\n    path: 'courses',\r\n    component: CoursesComponent,\r\n    canActivate: [AuthGuard],\r\n    data: {pageTitle: 'Course Page'}\r\n  },\r\n  {\r\n    path: 'question-editor',\r\n    component: QuestionEditorComponent,\r\n    canActivate: [AuthGuard],\r\n    data: {pageTitle: 'QuestionEditor'}\r\n  },\r\n  {\r\n    path: 'course-page',\r\n    component: CoursePageComponent,\r\n    canActivate: [AuthGuard],\r\n    data: {pageTitle: 'Course Page'}\r\n  },\r\n  {\r\n    path: 'user-profile',\r\n    component: UserProfileComponent,\r\n    canActivate: [AuthGuard],\r\n    data: {pageTitle: 'User Profile'}\r\n  },\r\n  {\r\n    path: 'search-results',\r\n    component: SearchResultsComponent,\r\n    canActivate: [AuthGuard],\r\n    data: {pageTitle: 'Search Results'}\r\n  },\r\n  {\r\n    path: 'find-a-partner-editor',\r\n    component: FindAPartnerEditorComponent,\r\n    canActivate: [AuthGuard],\r\n    data: {pageTitle: 'Find A Partner Editor'}\r\n  },\r\n  {\r\n    path: 'course-review-editor',\r\n    component: CourseReviewEditorComponent,\r\n    canActivate: [AuthGuard],\r\n    data: {pageTitle: 'Course Review Editor'}\r\n  },\r\n  {\r\n    path: 'question-page',\r\n    component: QuestionPageComponent,\r\n    canActivate: [AuthGuard],\r\n    runGuardsAndResolvers: 'always',\r\n    data: {pageTitle: 'Question Page'}\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","<router-outlet></router-outlet>\r\n\r\n","import { Component} from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  // styles: ['background: white;']ds\r\n})\r\nexport class AppComponent {\r\n}\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {MatTabsModule} from '@angular/material';\r\nimport {MatListModule} from '@angular/material';\r\nimport {MatChipsModule} from '@angular/material';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport { AngularEditorModule } from '@kolkov/angular-editor';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport { ClipboardModule } from 'ngx-clipboard';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\n\r\nimport { AngularFireModule } from 'angularfire2';\r\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\r\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\r\nimport { AngularFireAuthModule } from 'angularfire2/auth';\r\nimport {AngularFireMessagingModule} from 'angularfire2/messaging';\r\nimport { environment } from '../environments/environment';\r\nimport { AuthService } from './services/auth/auth.service';\r\nimport { QuestionService } from './services/question.service';\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {NavBarComponent} from './nav-bar/nav-bar.component';\r\nimport {SignUpComponent} from './sign-up/sign-up.component';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {AutocompleteComponent} from './autocomplete/autocomplete.component';\r\nimport {ProfileDetailsComponent} from './profile-details/profile-details.component';\r\nimport {HomePageComponent} from './home-page/home-page.component';\r\nimport { CoursesComponent } from './courses/courses.component';\r\nimport {CoursePageComponent} from './course-page/course-page.component';\r\nimport {SearchBarComponent} from './search-bar/search-bar.component';\r\nimport { FilterDialogComponent } from './filter-dialog/filter-dialog.component';\r\nimport { QuestionEditorComponent } from './question-editor/question-editor.component';\r\nimport { FormFieldComponent } from './form-field/form-field.component';\r\nimport { UserProfileComponent } from './user-profile/user-profile.component';\r\nimport { SearchResultsComponent } from './search-results/search-results.component';\r\nimport { QuestionPageComponent } from './question-page/question-page.component';\r\nimport { QuestionCardComponent } from './question-card/question-card.component';\r\nimport { AnswerCardComponent } from './answer-card/answer-card.component';\r\nimport { FindAPartnerEditorComponent } from './find-a-partner-editor/find-a-partner-editor.component';\r\nimport { CourseReviewEditorComponent } from './course-review-editor/course-review-editor.component';\r\nimport { SingleAnswerEditorComponent } from './single-answer-editor/single-answer-editor.component';\r\nimport {AppService} from './app.service';\r\nimport { PostEditorComponent } from './post-editor/post-editor.component';\r\nimport { MultiSelectAutocompleteComponent } from './multi-select-autocomplete/multi-select-autocomplete.component';\r\nimport {AppRoutingDataService} from './app-routing-data.service';\r\nimport {UserService} from './services/user.service';\r\nimport {AuthGuard} from './services/auth/auth.guard';\r\nimport { InitialDetailsDialogComponent } from './initial-details-dialog/initial-details-dialog.component';\r\nimport {HttpRequestsService} from './services/http-requests.service';\r\nimport {CourseService} from './services/course.service';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {AnswerService} from './services/answer.service';\r\nimport {ReviewService} from './services/review.service';\r\nimport {PartnerPostService} from './services/partner-post.service';\r\nimport { SpinnerComponent } from './spinner/spinner.component';\r\nimport {MessagingService} from './services/messaging.service';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport { FileUploaderComponent } from './file-uploader/file-uploader.component';\r\nimport { CopyToClipboardComponent } from './copy-to-clipboard/copy-to-clipboard.component';\r\nimport { EmptyStateComponent } from './empty-state/empty-state.component';\r\nimport { DeleteConfirmDialogComponent } from './delete-confirm-dialog/delete-confirm-dialog.component';\r\nimport { ProfileDetailsDialogComponent } from './profile-details-dialog/profile-details-dialog.component';\r\nimport { ClickableProfilePictureComponent } from './clickable-profile-picture/clickable-profile-picture.component';\r\nimport { NotificationsCardComponent } from './notifications-card/notifications-card.component';\r\nimport { NotificationComponent } from './notification/notification.component';\r\nimport { NotificationHostDirective } from './notifications-card/notification-host.directive';\r\nimport { NotificationSettingsDialogComponent } from './notification-settings-dialog/notification-settings-dialog.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavBarComponent,\r\n    SignUpComponent,\r\n    AutocompleteComponent,\r\n    ProfileDetailsComponent,\r\n    HomePageComponent,\r\n    CoursePageComponent,\r\n    SearchBarComponent,\r\n    FilterDialogComponent,\r\n    QuestionEditorComponent,\r\n    FormFieldComponent,\r\n    CoursesComponent,\r\n    UserProfileComponent,\r\n    SearchResultsComponent,\r\n    QuestionPageComponent,\r\n    QuestionCardComponent,\r\n    AnswerCardComponent,\r\n    FindAPartnerEditorComponent,\r\n    CourseReviewEditorComponent,\r\n    SingleAnswerEditorComponent,\r\n    PostEditorComponent,\r\n    MultiSelectAutocompleteComponent,\r\n    InitialDetailsDialogComponent,\r\n    SpinnerComponent,\r\n    FileUploaderComponent,\r\n    CopyToClipboardComponent,\r\n    EmptyStateComponent,\r\n    DeleteConfirmDialogComponent,\r\n    ProfileDetailsDialogComponent,\r\n    ClickableProfilePictureComponent,\r\n    NotificationsCardComponent,\r\n    NotificationComponent,\r\n    NotificationHostDirective,\r\n    NotificationSettingsDialogComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({appId: 'tau-overflow'}),\r\n    AppRoutingModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    BrowserAnimationsModule,\r\n    MatAutocompleteModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatTabsModule,\r\n    MatListModule,\r\n    MatChipsModule,\r\n    MatSelectModule,\r\n    MatDialogModule,\r\n    AngularEditorModule,\r\n    HttpClientModule,\r\n    MatCheckboxModule,\r\n    MatSnackBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatTooltipModule,\r\n    MatExpansionModule,\r\n    AngularFireModule.initializeApp(environment.firebase),\r\n    AngularFirestoreModule, // imports firebase/firestore, only needed for database features\r\n    AngularFireAuthModule, // imports firebase/auth, only needed for auth features\r\n    AngularFireMessagingModule,\r\n    AngularFireDatabaseModule,\r\n    MatBadgeModule,\r\n    ClipboardModule,\r\n    MatMenuModule,\r\n    MatSlideToggleModule,\r\n  ],\r\n  providers: [\r\n    QuestionService,\r\n    AnswerService,\r\n    ReviewService,\r\n    PartnerPostService,\r\n    AuthService,\r\n    AppService,\r\n    AppRoutingDataService,\r\n    UserService,\r\n    AuthGuard,\r\n    HttpRequestsService,\r\n    CourseService,\r\n    MessagingService,\r\n    AsyncPipe\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [\r\n    FilterDialogComponent,\r\n    DeleteConfirmDialogComponent,\r\n    InitialDetailsDialogComponent,\r\n    ProfileDetailsDialogComponent,\r\n    NotificationComponent,\r\n    NotificationSettingsDialogComponent,\r\n  ]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {ServerModule} from '@angular/platform-server';\r\nimport {ModuleMapLoaderModule} from '@nguniversal/module-map-ngfactory-loader';\r\n\r\nimport {AppModule} from './app.module';\r\nimport {AppComponent} from './app.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    // The AppServerModule should import your AppModule followed\r\n    // by the ServerModule from @angular/platform-server.\r\n    AppModule,\r\n    ServerModule,\r\n    ModuleMapLoaderModule // <-- *Important* to have lazy-loaded routes work\r\n  ],\r\n  // Since the bootstrapped component is not inherited from your\r\n  // imported AppModule, it needs to be repeated here.\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppServerModule {}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AppService {\r\n  url = 'http://localhost:3000/';\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getResponse(what: string): Observable<any> {\r\n    return this.http.get(this.url + what).pipe(map((response: any) => response));\r\n  }\r\n}\r\n\r\n","<mat-form-field class=\"AutocompleteField {{editorCss}} {{outlineCss}}\" appearance=\"{{appearance}}\">\r\n  <input type=\"text\" placeholder=\"{{placeholder}}\" aria-label=\"Number\" matInput [formControl]=\"myControl\"\r\n         [matAutocomplete]=\"auto\" [required]=\"isRequired\" #input>\r\n  <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"emitOption($event)\">\r\n    <mat-option class=\"Option\" *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\r\n      {{option}}\r\n    </mat-option>\r\n  </mat-autocomplete>\r\n  <mat-hint *ngIf=\"!isRequired && !isCourseSearch\">[optional]</mat-hint>\r\n  <mat-hint *ngIf=\"isRequired\">[required]</mat-hint>\r\n</mat-form-field>\r\n","import {Component, ElementRef, EventEmitter, forwardRef, Input, OnInit, Output, ViewChild} from '@angular/core';\r\nimport {FormControl, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport {MatAutocompleteSelectedEvent} from '@angular/material';\r\nimport {UiCourse} from '../models/ui-course.model';\r\nimport {Program} from '../models/program.model';\r\n\r\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => AutocompleteComponent),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n  selector: 'app-autocomplete',\r\n  templateUrl: './autocomplete.component.html',\r\n  styleUrls: ['./autocomplete.component.scss'],\r\n  providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR]\r\n})\r\nexport class AutocompleteComponent implements OnInit {\r\n  @ViewChild('input') inputEl: ElementRef;\r\n\r\n  myControl = new FormControl();\r\n  @Input() options: Program[] | UiCourse[];\r\n  @Input() editorCss: string;\r\n  @Input() placeholder: string;\r\n  @Input() isCourseSearch: boolean;\r\n  @Input() isRequired = true;\r\n  @Input() selectedOption: string;\r\n\r\n  @Output() private optionSelected = new EventEmitter<string>();\r\n\r\n  displayOptions: string[];\r\n\r\n  filteredOptions: Observable<string[]>;\r\n  appearance = 'fill';\r\n  outlineCss: string;\r\n  // defaultOptions: string[] = ['Calculus 1b', 'Intro to CS', 'Linear Algebra', 'Discrete Mathematics', 'Complexity',\r\n  //   'Micro-Economics', 'Funding', 'Statistics'];\r\n\r\n  private _isSelectionValid(): boolean {\r\n    return this.displayOptions.indexOf(this.inputEl.nativeElement.value) > -1;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.displayOptions = this._parseOptions();\r\n    if (this.selectedOption) {\r\n      this.myControl.setValue(this.selectedOption);\r\n    }\r\n    this.filteredOptions = this.myControl.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => this._filter(value))\r\n      );\r\n    if (this.isCourseSearch) {\r\n      this.appearance = 'outline';\r\n      this.outlineCss = 'AutocompleteOutline';\r\n    }\r\n  }\r\n\r\n  private _filter(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n    const optionsToFilter = this.displayOptions;\r\n    return optionsToFilter.filter(option => option.toLowerCase().includes(filterValue)\r\n      && option !== this.selectedOption);\r\n  }\r\n\r\n  getSelection(): string {\r\n    let selection: string = null;\r\n    if (this.inputEl && this._isSelectionValid()) {\r\n      selection = this.inputEl.nativeElement.value;\r\n    }\r\n    return selection;\r\n  }\r\n\r\n  emitOption(selectedOption: MatAutocompleteSelectedEvent) {\r\n    this.optionSelected.emit(selectedOption.option.value);\r\n  }\r\n\r\n  private _parseOptions(): string[] {\r\n    if (!this.options || this.options.length === 0) {\r\n      return [];\r\n    }\r\n    const isProgramSelection = this.options[0] instanceof Program;\r\n    if (isProgramSelection) {\r\n      return (<Program[]>(this.options)).map((option: Program) => option.name);\r\n    }\r\n    return (<UiCourse[]>(this.options)).map((option: UiCourse) => option.name + ' - ' + option.courseNumber);\r\n  }\r\n}\r\n","<button mat-fab class=\"ImageButton\" (click)=\"seeUser()\" *ngIf=\"owner\">\r\n  <img *ngIf=\"!owner.image\" src=\"{{defaultImage}}\"\r\n       class=\"CardProfileImage\">\r\n  <img *ngIf=\"owner.image\" src=\"data:image/png;base64,{{owner.image}}\"\r\n       class=\"CardProfileImage\">\r\n</button>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {MatDialog, MatDialogConfig} from '@angular/material';\r\nimport {ProfileDetailsDialogComponent} from '../profile-details-dialog/profile-details-dialog.component';\r\nimport {UserService} from '../services/user.service';\r\nimport {Router} from '@angular/router';\r\nimport {UserProfile} from '../models/user-profile.model';\r\n\r\n@Component({\r\n  selector: 'app-clickable-profile-picture',\r\n  templateUrl: './clickable-profile-picture.component.html',\r\n  styleUrls: ['./clickable-profile-picture.component.scss']\r\n})\r\nexport class ClickableProfilePictureComponent implements OnInit {\r\n  @Input() owner: UserProfile;\r\n  @Input() isUserOwner: boolean;\r\n\r\n  defaultImage = '../../assets/avatar.png';\r\n\r\n  constructor(private userService: UserService,\r\n              private router: Router,\r\n              private dialog: MatDialog) {}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  seeUser() {\r\n    if (this.isUserOwner) {\r\n      this.userService.getUser().then((user) => {\r\n        this.router.navigate(['user-profile'],\r\n          {queryParams: {id: user.firebaseToken}});\r\n      });\r\n    } else {\r\n      this._showUserDetails();\r\n    }\r\n  }\r\n\r\n  private _showUserDetails() {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.panelClass = 'ProfileDetailsDialogClass';\r\n    dialogConfig.data = {\r\n      id: 1,\r\n      user: this.owner\r\n    };\r\n    this.dialog.open(ProfileDetailsDialogComponent, dialogConfig);\r\n  }\r\n\r\n}\r\n","<div class=\"ContactDetailsContainer\">\r\n  <button matTooltip=\"Copy to clipboard\"\r\n          (click)=\"copyEmail(email)\" mat-icon-button class=\"EmailIconButton\">\r\n    <mat-icon>mail_outline</mat-icon>\r\n  </button>\r\n  <span>{{email}}</span>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {ClipboardService} from 'ngx-clipboard';\r\nimport {MatSnackBar} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-copy-to-clipboard',\r\n  templateUrl: './copy-to-clipboard.component.html',\r\n  styleUrls: ['./copy-to-clipboard.component.scss']\r\n})\r\nexport class CopyToClipboardComponent implements OnInit {\r\n  @Input() public email: string;\r\n  constructor(private snackBar: MatSnackBar, private clipboardService: ClipboardService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  copyEmail(email: string) {\r\n    this.clipboardService.copyFromContent(email);\r\n    this.snackBar.open('Email copied to clipboard', '', {\r\n      duration: 2000 // Prompt the toast 2 seconds.\r\n    });\r\n  }\r\n}\r\n","<app-nav-bar></app-nav-bar>\r\n<div class=\"CardsWrapper\">\r\n  <div class=\"CourseDetailsCardContainer\">\r\n    <mat-card class=\"course-card\">\r\n      <ng-container *ngIf=\"initialDataLoaded\">\r\n        <h4 class=\"CourseTitle\">{{initialDataLoaded ? uiCourse.name : course.uiCourse.name}}</h4>\r\n        <div class=\"CourseNumber\">\r\n          {{initialDataLoaded ? uiCourse.courseNumber : course.uiCourse.courseNumber}}\r\n          <button mat-icon-button *ngIf=\"!isInMyCourses\" matTooltip=\"Add to My Courses\" class=\"Button\" (click)=\"addToMyCourses(uiCourse.id)\">\r\n            <mat-icon class=\"AddCourseIcon\">add_to_queue</mat-icon>\r\n          </button>\r\n          <button mat-icon-button *ngIf=\"isInMyCourses\" matTooltip=\"Remove from My Courses\" class=\"Button\" (click)=\"removeFromMyCourses(uiCourse.id)\">\r\n            <mat-icon class=\"RemoveCourseIcon\">remove_from_queue</mat-icon>\r\n          </button>\r\n        </div>\r\n        <ng-container *ngIf=\"courseDataLoaded\">\r\n          <div *ngIf=\"course.rank != undefined\" class=\"Stars\">\r\n            <mat-icon class=\"Star\" *ngFor=\"let i of range(starsCounter.filledStars)\">star</mat-icon>\r\n            <mat-icon class=\"Star\" *ngIf=\"starsCounter.halfStar\">star_half</mat-icon>\r\n            <mat-icon class=\"Star\" *ngFor=\"let i of range(starsCounter.emptyStars)\">star_border</mat-icon>\r\n          </div>\r\n          <div class=\"mat-body-2 Reviews\"> Reviews: {{course.reviews.length}} </div>\r\n          <div class=\"CoursePageButtonContainer\">\r\n            <button mat-raised-button class=\"CoursePageButton\" color=\"primary\" (click)=\"goToEditor('question')\">Ask a question</button>\r\n            <button mat-raised-button class=\"CoursePageButton\" color=\"primary\" (click)=\"goToEditor('review')\">Write a review</button>\r\n            <button mat-raised-button class=\"CoursePageButton\" color=\"primary\" (click)=\"goToEditor('post')\">Find a partner</button>\r\n            <button mat-raised-button class=\"CoursePageButton\" color=\"primary\" (click)=\"goToEditor('post')\">Change class hours</button>\r\n          </div>\r\n        </ng-container>\r\n      </ng-container>\r\n      <app-spinner *ngIf=\"!initialDataLoaded\"></app-spinner>\r\n    </mat-card>\r\n  </div>\r\n  <div class=\"page\">\r\n    <mat-tab-group class=\"Tabs\" [selectedIndex]=\"postType\">\r\n      <mat-tab label=\"Questions\">\r\n        <app-spinner *ngIf=\"!courseDataLoaded\"></app-spinner>\r\n        <app-empty-state\r\n          [emptyStateMessage]=\"'No questions yet...'\"\r\n          *ngIf=\"courseDataLoaded && course.questions.length == 0\"></app-empty-state>\r\n        <ng-container *ngIf=\"courseDataLoaded && course.questions.length > 0\">\r\n          <mat-list-item class=\"ListItem\" *ngFor=\"let question of course.questions\">\r\n            <button mat-flat-button mat-line class=\"mat-h4 QuestionTitle\" (click)=\"goToQuestion(question)\">\r\n              {{question.subject}}\r\n            </button>\r\n            <span mat-line class=\"NameAndDate\">\r\n              <span>{{question.owner.name.first}} {{question.owner.name.last}}</span>\r\n              <!--<span>{{question.timestamp | date}}</span>-->\r\n            </span>\r\n          </mat-list-item>\r\n        </ng-container>\r\n      </mat-tab>\r\n      <mat-tab label=\"Reviews\">\r\n        <app-spinner *ngIf=\"!courseDataLoaded\"></app-spinner>\r\n        <app-empty-state\r\n          [emptyStateMessage]=\"'No reviews yet...'\"\r\n          *ngIf=\"courseDataLoaded && course.reviews.length == 0\"></app-empty-state>\r\n        <ng-container *ngIf=\"courseDataLoaded && course.reviews.length > 0\">\r\n          <mat-accordion class=\"CoursePageAccordion\">\r\n            <mat-expansion-panel *ngFor=\"let review of course.reviews\" #expansionPanel\r\n                                 class=\"CoursePageExpansionPanel\" [hideToggle]=\"true\">\r\n              <mat-expansion-panel-header>\r\n                <mat-panel-title>\r\n                  <span class=\"CourseReviewSubjectAndRank\">\r\n                    <span>{{review.subject}}</span>\r\n                    <span class=\"SmallStarsContainer\">\r\n                      <mat-icon [inline]=\"true\" class=\"SmallStar\" *ngFor=\"let i of range(review.rank)\">\r\n                        star\r\n                      </mat-icon>\r\n                    </span>\r\n                  </span>\r\n                </mat-panel-title>\r\n                <mat-panel-description class=\"CourseReviewNameAndDate\">\r\n                  <span>{{review.owner.name.first}} {{review.owner.name.last}}</span>\r\n                  <span>{{review.timestamp | date}}</span>\r\n                </mat-panel-description>\r\n              </mat-expansion-panel-header>\r\n              <div [innerHtml]=\"review.content\"></div>\r\n            </mat-expansion-panel>\r\n          </mat-accordion>\r\n        </ng-container>\r\n      </mat-tab>\r\n      <mat-tab label=\"Partners\">\r\n        <app-spinner *ngIf=\"!courseDataLoaded\"></app-spinner>\r\n        <app-empty-state\r\n          [emptyStateMessage]=\"'No one is looking for a partner...'\"\r\n          *ngIf=\"courseDataLoaded && course.partnerPosts.length == 0\"></app-empty-state>\r\n        <ng-container *ngIf=\"courseDataLoaded && course.partnerPosts.length > 0\">\r\n          <mat-accordion class=\"CoursePageAccordion\">\r\n            <mat-expansion-panel *ngFor=\"let partnerPost of course.partnerPosts\"\r\n                                 class=\"CoursePageExpansionPanel\" [hideToggle]=\"true\">\r\n              <mat-expansion-panel-header>\r\n                <mat-panel-title>\r\n                  <span class=\"CourseReviewSubjectAndRank\">\r\n                    <span>{{partnerPost.subject}}</span>\r\n                  </span>\r\n                </mat-panel-title>\r\n                <mat-panel-description class=\"CourseReviewNameAndDate\">\r\n                  <span>{{partnerPost.owner.name.first}} {{partnerPost.owner.name.last}}</span>\r\n                  <span>{{partnerPost.timestamp | date}}</span>\r\n                </mat-panel-description>\r\n              </mat-expansion-panel-header>\r\n              <div [innerHtml]=\"partnerPost.content\"></div>\r\n              <mat-divider class=\"ContactDivider\"></mat-divider>\r\n              <app-copy-to-clipboard [email]=\"partnerPost.owner.email\"></app-copy-to-clipboard>\r\n            </mat-expansion-panel>\r\n          </mat-accordion>\r\n        </ng-container>\r\n      </mat-tab>\r\n      <mat-tab label=\"Change hours\">\r\n        <app-spinner *ngIf=\"!courseDataLoaded\"></app-spinner>\r\n        <app-empty-state\r\n          [emptyStateMessage]=\"'No one is looking to change hours...'\"\r\n          *ngIf=\"courseDataLoaded && course.changeHours.length == 0\"></app-empty-state>\r\n        <ng-container *ngIf=\"courseDataLoaded && course.changeHours.length > 0\">\r\n          <mat-accordion class=\"CoursePageAccordion\">\r\n            <mat-expansion-panel *ngFor=\"let changeHoursPost of course.changeHours\"\r\n                                 class=\"CoursePageExpansionPanel\" [hideToggle]=\"true\">\r\n              <mat-expansion-panel-header>\r\n                <mat-panel-title>\r\n                  <span class=\"CourseReviewSubjectAndRank\">\r\n                    <span>{{changeHoursPost.subject}}</span>\r\n                  </span>\r\n                </mat-panel-title>\r\n                <mat-panel-description class=\"CourseReviewNameAndDate\">\r\n                  <span>{{changeHoursPost.owner.name.first}} {{changeHoursPost.owner.name.last}}</span>\r\n                  <span>{{changeHoursPost.timestamp | date}}</span>\r\n                </mat-panel-description>\r\n              </mat-expansion-panel-header>\r\n              <div [innerHtml]=\"changeHoursPost.content\"></div>\r\n              <mat-divider class=\"ContactDivider\"></mat-divider>\r\n              <app-copy-to-clipboard [email]=\"changeHoursPost.owner.email\"></app-copy-to-clipboard>\r\n            </mat-expansion-panel>\r\n          </mat-accordion>\r\n        </ng-container>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Course} from '../models/course.model';\r\nimport {AppRoutingDataService} from '../app-routing-data.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {UiCourse, UiCourseNavigationData} from '../models/ui-course.model';\r\nimport {CourseService} from '../services/course.service';\r\nimport {Question, QuestionNavigationData} from '../models/question.model';\r\nimport {PostType} from '../models/post.model';\r\nimport {CourseReview} from '../models/course-review.model';\r\nimport {ClipboardService} from 'ngx-clipboard';\r\nimport {MatSnackBar} from '@angular/material';\r\nimport {CourseRelatedPost} from '../models/course-related-post.model';\r\nimport {UserProfile} from '../models/user-profile.model';\r\nimport {UserService} from '../services/user.service';\r\n\r\nclass StarsCounter {\r\n  filledStars: number;\r\n  halfStar = 0;\r\n  emptyStars: number;\r\n\r\n  constructor(rank: number) {\r\n    const fraction = rank % 1;\r\n    this.filledStars = rank - fraction;\r\n    if (fraction >= 0.5) {\r\n      this.halfStar++;\r\n    } else if (fraction > 0) {\r\n      this.filledStars++;\r\n    }\r\n    this.emptyStars = 5 - this.filledStars - this.halfStar;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-course-page',\r\n  templateUrl: './course-page.component.html',\r\n  styleUrls: ['./course-page.component.scss']\r\n})\r\nexport class CoursePageComponent implements OnInit {\r\n  uiCourse: UiCourse; // Passed in client side navigation.\r\n  course: Course; // Fetched from server.\r\n  courseDataLoaded: boolean;\r\n  initialDataLoaded: boolean;\r\n  reviews: CourseReview[];\r\n  courseReviewId: string;\r\n  starsCounter: StarsCounter;\r\n  user: UserProfile;\r\n  isInMyCourses = false;\r\n  @Input() postType: PostType;\r\n\r\n  constructor(private routingDataService: AppRoutingDataService,\r\n              private courseService: CourseService,\r\n              private router: Router,\r\n              private route: ActivatedRoute,\r\n              private snackBar: MatSnackBar,\r\n              private userService: UserService,\r\n              private clipboardService: ClipboardService) {\r\n  }\r\n\r\n  range(rank: number) {\r\n    return Array(rank - (rank % 1));\r\n  }\r\n\r\n  ngOnInit() {\r\n    let courseId;\r\n    this.userService.getUser().then((user: UserProfile) => {\r\n      this.route.queryParams.subscribe(\r\n        params => {\r\n          this.postType = params.tab ? params.tab : PostType.QUESTION;\r\n          courseId = params.courseId;\r\n          const routingData = this.routingDataService.getRoutingData(courseId);\r\n          this.user = user;\r\n          if (routingData) {\r\n            this.uiCourse = routingData.getData();\r\n            this._checkMyCourses();\r\n            this.initialDataLoaded = true;\r\n          }\r\n          // this.courseReviewId = params.reviewId ? params.reviewId : undefined;\r\n          this.courseService.getCourse(courseId).subscribe((course: any) => {\r\n            this.course = Course.deserialize(course);\r\n            this.starsCounter = new StarsCounter(this.course.rank);\r\n            if (!this.uiCourse) {\r\n              this.uiCourse = this.course.uiCourse;\r\n              this._checkMyCourses();\r\n              this.initialDataLoaded = true;\r\n            }\r\n            this.courseDataLoaded = true;\r\n          });\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  private _checkMyCourses() {\r\n    this.isInMyCourses = this.user.myCourses.map((uiCourse: UiCourse) => {\r\n      return uiCourse.id;\r\n    }).includes(this.uiCourse.id);\r\n  }\r\n\r\n  goToQuestion(question: Question) {\r\n    this.routingDataService.setRoutingData('question', new QuestionNavigationData(question));\r\n    this.router.navigate(['question-page'], {queryParams: {id: question.id}});\r\n  }\r\n\r\n  goToEditor(goTo: string) {\r\n    this.routingDataService.setRoutingData('selectedCourses', new UiCourseNavigationData(this.uiCourse));\r\n    switch (goTo) {\r\n      case 'question': {\r\n        this.router.navigate(['/question-editor']);\r\n        break;\r\n      }\r\n      case 'review': {\r\n        this.router.navigate(['/course-review-editor']);\r\n        break;\r\n      }\r\n      case 'post': {\r\n        this.router.navigate(['/find-a-partner-editor']);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  addToMyCourses(id: string) {\r\n    this.isInMyCourses = true;\r\n    this.user.myCourses.push(this.uiCourse);\r\n    this._updateMyCourses();\r\n  }\r\n\r\n  removeFromMyCourses(id: string) {\r\n    this.isInMyCourses = false;\r\n    const index = this.user.myCourses.map((uiCourse: UiCourse) => uiCourse.id)\r\n      .indexOf(this.uiCourse.id, 0);\r\n    if (index > -1) {\r\n      this.user.myCourses.splice(index, 1);\r\n    }\r\n    this._updateMyCourses();\r\n  }\r\n\r\n  copyEmail(post: CourseRelatedPost) {\r\n    this.clipboardService.copyFromContent(post.owner.email);\r\n    this.snackBar.open('Email copied to clipboard', '', {\r\n      duration: 2000 // Prompt the toast 2 seconds.\r\n    });\r\n  }\r\n\r\n  private _updateMyCourses() {\r\n    this.userService.updateMyCourses(this.user, this.uiCourse.id).subscribe(() => {});\r\n  }\r\n}\r\n","<app-nav-bar></app-nav-bar>\r\n<app-post-editor (postSubmitted)=\"postReview($event)\"\r\n                 [postTitle]=\"(isCourseChosen? (course.name) : 'Add a Course') + ' Review'\"\r\n                 [titleLabel]=\"'Add review title'\"\r\n                 [descriptionTitle]=\"'Review'\"\r\n                 [isCourseChosen]=\"isCourseChosen\"\r\n                 [isCourseReview]=\"true\">\r\n  <div class=\"StarsContainer\">\r\n    <div class=\"StarContainer\" *ngFor=\"let i of [1,2,3,4,5]\">\r\n      <mat-icon class=\"Star\" *ngIf=\"numOfStars >= i\" (click)=\"updateStars(i)\">star</mat-icon>\r\n      <mat-icon class=\"Star\" *ngIf=\"numOfStars < i\" (click)=\"updateStars(i)\">star_border</mat-icon>\r\n    </div>\r\n  </div>\r\n</app-post-editor>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {AngularEditorConfig} from '@kolkov/angular-editor';\r\nimport {UserProfile} from '../models/user-profile.model';\r\nimport {UserService} from '../services/user.service';\r\nimport {CourseService} from '../services/course.service';\r\nimport {ReviewService} from '../services/review.service';\r\nimport {Router} from '@angular/router';\r\nimport {AppRoutingDataService} from '../app-routing-data.service';\r\nimport {UiCourse} from '../models/ui-course.model';\r\nimport {UiCoursesMap} from '../models/ui-courses-map.model';\r\nimport {PostContent} from '../post-editor/post-editor.component';\r\nimport {CourseReview} from '../models/course-review.model';\r\nimport {MatSnackBar} from '@angular/material';\r\nimport {PostType} from '../models/post.model';\r\n\r\n@Component({\r\n  selector: 'app-course-review-editor',\r\n  templateUrl: './course-review-editor.component.html',\r\n  styleUrls: ['./course-review-editor.component.scss']\r\n})\r\nexport class CourseReviewEditorComponent implements OnInit {\r\n\r\n  course: UiCourse;\r\n  user: UserProfile;\r\n  coursesMap: UiCoursesMap;\r\n  isCourseChosen = false;\r\n  numOfStars = 0;\r\n\r\n  constructor(private userService: UserService,\r\n              private courseService: CourseService,\r\n              private reviewService: ReviewService,\r\n              private router: Router,\r\n              private snackBar: MatSnackBar,\r\n              private routingDataService: AppRoutingDataService) {}\r\n\r\n  ngOnInit() {\r\n    const courses = this.routingDataService.getRoutingData('selectedCourses').getData();\r\n    if (courses) {\r\n      this.isCourseChosen = true;\r\n      this.course = courses[0];\r\n    }\r\n    this.userService.getUser().then((user: UserProfile) => {\r\n      this.user = user;\r\n    });\r\n    this.courseService.waitForCourses().then(() => {\r\n      this.coursesMap = this.courseService.getCoursesMap();\r\n    });\r\n  }\r\n\r\n  updateStars(clickedStar: number): void {\r\n    if (clickedStar === this.numOfStars) {\r\n      --this.numOfStars;\r\n    } else {\r\n      this.numOfStars = clickedStar;\r\n    }\r\n  }\r\n\r\n  postReview(event: PostContent) {\r\n    const subject = event.subject;\r\n    const content = event.content;\r\n    if (this.numOfStars === 0) {\r\n      this.snackBar.open('Please rank the course', '', {\r\n        duration: 2000 // Prompt the toast 2 seconds.\r\n      });\r\n      return;\r\n    }\r\n    const review = new CourseReview(subject, content, this.user.getUiUser(), this.course, this.numOfStars);\r\n    this.user.myCourseReviews.push(review);\r\n    this.reviewService.createReview(review).subscribe((response: any) => {\r\n      review.id = response.data._id;\r\n      this.snackBar.open(this.course.name + ' Review Added!', '', {\r\n        duration: 2000 // Prompt the toast 2 seconds.\r\n      });\r\n      this.router.navigate(\r\n        ['course-page'],\r\n        {queryParams: {courseId: this.course.courseNumber, tab: PostType.REVIEW}});\r\n    });\r\n  }\r\n}\r\n","<app-nav-bar></app-nav-bar>\r\n<div class=\"MainWrapper\">\r\n  <mat-tab-group class=\"CoursesViewTabs\">\r\n    <mat-tab label=\"All Courses\">\r\n      <app-spinner *ngIf=\"!isLoaded\"></app-spinner>\r\n      <ng-container *ngIf=\"isLoaded\">\r\n        <mat-list>\r\n          <mat-list-item class=\"ListItem\" *ngFor=\"let course of allCourses\">\r\n            <button mat-flat-button mat-line class=\"mat-h4 CourseName\" (click)=\"navigateToCoursePage(course)\">\r\n              <span class=\"AllCoursesCourseName\">{{course.name}}</span>\r\n              <mat-icon class=\"CourseIcon AllCoursesIcon\">school</mat-icon>\r\n            </button>\r\n            <span mat-line class=\"CourseNum\">\r\n            {{course.courseNumber}}\r\n          </span>\r\n          </mat-list-item>\r\n          <mat-divider></mat-divider>\r\n        </mat-list>\r\n      </ng-container>\r\n    </mat-tab>\r\n    <mat-tab label=\"My Courses\">\r\n      <app-spinner *ngIf=\"!isUserCoursesLoaded\"></app-spinner>\r\n      <ng-container *ngIf=\"isUserCoursesLoaded\">\r\n        <mat-list>\r\n          <mat-list-item class=\"ListItem\" *ngFor=\"let course of myCourses\">\r\n            <div mat-line class=\"CourseHeader\">\r\n              <button mat-flat-button class=\"mat-h4 MyCoursesCourseName\"\r\n                      (click)=\"navigateToCoursePage(course)\">\r\n                {{course.name}}\r\n                <mat-icon class=\"CourseIcon\">school</mat-icon>\r\n              </button>\r\n              <button mat-icon-button class=\"RemoveFromMyCourses\" (click)=\"removeFromMyCourses(course)\">\r\n                <mat-icon class=\"CourseIcon RemoveIcon\">remove_circle_outline</mat-icon>\r\n              </button>\r\n            </div>\r\n            <span mat-line class=\"CourseNum\">\r\n            <span>{{course.courseNumber}}</span>\r\n          </span>\r\n          </mat-list-item>\r\n        </mat-list>\r\n        <button *ngIf=\"myCourses.length > 0\" mat-flat-button class=\"AddToMyCoursesContainer\" (click)=\"addCourses()\">\r\n          Add more courses...\r\n          <mat-icon class=\"AddCoursesIcon\">playlist_add</mat-icon>\r\n        </button>\r\n        <ng-container *ngIf=\"isUserCoursesLoaded && myCourses.length == 0\">\r\n          <button mat-flat-button class=\"AddToMyCoursesContainer\" (click)=\"addCourses()\">\r\n            You didn't choose your courses yet...\r\n            <mat-icon class=\"AddCoursesIcon\">playlist_add</mat-icon>\r\n          </button>\r\n        </ng-container>\r\n      </ng-container>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n  <div class=\"SearchContainer\" *ngIf=\"isLoaded\">\r\n    <app-autocomplete [isRequired]=\"false\"\r\n                      [isCourseSearch]=\"true\"\r\n                      class=\"AutocompleteCourses\"\r\n                      [options]=\"allCourses\"\r\n                      (optionSelected)=\"navigateToCoursePage($event)\"\r\n                      [placeholder]=\"'Search a course...'\">\r\n    </app-autocomplete>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AppService} from '../app.service';\r\nimport {AppRoutingDataService, RoutingData} from '../app-routing-data.service';\r\nimport {Router} from '@angular/router';\r\nimport {UiCourse} from '../models/ui-course.model';\r\nimport {CourseService} from '../services/course.service';\r\nimport {UiCoursesMap} from '../models/ui-courses-map.model';\r\nimport {UserService} from '../services/user.service';\r\nimport {UserProfile} from '../models/user-profile.model';\r\nimport {MatDialog, MatDialogConfig, MatSnackBar} from '@angular/material';\r\nimport {FilterDialogComponent} from '../filter-dialog/filter-dialog.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-course-page',\r\n  templateUrl: './courses.component.html',\r\n  styleUrls: ['./courses.component.scss']\r\n})\r\nexport class CoursesComponent implements OnInit {\r\n  static CourseNavigationData = class implements RoutingData<UiCourse> {\r\n    constructor(private course: UiCourse) {}\r\n\r\n    getData(): UiCourse {\r\n      return this.course;\r\n    }\r\n  };\r\n\r\n  isLoaded = false;\r\n  isUserCoursesLoaded = false;\r\n  allCourses: UiCourse[] = [];\r\n  myCourses: UiCourse[] = [];\r\n  coursesMap: UiCoursesMap;\r\n  user: UserProfile;\r\n\r\n  constructor(private appService: AppService,\r\n              private router: Router,\r\n              private courseService: CourseService,\r\n              private snackBar: MatSnackBar,\r\n              private userService: UserService,\r\n              private routingDataService: AppRoutingDataService,\r\n              private dialog: MatDialog) {\r\n  }\r\n\r\n  navigateToCoursePage(course: UiCourse|string) {\r\n    let uiCourse;\r\n    if (typeof course === 'string') {\r\n      const name = course.split(' - ')[0];\r\n      uiCourse = this.coursesMap[name];\r\n    } else {\r\n      uiCourse = course;\r\n    }\r\n    const courseData = new CoursesComponent.CourseNavigationData(uiCourse);\r\n    this.routingDataService.setRoutingData(uiCourse.courseNumber, courseData);\r\n    this.router.navigate(['/course-page'], { queryParams: { courseId: uiCourse.courseNumber } });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.courseService.waitForCourses().then(() => {\r\n      this.coursesMap = this.courseService.getCoursesMap();\r\n      this.allCourses = this.courseService.getCourses().slice();\r\n      this._sortCourses();\r\n      this.isLoaded = true;\r\n    });\r\n    this.userService.getUser().then((user: UserProfile) => {\r\n      this.user = user;\r\n      this.myCourses = this.user.myCourses;\r\n      this._sortMyCourses();\r\n      this.isUserCoursesLoaded = true;\r\n    });\r\n  }\r\n\r\n  private _sortCourses() {\r\n    this.allCourses.sort((c1, c2) => {\r\n      if (c1.name > c2.name) { return 1; }\r\n      if (c1.name < c2.name) { return -1; }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  private _sortMyCourses() {\r\n    this.myCourses.sort((c1, c2) => {\r\n      if (c1.name > c2.name) { return 1; }\r\n      if (c1.name < c2.name) { return -1; }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  async addCourses() {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.width = '500px';\r\n    dialogConfig.data = {title: 'Select your courses', selected: []};\r\n    await this.courseService.waitForCourses();\r\n    this.dialog.open(FilterDialogComponent, dialogConfig).afterClosed().subscribe(\r\n      (result: string[]) => {\r\n        if (result) {\r\n          this._addToMyCourses(result);\r\n        }\r\n      });\r\n  }\r\n\r\n  removeFromMyCourses(course: UiCourse) {\r\n    const courseId = course.id;\r\n    const index = this.user.myCourses.map((uiCourse: UiCourse) => uiCourse.id)\r\n      .indexOf(courseId, 0);\r\n    if (index > -1) {\r\n      this.user.myCourses.splice(index, 1);\r\n    }\r\n    this._removeCourseFromMyCourses(courseId);\r\n  }\r\n  private _addToMyCourses(result: string[]) {\r\n    const courseIds: string[] = [];\r\n    result.forEach(courseName => {\r\n      const uiCourse = this.coursesMap[courseName];\r\n      const index = this.user.myCourses.map(course => course.id).indexOf(uiCourse.id);\r\n      if (index === -1) {\r\n        this.user.myCourses.push(uiCourse);\r\n        courseIds.push(uiCourse.id);\r\n      }\r\n    });\r\n    this._updateMyCourses(courseIds);\r\n  }\r\n\r\n  private _toast(msg: string) {\r\n    this.snackBar.open(msg, '', {\r\n      duration: 2000 // Prompt the toast 2 seconds.\r\n    });\r\n  }\r\n\r\n  private _updateMyCourses(courseIds: string[]) {\r\n    this.userService.addToMyCourses(this.user, courseIds).subscribe(() => {\r\n      this._toast('Course' + (courseIds.length > 1 ? 's' : '') + ' added successfully');\r\n    });\r\n  }\r\n\r\n  private _removeCourseFromMyCourses(courseId: string) {\r\n    this.userService.removeFromMyCourses(this.user, courseId).subscribe(() => {\r\n      this._toast('Course removed successfully');\r\n    });\r\n  }\r\n}\r\n","<div class=\"DeleteDialog\">\r\n  <h1 mat-dialog-title class=\"DeleteDialogTitle\">{{title}}</h1>\r\n  <mat-dialog-content class=\"DeleteDialogContent\">\r\n    <p [innerHTML]=\"text\"></p>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions class=\"DeleteDialogDoneButtonContainer\">\r\n    <button mat-raised-button class=\"DeleteButton\" (click)=\"cancel()\">Cancel</button>\r\n    <button mat-raised-button class=\"DeleteButton\" (click)=\"delete()\" color=\"primary\">Delete</button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import {\r\n  Component, OnInit, HostListener,\r\n  Inject\r\n} from '@angular/core';\r\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-delete-confirm-dialog',\r\n  templateUrl: './delete-confirm-dialog.component.html',\r\n  styleUrls: ['./delete-confirm-dialog.component.scss']\r\n})\r\nexport class DeleteConfirmDialogComponent implements OnInit {\r\n  title = 'Remove Post';\r\n  text = 'Are you sure you want to delete this post?\\n\\nAfter deletion this post will no longer appear in site';\r\n  shouldRemove = false;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<DeleteConfirmDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) data) {\r\n    this.title = data.title;\r\n    this.text = data.text;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close(this.shouldRemove);\r\n  }\r\n\r\n  delete() {\r\n    this.shouldRemove = true;\r\n    this.close();\r\n  }\r\n\r\n  cancel() {\r\n    this.close();\r\n  }\r\n\r\n  @HostListener('keydown.esc')\r\n  public onEsc() {\r\n    this.close();\r\n  }\r\n\r\n}\r\n","<div class=\"EmptyState\">{{emptyStateMessage}}</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-empty-state',\r\n  templateUrl: './empty-state.component.html',\r\n  styleUrls: ['./empty-state.component.scss']\r\n})\r\nexport class EmptyStateComponent implements OnInit {\r\n  @Input() emptyStateMessage: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<button mat-raised-button class=\"FileUploaderRaisedButton\" (click)=\"clickInput()\" color=\"primary\" *ngIf=\"!image\">\r\n  Choose a photo...\r\n</button>\r\n<div *ngIf=\"image\" class=\"AfterImageSelected\">\r\n  <img class=\"UploadedImage\" src=\"data:image/png;base64,{{image}}\">\r\n  <div class=\"IconButtonsContainer\">\r\n    <button mat-icon-button matTooltip=\"Select new image\" (click)=\"clickInput()\" class=\"ImageSelectorIconButton\">\r\n      <mat-icon class=\"ImageSelectorIcon\">edit</mat-icon>\r\n    </button>\r\n    <button mat-icon-button matTooltip=\"Remove selected image\" (click)=\"removeImage()\" class=\"ImageSelectorIconButton\">\r\n      <mat-icon class=\"ImageSelectorIcon\">cancel</mat-icon>\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n<input type=\"file\" hidden (change)=\"addSelectedPhoto($event)\" #inputFilePicker>\r\n","import {Component, ElementRef, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-file-uploader',\r\n  templateUrl: './file-uploader.component.html',\r\n  styleUrls: ['./file-uploader.component.scss']\r\n})\r\nexport class FileUploaderComponent implements OnInit {\r\n  @ViewChild('inputFilePicker') input: ElementRef;\r\n  @Output() imageSelected = new EventEmitter<string>();\r\n  image: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  convertImage(file: any) {\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = this._handleReaderLoaded.bind(this);\r\n      reader.readAsBinaryString(file);\r\n    }\r\n  }\r\n\r\n  private _handleReaderLoaded(readerEvt) {\r\n    const binaryString = readerEvt.target.result;\r\n    this.image = btoa(binaryString);\r\n    this.imageSelected.emit(this.image);\r\n  }\r\n\r\n  addSelectedPhoto(event: any) {\r\n    this.convertImage(event.target.files[0]);\r\n  }\r\n\r\n  clickInput() {\r\n    this.input.nativeElement.click();\r\n  }\r\n\r\n  removeImage() {\r\n    this.image = '';\r\n    this.imageSelected.emit(this.image);\r\n  }\r\n}\r\n","<div class=\"FilterDialog\">\r\n  <h1 mat-dialog-title class=\"DialogTitle\">{{title}}</h1>\r\n  <mat-dialog-content class=\"DialogContent\">\r\n    <app-multi-select-autocomplete [placeholder]=\"'Type course name'\" [selectedOptions]=\"selected\" #multiSelect\r\n                                   (inputChanged)=\"maybeDisableButton($event)\" [options]=\"courses\">\r\n    </app-multi-select-autocomplete>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions class=\"ChooseButtonContainer\">\r\n    <button mat-raised-button class=\"ChooseButton\" (click)=\"close()\" *ngIf=\"isSearch\" #chooseButton\r\n            [disabled]=\"disabled\">Choose</button>\r\n    <button mat-raised-button class=\"ChooseButton\" (click)=\"close()\" [disabled]=\"disabled\"\r\n            *ngIf=\"!isSearch\" #chooseButton>Choose</button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import {Component, OnInit, Inject, ViewChild} from '@angular/core';\r\nimport {MatDialogRef, MAT_DIALOG_DATA, MatButton} from '@angular/material';\r\nimport {MultiSelectAutocompleteComponent} from '../multi-select-autocomplete/multi-select-autocomplete.component';\r\nimport {CourseService} from '../services/course.service';\r\nimport {UiCourse} from '../models/ui-course.model';\r\n\r\n@Component({\r\n  selector: 'app-filter-dialog',\r\n  templateUrl: './filter-dialog.component.html',\r\n  styleUrls: ['./filter-dialog.component.scss']\r\n})\r\nexport class FilterDialogComponent implements OnInit {\r\n  title = 'Choose Relevant Courses';\r\n  isSearch: boolean;\r\n  @ViewChild('chooseButton') chooseButton: MatButton;\r\n  @ViewChild('multiSelect') multiSelectAutocomplete: MultiSelectAutocompleteComponent;\r\n  selected: string[] = [];\r\n  disabled = true;\r\n  courses: UiCourse[] = this.courseService.getCourses();\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<FilterDialogComponent>,\r\n    private courseService: CourseService,\r\n    @Inject(MAT_DIALOG_DATA) data) {\r\n    this.title = data.title;\r\n    this.isSearch = data.isSearch;\r\n    this.selected = data.selected;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.disabled = this.selected.length === 0;\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close(this.multiSelectAutocomplete.getSelectedOptions());\r\n  }\r\n\r\n  maybeDisableButton(event: number) {\r\n    this.chooseButton.disabled = event === 0;\r\n  }\r\n}\r\n","<app-nav-bar></app-nav-bar>\r\n<app-post-editor (postSubmitted)=\"postPartnerFind($event)\"\r\n  [postTitle]=\"'Find A Partner' + (isCourseChosen? (' - ' + (course.name)) : '')\"\r\n  [titleLabel]=\"'Add post title'\"\r\n  [isCourseChosen]=\"isCourseChosen\"\r\n  [descriptionTitle]=\"'Post'\">\r\n</app-post-editor>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {AngularEditorConfig} from '@kolkov/angular-editor';\r\nimport {UiCourse} from '../models/ui-course.model';\r\nimport {UserProfile} from '../models/user-profile.model';\r\nimport {UiCoursesMap} from '../models/ui-courses-map.model';\r\nimport {UserService} from '../services/user.service';\r\nimport {CourseService} from '../services/course.service';\r\nimport {Router} from '@angular/router';\r\nimport {PartnerPostService} from '../services/partner-post.service';\r\nimport {MatSnackBar} from '@angular/material';\r\nimport {AppRoutingDataService} from '../app-routing-data.service';\r\nimport {PostContent} from '../post-editor/post-editor.component';\r\nimport {PartnerPost} from '../models/partner-post.model';\r\nimport {PostType} from '../models/post.model';\r\n\r\n@Component({\r\n  selector: 'app-find-a-partner-editor',\r\n  templateUrl: './find-a-partner-editor.component.html',\r\n  styleUrls: ['./find-a-partner-editor.component.scss']\r\n})\r\nexport class FindAPartnerEditorComponent implements OnInit {\r\n\r\n  course: UiCourse;\r\n  user: UserProfile;\r\n  coursesMap: UiCoursesMap;\r\n  isCourseChosen = false;\r\n\r\n  constructor(private userService: UserService,\r\n              private courseService: CourseService,\r\n              private partnerPostService: PartnerPostService,\r\n              private router: Router,\r\n              private snackBar: MatSnackBar,\r\n              private routingDataService: AppRoutingDataService) {}\r\n\r\n  ngOnInit() {\r\n    const courses = this.routingDataService.getRoutingData('selectedCourses').getData();\r\n    if (courses) {\r\n      this.isCourseChosen = true;\r\n      this.course = courses[0];\r\n    }\r\n    this.userService.getUser().then((user: UserProfile) => {\r\n      this.user = user;\r\n    });\r\n    this.courseService.waitForCourses().then(() =>\r\n      this.coursesMap = this.courseService.getCoursesMap()\r\n    );\r\n  }\r\n\r\n  postPartnerFind(event: PostContent) {\r\n    const subject = event.subject;\r\n    const content = event.content;\r\n    const partnerPost = new PartnerPost(subject, content, this.user.getUiUser(), this.course);\r\n    this.user.myPartnerPosts.push(partnerPost);\r\n    this.partnerPostService.createPartnerPost(partnerPost).subscribe((response: any) => {\r\n      partnerPost.id = response.data._id;\r\n      this.snackBar.open(this.course.name + ' Partner Post Added!', '', {\r\n        duration: 2000 // Prompt the toast 2 seconds.\r\n      });\r\n      this.router.navigate(\r\n        ['course-page'],\r\n        {queryParams: {courseId: this.course.courseNumber, tab: PostType.PARTNER}});\r\n    });\r\n  }\r\n\r\n}\r\n","<mat-form-field class=\"Field {{isTextarea ? 'TextareaField' : ''}}\" appearance=\"{{appearance}}\">\r\n  <mat-label>{{label}}</mat-label>\r\n  <textarea matInput *ngIf=\"isTextarea\" placeholder=\"\" [(ngModel)]=\"description\"\r\n            [required]=\"isRequired\" [value]=\"''\" #textarea></textarea>\r\n  <input matInput placeholder=\"\" [required]=\"isRequired\" *ngIf=\"!isTextarea\" #input>\r\n</mat-form-field>\r\n","import {AfterViewChecked, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\r\nimport {FileChangeEvent} from '@angular/compiler-cli/src/perform_watch';\r\n\r\n@Component({\r\n  selector: 'app-form-field',\r\n  templateUrl: './form-field.component.html',\r\n  styleUrls: ['./form-field.component.scss']\r\n})\r\nexport class FormFieldComponent implements OnInit {\r\n  @ViewChild('textarea') textarea: ElementRef;\r\n  @ViewChild('input') input: ElementRef;\r\n\r\n  constructor() { }\r\n\r\n  @Input() isRequired: boolean;\r\n  @Input() label: string;\r\n  @Input() isTextarea: boolean;\r\n  @Input() appearance = 'fill';\r\n  @Input() description: string;\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  getContent(): string {\r\n    if (this.isTextarea) {\r\n      return this.textarea.nativeElement.value;\r\n    }\r\n    return this.input.nativeElement.value;\r\n  }\r\n}\r\n","<div class=\"HomePage\">\r\n  <div class=\"NavBarContainer\">\r\n    <app-nav-bar></app-nav-bar>\r\n  </div>\r\n  <app-spinner *ngIf=\"!isUserLoaded\"></app-spinner>\r\n  <div class=\"AllContent\" *ngIf=\"isUserLoaded\">\r\n    <app-profile-details [classes]=\"'ProfileDetails'\"\r\n                         [userToDisplay]=\"user\"\r\n                         class=\"HomeProfileCard\"></app-profile-details>\r\n    <div class=\"MainContent\">\r\n      <div class=\"SearchAndButtonContainer\">\r\n        <div class=\"LogoAndSearch\">\r\n          <div class=\"ImgContainer\" *ngIf=\"!queryResults && !showQuerySpinner\">\r\n            <img class=\"resize\" src=\"../../assets/logo.png\"/>\r\n          </div>\r\n          <div class=\"SearchBarContainer\">\r\n            <app-search-bar #searchBar [isSearchQuestion]=\"true\">\r\n            </app-search-bar>\r\n          </div>\r\n          <app-spinner *ngIf=\"!queryResults && showQuerySpinner\"></app-spinner>\r\n          <div class=\"Results\" *ngIf=\"queryResults\">\r\n            <app-search-results [results]=\"queryResults\"></app-search-results>\r\n          </div>\r\n        </div>\r\n        <div class=\"MainFeatures\" *ngIf=\"!queryResults\">\r\n          <div class=\"Feature\">\r\n            <button mat-fab class=\"FeatureIcon\" (click)=\"openCoursesDialog()\">\r\n              <mat-icon>live_help</mat-icon>\r\n            </button>\r\n            <div class=\"FeatureDescription\">\r\n              <span>Ask a</span>\r\n              <span>question</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"Feature\">\r\n            <button mat-fab class=\"FeatureIcon\" routerLink=\"/find-a-partner-editor\">\r\n              <mat-icon>people</mat-icon>\r\n            </button>\r\n            <span class=\"FeatureDescription\">\r\n            <span>Find a</span>\r\n            <span>partner</span>\r\n          </span>\r\n          </div>\r\n          <div class=\"Feature\">\r\n            <button mat-fab class=\"FeatureIcon\" routerLink=\"/course-review-editor\">\r\n              <mat-icon>rate_review</mat-icon>\r\n            </button>\r\n            <div class=\"FeatureDescription\">\r\n              <span>Add a course</span>\r\n              <span>review</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!--<footer>-->\r\n  <!--<a href=\"https://icons8.com/icon/49015/rocket\">Rocket icon by Icons8</a>-->\r\n  <!--<a href=\"https://icons8.com/icon/103832/bot\">Bot icon by Icons8</a>-->\r\n  <!--<a href=\"https://icons8.com/icon/54717/lego-head\">Lego Head icon by Icons8</a>-->\r\n  <!--<a href=\"https://icons8.com/icon/103830/babys-room\">Babys Room icon by Icons8</a>-->\r\n  <!--<a href=\"https://icons8.com/icon/49079/iron-man\">Iron Man icon by Icons8</a>-->\r\n<!--</footer>-->\r\n","import {Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {MatDialog, MatDialogConfig, MatSnackBar} from '@angular/material';\r\nimport {FilterDialogComponent} from '../filter-dialog/filter-dialog.component';\r\nimport {ActivatedRoute, Params, Router} from '@angular/router';\r\nimport {AppRoutingDataService, RoutingData} from '../app-routing-data.service';\r\nimport {UserProfile} from '../models/user-profile.model';\r\nimport {InitialDetailsDialogComponent} from '../initial-details-dialog/initial-details-dialog.component';\r\nimport {UiCourse} from '../models/ui-course.model';\r\nimport {CourseService} from '../services/course.service';\r\nimport {UserService} from '../services/user.service';\r\nimport {UiCoursesMap} from '../models/ui-courses-map.model';\r\nimport {Question} from '../models/question.model';\r\nimport {MessagingService} from '../services/messaging.service';\r\nimport {QueryService} from '../services/query.service';\r\nimport {SearchBarComponent} from '../search-bar/search-bar.component';\r\nimport {Subscription} from 'rxjs';\r\nimport {ProgramService} from '../services/program.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-home-page',\r\n  templateUrl: './home-page.component.html',\r\n  styleUrls: ['./home-page.component.scss']\r\n})\r\nexport class HomePageComponent implements OnInit, OnDestroy {\r\n  static CourseList = class implements RoutingData<UiCourse[]> {\r\n    constructor(private selectedCourses: UiCourse[]) {\r\n    }\r\n\r\n    getData(): UiCourse[] {\r\n      return this.selectedCourses.slice();\r\n    }\r\n  };\r\n\r\n  @ViewChild('searchBar') searchBar: SearchBarComponent;\r\n  relatedCourses: string[] = [];\r\n  user: UserProfile;\r\n  uiCoursesMap: UiCoursesMap;\r\n  queryResults: Question[];\r\n  selectedQueryFilters: string[] = [];\r\n  query: string;\r\n  showQuerySpinner = false;\r\n  queryParamsSubscribe: Subscription;\r\n  isUserLoaded = false;\r\n\r\n  message;\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private courseService: CourseService,\r\n    private userService: UserService,\r\n    private snackBar: MatSnackBar,\r\n    private programService: ProgramService,\r\n    private messagingService: MessagingService,\r\n    private queryService: QueryService,\r\n    private routingDataService: AppRoutingDataService) {\r\n    this.queryParamsSubscribe = route.queryParams.subscribe((params) => {\r\n      this._checkIfQueryView(params);\r\n    });\r\n    const routingData = this.routingDataService.getRoutingData('user');\r\n    if (routingData) {\r\n      this.user = routingData.getData();\r\n      this.isUserLoaded = true;\r\n      if (this.user.isNewUser) {\r\n        this._openDetailsDialog();\r\n      }\r\n      this.routingDataService.setRoutingData('user', null);\r\n    } else {\r\n      this.userService.getUser(true).then((user: UserProfile) => {\r\n        this.user = user;\r\n        this.isUserLoaded = true;\r\n        if (user.isNewUser) {\r\n          this._openDetailsDialog();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  async openCoursesDialog() {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.width = '500px';\r\n    dialogConfig.data = {title: 'Select related courses', selected: []};\r\n    await this.courseService.waitForCourses();\r\n    this._initCourses();\r\n    this.dialog.open(FilterDialogComponent, dialogConfig).afterClosed().subscribe(\r\n      (result: string[]) => {\r\n        if (result) {\r\n          this._navigateToQuestionEditor(result);\r\n        }\r\n      });\r\n  }\r\n\r\n  private async _navigateToQuestionEditor(result: string[]) {\r\n    const uiCourses: UiCourse[] = [];\r\n    result.forEach(courseName => {\r\n      uiCourses.push(this.uiCoursesMap[courseName]);\r\n    });\r\n    const courseList = new HomePageComponent.CourseList(uiCourses);\r\n    this.routingDataService.setRoutingData('selectedCourses', courseList);\r\n    this.router.navigate(['/question-editor']);\r\n  }\r\n\r\n  private _toast(msg: string) {\r\n    this.snackBar.open(msg, '', {\r\n      duration: 2000 // Prompt the toast 2 seconds.\r\n    });\r\n  }\r\n\r\n  private async _openDetailsDialog() {\r\n    await this.courseService.waitForCourses();\r\n    const programs = await this.programService.getPrograms();\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.width = '500px';\r\n    dialogConfig.data = {title: 'Please add additional information', user: this.user, firstInit: true, programs: programs};\r\n    this._initCourses();\r\n    this.dialog.open(InitialDetailsDialogComponent, dialogConfig).afterClosed().subscribe(\r\n      result => {\r\n        if (!result) {\r\n          this._toast('Please click DONE when finished');\r\n          this._openDetailsDialog();\r\n          return;\r\n        }\r\n        this.user.program = result.program;\r\n        this.user.description = result.description;\r\n        this._addUserSkills(result.skills);\r\n        this.user.image = result.image;\r\n        this.user.isNewUser = false;\r\n        this.userService.updateUserDetails(this.user).subscribe(() => {\r\n          this._toast('User details updated');\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  private _addUserSkills(skills: string[]) {\r\n    skills.forEach(skillName => {\r\n      this.user.skills.push(this.uiCoursesMap[skillName]);\r\n    });\r\n  }\r\n\r\n  private _initCourses(): void {\r\n    if (!this.uiCoursesMap) {\r\n      this.uiCoursesMap = this.courseService.getCoursesMap();\r\n    }\r\n  }\r\n\r\n  private _checkIfQueryView(params: Params) {\r\n    this.queryResults = undefined;\r\n    if (params.query) {\r\n      this.showQuerySpinner = true;\r\n      this.query = params.query;\r\n      this.selectedQueryFilters = params.filters ? params.filters.split(',') : [];\r\n      this._getQueryResults();\r\n    } else {\r\n      this.showQuerySpinner = false;\r\n      if (this.searchBar) {\r\n        this.searchBar.updateElementsWithSearchParams('', []);\r\n      }\r\n    }\r\n  }\r\n\r\n  private _getQueryResults() {\r\n    this.queryService.getQueryResult(this.query, this.selectedQueryFilters).subscribe(\r\n      questions => {\r\n        this.queryResults = this._parseQuestions(questions);\r\n        this.showQuerySpinner = false;\r\n        this.searchBar.updateElementsWithSearchParams(this.query, this.selectedQueryFilters);\r\n      });\r\n  }\r\n\r\n  private _parseQuestions(resQuestions: any[]): Question[] {\r\n    const questions: Question[] = [];\r\n    resQuestions.forEach((question) => questions.push(Question.deserialize(question)));\r\n    return questions;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.queryParamsSubscribe.unsubscribe();\r\n  }\r\n}\r\n","  <div class=\"DetailsDialog\">\r\n  <h1 mat-dialog-title class=\"DetailsDialogTitle\">{{title}}</h1>\r\n  <mat-dialog-content class=\"DetailsDialogContent\">\r\n    <h5 class=\"SmallDialogHeader FirstHeader\">Choose your program:</h5>\r\n    <app-autocomplete class=\"DetailsInput ProgramInput\" [options]=\"programs\" #programAutocomplete [isRequired]=\"true\"\r\n                      [placeholder]=\"'Choose your program'\" [selectedOption]=\"selectedProgram\">\r\n    </app-autocomplete>\r\n    <h5 class=\"SmallDialogHeader\">Add a short description about yourself:</h5>\r\n    <app-form-field class=\"DetailsInput DescriptonInput\" [isTextarea]=\"true\" [label]=\"''\" [appearance]=\"'outline'\" [description]=\"description\"\r\n                    #descriptionField>\r\n    </app-form-field>\r\n    <h5 class=\"SmallDialogHeader\">Add your skills:</h5>\r\n    <app-multi-select-autocomplete class=\"SkillChips\" [placeholder]=\"'Type course name'\"\r\n                                   [isRequired]=\"false\"\r\n                                   [options]=\"courses\" [selectedOptions]=\"selectedSkills\"\r\n                                   #skillsMultiselect>\r\n    </app-multi-select-autocomplete>\r\n    <ng-container *ngIf=\"firstInit\">\r\n      <h5 class=\"SmallDialogHeader\">Upload a photo:</h5>\r\n      <app-file-uploader (imageSelected)=\"saveImage($event)\"></app-file-uploader>\r\n    </ng-container>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions class=\"DetailsDialogDoneButtonContainer\">\r\n    <button mat-raised-button class=\"DetailsDialogDoneButton\" (click)=\"checkFormAndSubmit()\" [disabled]=\"disabled\"\r\n            #doneButton>Done</button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import {Component, Inject, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef, MatSnackBar} from '@angular/material';\r\nimport {AutocompleteComponent} from '../autocomplete/autocomplete.component';\r\nimport {MultiSelectAutocompleteComponent} from '../multi-select-autocomplete/multi-select-autocomplete.component';\r\nimport {FormFieldComponent} from '../form-field/form-field.component';\r\nimport {UserProfile} from '../models/user-profile.model';\r\nimport {CourseService} from '../services/course.service';\r\nimport {Program} from '../models/program.model';\r\nimport {UiCourse} from '../models/ui-course.model';\r\n\r\n@Component({\r\n  selector: 'app-initial-details-dialog',\r\n  templateUrl: './initial-details-dialog.component.html',\r\n  styleUrls: ['./initial-details-dialog.component.scss']\r\n})\r\nexport class InitialDetailsDialogComponent implements OnInit {\r\n  @ViewChild('programAutocomplete') programAutocomplete: AutocompleteComponent;\r\n  @ViewChild('skillsMultiselect') skillsMultiselect: MultiSelectAutocompleteComponent;\r\n  @ViewChild('descriptionField') descriptionField: FormFieldComponent;\r\n  disabled;\r\n  title: string;\r\n  selectedProgram: string;\r\n  description: string;\r\n  selectedSkills: string[];\r\n  user: UserProfile;\r\n  firstInit: boolean;\r\n  programs: Program[];\r\n  courses: UiCourse[] = [];\r\n  private base64Image: string;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<InitialDetailsDialogComponent>,\r\n    private courseService: CourseService,\r\n    @Inject(MAT_DIALOG_DATA) data,\r\n    private snackBar: MatSnackBar) {\r\n    this.title = data.title;\r\n    this.user = data.user;\r\n    this.selectedProgram = data.selectedProgram;\r\n    this.description = data.description;\r\n    this.selectedSkills = data.selectedSkills ? data.selectedSkills : [];\r\n    this.firstInit = data.firstInit;\r\n    this.programs = data.programs;\r\n    this.courses = this.courseService.getCourses();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  checkFormAndSubmit() {\r\n    const program = this.programAutocomplete.getSelection();\r\n    if (!program) {\r\n      this.snackBar.open('Please select a valid program', '', {\r\n        duration: 2000 // Prompt the toast 2 seconds.\r\n      });\r\n    } else {\r\n      this.dialogRef.close({\r\n        program: program,\r\n        description: this.descriptionField.getContent(),\r\n        skills: this.skillsMultiselect.getSelectedOptions(),\r\n        image: this.base64Image\r\n      });\r\n    }\r\n  }\r\n\r\n  saveImage(image: any) {\r\n    this.base64Image = image;\r\n  }\r\n}\r\n","import {Upvote} from './upvote.model';\r\nimport {UiUser} from './ui-user.model';\r\n\r\nexport class Answer {\r\n  id: string;\r\n  content: string;\r\n  upvote: Upvote;\r\n  timestamp = new Date(Date.now());\r\n  owner: UiUser;\r\n  questionId: string;\r\n\r\n  constructor(content: string, owner: UiUser, questionId: string, id?: string, timestamp?: Date,\r\n              upvote?: Upvote) {\r\n    this.content = content;\r\n    if (upvote) {\r\n      this.upvote = upvote;\r\n    } else {\r\n      this.upvote = new Upvote();\r\n    }\r\n    this.owner = owner;\r\n    this.questionId = questionId;\r\n    if (id) {\r\n      this.id = id;\r\n      this.timestamp = timestamp;\r\n    }\r\n  }\r\n\r\n  static deserialize(answer: any): Answer {\r\n    const owner = UiUser.deserialize(answer.owner);\r\n    const timestamp = new Date(answer.timestamp);\r\n    return new Answer(answer.content, owner, answer.questionId, answer._id, timestamp, answer.upvote);\r\n  }\r\n\r\n}\r\n","import {CourseRelatedPost} from './course-related-post.model';\r\n\r\nexport class ChangeHoursPost extends CourseRelatedPost {\r\n}\r\n","import {Post} from './post.model';\r\nimport {UiCourse} from './ui-course.model';\r\nimport {UiUser} from './ui-user.model';\r\n\r\nexport class CourseRelatedPost extends Post {\r\n  uiCourse: UiCourse;\r\n\r\n  constructor(subject: string, content: string, owner: UiUser, uiCourse: UiCourse, id?: string) {\r\n    super(subject, content, owner, id);\r\n    this.uiCourse = uiCourse;\r\n  }\r\n\r\n  static deserialize(dbPost: any): CourseRelatedPost {\r\n    const owner = UiUser.deserialize(dbPost.owner);\r\n    const uiCourse = UiCourse.deserialize(dbPost.course);\r\n    return new CourseRelatedPost(dbPost.subject, dbPost.content, owner, uiCourse, dbPost._id);\r\n  }\r\n}\r\n","import {CourseRelatedPost} from './course-related-post.model';\r\nimport {UiCourse} from './ui-course.model';\r\nimport {UiUser} from './ui-user.model';\r\n\r\nexport class CourseReview extends CourseRelatedPost {\r\n  rank: number;\r\n\r\n  constructor(subject: string, content: string, owner: UiUser, uiCourse: UiCourse, rank: number, id?: string) {\r\n    super(subject, content, owner, uiCourse, id);\r\n    this.rank = rank;\r\n  }\r\n\r\n  static deserialize(dbReview: any): CourseReview {\r\n    const owner = UiUser.deserialize(dbReview.owner);\r\n    const uiCourse = UiCourse.deserialize(dbReview.course);\r\n    return new CourseReview(dbReview.subject, dbReview.content, owner, uiCourse, dbReview.rank, dbReview._id);\r\n  }\r\n}\r\n","import {CourseReview} from './course-review.model';\r\nimport {Question} from './question.model';\r\nimport {PartnerPost} from './partner-post.model';\r\nimport {Post} from './post.model';\r\nimport {UiCourse} from './ui-course.model';\r\nimport {CourseRelatedPost} from './course-related-post.model';\r\n\r\nexport class Course {\r\n  uiCourse: UiCourse;\r\n  questions: Question[] = [];\r\n  reviews: CourseReview[] = [];\r\n  partnerPosts: PartnerPost[] = [];\r\n  changeHours: Post[] = [];\r\n  rank = 0;\r\n\r\n  constructor(uiCourse: UiCourse) {\r\n    this.uiCourse = uiCourse;\r\n  }\r\n\r\n  static deserialize(dbCourse: any): Course {\r\n    const uiCourse = new UiCourse(dbCourse._id, dbCourse.name, dbCourse.courseNumber);\r\n    const course = new Course(uiCourse);\r\n    dbCourse.questions.forEach((dbQuestion) => {\r\n      const question = Question.deserialize(dbQuestion);\r\n      course.questions.push(question);\r\n    });\r\n    let rankCounter = 0;\r\n    dbCourse.reviews.forEach((dbReview) => {\r\n      const review = CourseReview.deserialize(dbReview);\r\n      course.reviews.push(review);\r\n      rankCounter += review.rank;\r\n    });\r\n    course.rank = rankCounter === 0 ? 0 : rankCounter / course.reviews.length;\r\n    dbCourse.partnerPosts.forEach((dbPartnerPost) => {\r\n      const partnerPost: PartnerPost = PartnerPost.deserialize(dbPartnerPost);\r\n      course.partnerPosts.push(partnerPost);\r\n    });\r\n    // TODO: add deserialize to changeHours when it is implemented\r\n    return course;\r\n  }\r\n}\r\n","export class Name {\r\n  first: string;\r\n  last: string;\r\n\r\n  constructor(first: string, last: string) {\r\n    this.first = first;\r\n    this.last = last;\r\n  }\r\n}\r\n","import {isUndefined} from 'util';\r\n\r\nexport class NotificationSettings {\r\n  // true iff notifications are enabled when someone answers my question.\r\n  notifyOnMyQuestions;\r\n  // true iff notifications are enabled when someone answers a question I marked as favorite.\r\n  notifyOnMyFavorites;\r\n  // true iff notifications are enabled when someone asked a question in a one of my courses.\r\n  notifyOnMyCourses;\r\n  // true iff notifications are enabled when someone asked a question in a course I'm skilled at.\r\n  notifyOnMySkills;\r\n\r\n  constructor(notifyOnMyQuestions?: boolean,\r\n              notifyOnMyFavorites?: boolean,\r\n              notifyOnMyCourses?: boolean,\r\n              notifyOnMySkills?: boolean) {\r\n    this.notifyOnMyQuestions = isUndefined(notifyOnMyQuestions) ? true : notifyOnMyQuestions;\r\n    this.notifyOnMyFavorites = isUndefined(notifyOnMyFavorites) ? true : notifyOnMyFavorites;\r\n    this.notifyOnMyCourses = isUndefined(notifyOnMyCourses) ? true : notifyOnMyCourses;\r\n    this.notifyOnMySkills = isUndefined(notifyOnMySkills) ? true : notifyOnMySkills;\r\n  }\r\n\r\n  clone(): NotificationSettings {\r\n    return new NotificationSettings(this.notifyOnMyQuestions, this.notifyOnMyFavorites,\r\n      this.notifyOnMyCourses, this.notifyOnMySkills);\r\n  }\r\n\r\n  equals(other: NotificationSettings): boolean {\r\n    return this.notifyOnMySkills === other.notifyOnMySkills &&\r\n      this.notifyOnMyQuestions === other.notifyOnMyQuestions &&\r\n      this.notifyOnMyCourses === other.notifyOnMyCourses &&\r\n      this.notifyOnMyFavorites === other.notifyOnMyFavorites;\r\n  }\r\n}\r\n\r\nexport class NotificationOptions {\r\n  public static readonly MY_QUESTIONS = 'MY_QUESTIONS';\r\n  public static readonly MY_FAVORITES = 'MY_FAVORITES';\r\n  public static readonly MY_COURSES = 'MY_COURSES';\r\n  public static readonly MY_SKILLS = 'MY_SKILLS';\r\n\r\n  private constructor() {}\r\n}\r\n","export class Notification {\r\n  id: string;\r\n  subject: string;\r\n  owner: string;\r\n  timestamp = new Date(Date.now());\r\n  isAnswer: boolean;\r\n  isSeen = false;\r\n  questionId: string;\r\n\r\n  constructor(subject: string, owner: string, isSeen: boolean, isAnswer: boolean,\r\n              questionId: string, id?: string, timestamp?: Date) {\r\n    this.subject = subject;\r\n    this.owner = owner;\r\n    this.isAnswer = isAnswer;\r\n    this.questionId = questionId;\r\n    if (id) {\r\n      this.id = id;\r\n      this.isSeen = isSeen;\r\n      this.timestamp = timestamp;\r\n    }\r\n  }\r\n\r\n  static deserialize(notification: any): Notification {\r\n    const timestamp = new Date(notification.timestamp);\r\n    return new Notification(notification.subject, notification.owner, notification.isSeen,\r\n      notification.isAnswer, notification.questionId, notification._id, timestamp);\r\n  }\r\n  getNotificationWrapper(to: string): NotificationWrapper {\r\n    return new NotificationWrapper(this, to);\r\n  }\r\n\r\n}\r\n\r\nexport class NotificationWrapper {\r\n  notification: Notification;\r\n  to: string;\r\n  constructor(notification, to) {\r\n    this.notification = notification;\r\n    this.to = to;\r\n  }\r\n}\r\n","import {CourseRelatedPost} from './course-related-post.model';\r\n\r\nexport class PartnerPost extends CourseRelatedPost {\r\n}\r\n","import {UiUser} from './ui-user.model';\r\n\r\nexport class Post {\r\n  id: string;\r\n  subject: string;\r\n  content: string;\r\n  owner: UiUser;\r\n  timestamp = new Date(Date.now());\r\n  isLocked = false;\r\n\r\n  constructor(subject: string, content: string, owner: UiUser,\r\n              id?: string, timestamp?: Date, isLocked?: boolean) {\r\n    this.subject = subject;\r\n    this.content = content;\r\n    this.owner = owner;\r\n    if (id) {\r\n      this.id = id;\r\n      this.timestamp = timestamp;\r\n      this.isLocked = isLocked;\r\n    }\r\n  }\r\n}\r\n\r\nexport enum PostType {\r\n  QUESTION, REVIEW, PARTNER, CHANGE_HOURS\r\n}\r\n","export class Program {\r\n  id: string;\r\n  name: string;\r\n\r\n  constructor(id: string, name: string) {\r\n    this.id = id;\r\n    this.name = name;\r\n  }\r\n\r\n  static deserialize(program: any): Program {\r\n    return new Program(program._id, program.name);\r\n  }\r\n}\r\n","import {Post} from './post.model';\r\nimport {Answer} from './answer.model';\r\nimport {Upvote} from './upvote.model';\r\nimport {UiCourse} from './ui-course.model';\r\nimport {RoutingData} from '../app-routing-data.service';\r\nimport {UiUser} from './ui-user.model';\r\n\r\nexport class Question extends Post {\r\n  relatedCourses: UiCourse[];\r\n  answers: Answer[] = [];\r\n  upvote: Upvote;\r\n\r\n  static deserialize(question): Question {\r\n    const owner = UiUser.deserialize(question.owner);\r\n    const relatedCourses = [];\r\n    const answers = [];\r\n    question.answers.forEach((dbAnswer) => {\r\n      const answer = Answer.deserialize(dbAnswer);\r\n      answers.push(answer);\r\n    });\r\n    question.relatedCourses.forEach((course) => {\r\n      const uiCourse = UiCourse.deserialize(course);\r\n      relatedCourses.push(uiCourse);\r\n    });\r\n    const timestamp = new Date(question.timestamp);\r\n    const newQuestion = new Question(question.subject, question.content,\r\n      owner, relatedCourses, answers, question._id, timestamp, question.isLocked);\r\n    if (question.upvote.upvoters !== []) {\r\n      newQuestion.upvote = question.upvote;\r\n    }\r\n    return newQuestion;\r\n  }\r\n\r\n  constructor(subject: string, content: string, owner: UiUser, relatedCourses: UiCourse[],\r\n              answers?: Answer[], id?: string, timestamp?: Date, isLocked?: boolean) {\r\n    super(subject, content, owner, id, timestamp, isLocked);\r\n    this.relatedCourses = relatedCourses;\r\n    if (answers) {\r\n      this.answers = answers;\r\n    }\r\n    this.upvote = new Upvote();\r\n  }\r\n}\r\n\r\nexport class QuestionNavigationData implements RoutingData<Question> {\r\n  constructor(private question: Question) {\r\n  }\r\n\r\n  getData(): Question {\r\n    return this.question;\r\n  }\r\n}\r\n","import {RoutingData} from '../app-routing-data.service';\r\nimport {Question} from './question.model';\r\n\r\nexport class UiCourse {\r\n  id: string;\r\n  name: string;\r\n  courseNumber: string;\r\n\r\n  constructor(id: string, name: string, courseNumber: string) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.courseNumber = courseNumber;\r\n  }\r\n\r\n  static deserialize(course: any): UiCourse {\r\n    return new UiCourse(course._id, course.name, course.courseNumber);\r\n  }\r\n}\r\n\r\nexport class UiCourseNavigationData implements RoutingData<UiCourse[]> {\r\n  constructor(private uiCourse: UiCourse) {\r\n  }\r\n\r\n  getData(): UiCourse[] {\r\n    return [this.uiCourse];\r\n  }\r\n}\r\n","import {Name} from './name.model';\r\n\r\nexport class UiUser {\r\n  id: string;\r\n  firebaseToken: string;\r\n  name: Name;\r\n  email: string;\r\n  image = ''; // TODO(nati): Decide how this should look.\r\n  rank = 0;\r\n\r\n  static deserialize(user: any): UiUser {\r\n    return new UiUser(user.firstName, user.lastName, user.firebaseToken, user.email, user._id, user.image, user.rank);\r\n  }\r\n\r\n  constructor(firstName: string, lastName: string, firebaseToken: string,\r\n              email: string, id?: string, image?: string, rank?: number) {\r\n    this.name = new Name(firstName, lastName);\r\n    this.firebaseToken = firebaseToken;\r\n    this.email = email;\r\n    this.id = id;\r\n    this.image = image;\r\n    this.rank = rank;\r\n  }\r\n}\r\n","export class Upvote {\r\n  count = 0;\r\n  upvoters: string[] = [];\r\n\r\n  constructor() {}\r\n}\r\n","import {Name} from './name.model';\r\nimport {UiCourse} from './ui-course.model';\r\nimport {Question} from './question.model';\r\nimport {PartnerPost} from './partner-post.model';\r\nimport {CourseReview} from './course-review.model';\r\nimport {ChangeHoursPost} from './change-hours-post.model';\r\nimport {UiUser} from './ui-user.model';\r\nimport {Answer} from './answer.model';\r\nimport {NotificationSettings} from './notification-settings.model';\r\n\r\nexport class UserProfile {\r\n  id: string;\r\n  firebaseToken: string;\r\n  name: Name;\r\n  program = '';\r\n  email: string;\r\n  rank = 0;\r\n  image = '';\r\n  asked = 0;\r\n  answered = 0;\r\n  description = '';\r\n  skills: UiCourse[] = [];\r\n  favorites: Question[] = [];\r\n  myQuestions: Question[] = [];\r\n  myAnswers: Answer[] = [];\r\n  myPartnerPosts: PartnerPost[] = [];\r\n  myChangeHoursPosts: ChangeHoursPost[] = [];\r\n  myCourseReviews: CourseReview[] = [];\r\n  myCourses: UiCourse[] = [];\r\n  isNewUser = true;\r\n  notificationSettings: NotificationSettings = new NotificationSettings();\r\n\r\n  static deserialize(user: any): UserProfile {\r\n    const notificationSettings = new NotificationSettings(\r\n      user.notifyOnMyQuestions,\r\n      user.notifyOnMyFavorites,\r\n      user.notifyOnMyCourses,\r\n      user.notifyOnMySkills,\r\n    );\r\n    const userProfile = new UserProfile(user.firebaseToken, user.firstName, user.lastName, user.email,\r\n      false, user._id, user.program, user.rank, user.image,\r\n      user.myQuestions.length, user.myAnswers.length, user.description, notificationSettings);\r\n    user.skills.forEach((dbSkill) => {\r\n      userProfile.skills.push(new UiCourse(dbSkill._id, dbSkill.name, dbSkill.courseNumber));\r\n    });\r\n    user.favorites.forEach((dbFavorite) => {\r\n      const favorite = Question.deserialize(dbFavorite);\r\n      userProfile.favorites.push(favorite);\r\n    });\r\n    user.myQuestions.forEach((dbQuestion) => {\r\n      const question = Question.deserialize(dbQuestion);\r\n      userProfile.myQuestions.push(question);\r\n    });\r\n    user.myPartnerPosts.forEach((dbPartnerPost) => {\r\n      const partnerPost = PartnerPost.deserialize(dbPartnerPost);\r\n      userProfile.myPartnerPosts.push(partnerPost);\r\n    });\r\n    user.myChangeHoursPosts.forEach((dbChangeHour) => {\r\n      const changeHour = ChangeHoursPost.deserialize(dbChangeHour);\r\n      userProfile.myChangeHoursPosts.push(changeHour);\r\n    });\r\n    user.myCourseReviews.forEach((dbCourseReview) => {\r\n      const courseReview = CourseReview.deserialize(dbCourseReview);\r\n      userProfile.myCourseReviews.push(courseReview);\r\n    });\r\n    user.myCourses.forEach((dbMyCourse) => {\r\n      userProfile.myCourses.push(new UiCourse(dbMyCourse._id, dbMyCourse.name, dbMyCourse.courseNumber));\r\n    });\r\n    return userProfile;\r\n  }\r\n\r\n  constructor(token: string, firstName: string, lastName: string,\r\n              email: string, isNewUser?: boolean, id?: string, program?: string,\r\n              rank?: number, image?: string, asked?: number, answered?: number,\r\n              description?: string, notificationSettings?: NotificationSettings) {\r\n    this.firebaseToken = token;\r\n    this.name = new Name(firstName, lastName);\r\n    this.email = email;\r\n    this.isNewUser = isNewUser;\r\n    if (id) {\r\n      this.id = id;\r\n      this.program = program;\r\n      this.rank = rank;\r\n      this.image = image;\r\n      this.description = description;\r\n      this.asked = asked;\r\n      this.answered = answered;\r\n      this.notificationSettings = notificationSettings;\r\n    }\r\n  }\r\n\r\n  getUiUser(): UiUser {\r\n    return new UiUser(this.name.first, this.name.last, this.firebaseToken, this.email, this.id, this.image);\r\n  }\r\n}\r\n","<mat-form-field class=\"AutocompleteField\" appearance=\"fill\" xmlns=\"http://www.w3.org/1999/html\">\r\n  <mat-chip-list #chipList>\r\n    <mat-chip\r\n      *ngFor=\"let selectedOption of selectedOptions\"\r\n      [removable]=\"true\"\r\n      (removed)=\"removeSelected(selectedOption)\">\r\n      {{selectedOption}}\r\n      <mat-icon matChipRemove>cancel</mat-icon>\r\n    </mat-chip>\r\n    <input type=\"text\"\r\n           placeholder=\"{{placeholder}}\"\r\n           matInput [formControl]=\"optionsControl\"\r\n           [required]=\"isRequired\"\r\n           #optionsInput\r\n           [matAutocomplete]=\"auto\"\r\n           [matChipInputFor]=\"chipList\"\r\n           [matChipInputSeparatorKeyCodes]=\"separatorKeys\"\r\n           [matChipInputAddOnBlur]=\"true\">\r\n  </mat-chip-list>\r\n  <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"displaySelected($event)\">\r\n    <mat-option class=\"Option\" *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\r\n      {{option}}\r\n    </mat-option>\r\n  </mat-autocomplete>\r\n  <mat-hint>Limit: {{5 - selectedOptions.length}}</mat-hint>\r\n</mat-form-field>\r\n","import {\r\n  AfterViewChecked,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\r\nimport {MatAutocompleteSelectedEvent, MatAutocomplete} from '@angular/material';\r\nimport {UiCourse} from '../models/ui-course.model';\r\n\r\ninterface OptionMap {\r\n  [name: string]: boolean;\r\n}\r\n\r\ninterface SelectedMap {\r\n  [name: string]: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-multi-select-autocomplete',\r\n  templateUrl: './multi-select-autocomplete.component.html',\r\n  styleUrls: ['./multi-select-autocomplete.component.scss']\r\n})\r\nexport class MultiSelectAutocompleteComponent implements OnInit, AfterViewChecked {\r\n  @Input() private options: UiCourse[];\r\n  @Input() public placeholder: string;\r\n  @Input() private isCourseSearch: boolean;\r\n  @Input() public selectedOptions: string[] = [];\r\n  @Input() public isRequired = true;\r\n  @Output() private inputChanged = new EventEmitter();\r\n  public filteredOptions: Observable<string[]>;\r\n  readonly separatorKeys: number[] = [ENTER, COMMA];\r\n  private allOptions: OptionMap = {};\r\n  private selectedMap: SelectedMap = {};\r\n  private selectableOptions: string[];\r\n  public optionsControl = new FormControl({value: '', disabled: this.selectedOptions.length >= 5});\r\n\r\n  @ViewChild('optionsInput') optionsInput: ElementRef<HTMLInputElement>;\r\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    this.selectableOptions = this.options.map(option => option.name + ' - ' + option.courseNumber);\r\n    // Initialize allOptions map.\r\n    this.selectableOptions.forEach(opt => this.allOptions[opt] = false);\r\n    // If on init options were already selected (e.g., when clicking the filter button after\r\n    // choosing filters), then mark those options as selected.\r\n    this.selectedOptions.forEach(opt => this.allOptions[opt] = true);\r\n    this.filteredOptions = this.optionsControl.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => this._filter(value)),\r\n      );\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    if (this.selectedOptions.length >= 5) {\r\n      this.optionsInput.nativeElement.disabled = true;\r\n      this.optionsInput.nativeElement.placeholder = '';\r\n    }\r\n  }\r\n\r\n  removeSelected(selectedOption: string) {\r\n    const index = this.selectedOptions.indexOf(selectedOption);\r\n    if (index >= 0) {\r\n      const removed = this._concatRemoved(selectedOption);\r\n      this.allOptions[removed] = false;\r\n      this.selectedOptions.splice(index, 1);\r\n      this._resetInput();\r\n      this.inputChanged.emit(this.selectedOptions.length);\r\n    }\r\n  }\r\n\r\n  private _concatRemoved(removed: string) {\r\n    const number = this.selectedMap[removed];\r\n    delete this.selectedMap[removed];\r\n    return removed + ' - ' + number;\r\n  }\r\n\r\n  displaySelected(event: MatAutocompleteSelectedEvent) {\r\n    const selected = event.option.viewValue;\r\n    this.allOptions[selected] = true;\r\n    const parsedSelected = this._parseSelected(selected);\r\n    this.selectedOptions.push(parsedSelected);\r\n    this._resetInput();\r\n    this.inputChanged.emit(this.selectedOptions.length);\r\n  }\r\n\r\n  private _parseSelected(selected: string) {\r\n    const split = selected.split(' - ');\r\n    const name = split[0];\r\n    this.selectedMap[name] = split[1];\r\n    return name;\r\n  }\r\n\r\n  getSelectedOptions(): string[] {\r\n    return this.selectedOptions.slice();\r\n  }\r\n\r\n  private _filter(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.selectableOptions.filter(option => {\r\n      return option.toLowerCase().includes(filterValue) && !this.allOptions[option];\r\n    });\r\n  }\r\n\r\n  private _resetInput() {\r\n    this.optionsInput.nativeElement.value = '';\r\n    const disableInputEl = this.selectedOptions.length >= 5;\r\n    this.optionsInput.nativeElement.disabled = disableInputEl;\r\n    this.optionsControl.setValue('');\r\n    this.optionsInput.nativeElement.placeholder = disableInputEl ? '' : this.placeholder;\r\n  }\r\n}\r\n","<mat-toolbar class=\"NavBar\">\r\n  <h1>TauOverflow</h1>\r\n  <div class=\"Content\" *ngIf=\"isSignUp\">\r\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"login(loginForm.value)\">\r\n      <mat-form-field appearance=\"fill\" class=\"LoginField\">\r\n        <mat-label>Email</mat-label>\r\n        <input matInput placeholder=\"\" required [type]=\"'email'\" formControlName=\"email\">\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"fill\" class=\"LoginField\">\r\n        <mat-label>Password</mat-label>\r\n        <input matInput placeholder=\"\" required [type]=\"'password'\" formControlName=\"password\">\r\n      </mat-form-field>\r\n      <button mat-raised-button class=\"Button RaisedButton\" color=\"primary\" type=\"submit\">Log in</button>\r\n    </form>\r\n  </div>\r\n  <div class=\"Content\" *ngIf=\"!isSignUp\">\r\n    <button mat-icon-button class=\"Icon\" (click)=\"resetNotification()\" #notificationsButton\r\n            [matMenuTriggerFor]=\"notificationsCard?.notificationsMenu\"\r\n            [disabled]=\"newNotifications.length + seenNotifications.length === 0\">\r\n      <mat-icon matBadge={{newNotifications.length}}\r\n                matBadgeColor=\"warn\"\r\n                [matBadgeHidden]=\"newNotifications.length === 0\">notifications_active</mat-icon>\r\n    </button>\r\n    <app-notifications-card #notificationsCard></app-notifications-card>\r\n    <button mat-button class=\"Button\" routerLink=\"/user-profile\">My Profile</button>\r\n    <button mat-button class=\"Button\" routerLink=\"/courses\">Courses</button>\r\n    <button mat-button class=\"Button\" routerLink=\"/home-page\">Home</button>\r\n    <button mat-raised-button class=\"Button RaisedButton\" color=\"primary\" (click)=\"logout()\">Sign out</button>\r\n  </div>\r\n</mat-toolbar>\r\n","import {Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\r\nimport {AuthService} from '../services/auth/auth.service';\r\nimport {Router} from '@angular/router';\r\nimport {MessagingService} from '../services/messaging.service';\r\nimport {MatButton, MatSnackBar} from '@angular/material';\r\nimport {UserService} from '../services/user.service';\r\nimport {UserProfile} from '../models/user-profile.model';\r\nimport {AppRoutingDataService} from '../app-routing-data.service';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {NotificationsCardComponent} from '../notifications-card/notifications-card.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-nav-bar',\r\n  templateUrl: './nav-bar.component.html',\r\n  styleUrls: ['./nav-bar.component.scss']\r\n})\r\nexport class NavBarComponent implements OnInit  {\r\n  @ViewChild('notificationsButton') notificationsButton: MatButton;\r\n  @ViewChild('notificationsCard') notificationsCard: NotificationsCardComponent;\r\n\r\n  constructor(private authService: AuthService,\r\n              private router: Router,\r\n              private routingDataService: AppRoutingDataService,\r\n              private userService: UserService,\r\n              private messagingService: MessagingService,\r\n              private snackBar: MatSnackBar) { }\r\n  seenNotifications = this.messagingService.seenNotifications;\r\n  newNotifications = this.messagingService.newNotifications;\r\n  @Input() isSignUp: boolean;\r\n  @Input() user: UserProfile;\r\n\r\n  loginForm = new FormGroup({\r\n    email: new FormControl('', [Validators.required, Validators.email]),\r\n    password: new FormControl('', [Validators.required])\r\n  });\r\n  @Output() loginAttempt = new EventEmitter();\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  logout() {\r\n    this.authService.doLogout().then( () => this.router.navigate(['']));\r\n  }\r\n\r\n  resetNotification() {\r\n    this.notificationsCard.updateNotifications();\r\n    const justSeenNotification = this.newNotifications.splice(0, this.newNotifications.length);\r\n    this.messagingService.markNotificationsAsSeen(justSeenNotification);\r\n  }\r\n\r\n  login() {\r\n    if (!this.loginForm.valid) {\r\n      this.snackBar.open('Please enter valid credentials', '', {\r\n        duration: 2000 // Prompt the toast 2 seconds.\r\n      });\r\n      return;\r\n    }\r\n    this.loginAttempt.emit(this.loginForm.value);\r\n  }\r\n}\r\n","<div class=\"NotificationSettingsDialog\">\r\n  <h1 mat-dialog-title class=\"NotificationSettingsDialogTitle\">{{title}}</h1>\r\n  <mat-dialog-content class=\"NotificationSettingsDialogContent\">\r\n    <h4 class=\"NotifyMeClass\">Notify me when:</h4>\r\n    <mat-slide-toggle [checked]=\"notificationSettings.notifyOnMyQuestions\"\r\n                      [disableRipple]=\"true\"\r\n                      [id]=\"MY_QUESTIONS\"\r\n                      [(ngModel)]=\"newSettings.notifyOnMyQuestions\"\r\n                      class=\"SlideToggle\">\r\n      Someone answers my question\r\n    </mat-slide-toggle>\r\n    <mat-slide-toggle [checked]=\"notificationSettings.notifyOnMyFavorites\"\r\n                      [disableRipple]=\"true\"\r\n                      [id]=\"MY_FAVORITES\"\r\n                      [(ngModel)]=\"newSettings.notifyOnMyFavorites\"\r\n                      class=\"SlideToggle\">\r\n      Someone answers a question I marked as favorite\r\n    </mat-slide-toggle>\r\n    <mat-slide-toggle [checked]=\"notificationSettings.notifyOnMyCourses\"\r\n                      [disableRipple]=\"true\"\r\n                      [id]=\"MY_COURSES\"\r\n                      [(ngModel)]=\"newSettings.notifyOnMyCourses\"\r\n                      class=\"SlideToggle\">\r\n      Someone asks a question in one of my courses\r\n    </mat-slide-toggle>\r\n    <mat-slide-toggle [checked]=\"notificationSettings.notifyOnMySkills\"\r\n                      [disableRipple]=\"true\"\r\n                      [id]=\"MY_SKILLS\"\r\n                      [(ngModel)]=\"newSettings.notifyOnMySkills\"\r\n                      class=\"SlideToggle\">\r\n      Someone asks a question in a course I'm skilled at\r\n    </mat-slide-toggle>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions class=\"NotificationSettingsDoneButtonContainer\">\r\n    <button mat-raised-button\r\n            class=\"NotificationSettingsDoneButton\"\r\n            (click)=\"checkSlidersAndSubmit()\"\r\n            #doneButton>Done</button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import {Component, Inject, OnInit, ViewChild} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef, MatSlideToggle} from '@angular/material';\r\nimport {NotificationSettings} from '../models/notification-settings.model';\r\nimport {UserService} from '../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-notification-settings-dialog',\r\n  templateUrl: './notification-settings-dialog.component.html',\r\n  styleUrls: ['./notification-settings-dialog.component.scss']\r\n})\r\nexport class NotificationSettingsDialogComponent implements OnInit {\r\n  @ViewChild(MatSlideToggle) slideToggle: MatSlideToggle;\r\n  public MY_QUESTIONS;\r\n  public MY_FAVORITES;\r\n  public MY_COURSES;\r\n  public MY_SKILLS;\r\n  public title: string;\r\n  public readonly notificationSettings: NotificationSettings;\r\n  public newSettings: NotificationSettings;\r\n\r\n  constructor(private dialogRef: MatDialogRef<NotificationSettingsDialogComponent>,\r\n              private userService: UserService,\r\n              @Inject(MAT_DIALOG_DATA) data) {\r\n    this.title = data.title;\r\n    this.notificationSettings = data.notificationSettings;\r\n    this.newSettings = this.notificationSettings.clone();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  checkSlidersAndSubmit() {\r\n    if (!this.notificationSettings.equals(this.newSettings)) {\r\n      this.userService.updateNotificationSettings(this.newSettings).subscribe(() => {});\r\n    }\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<button mat-flat-button (click)=\"goToQuestion()\"\r\n        [ngClass]=\"{'Notification': true, 'NewNotification': isNew}\">\r\n  <span class=\"NotificationIconAndDescription\">\r\n    <mat-icon class=\"NotificationIcon\">{{notification.isAnswer ? 'chat' : 'live_help'}}</mat-icon>\r\n    <span class=\"NotificationDescription\">\r\n      <b>{{notification.owner}}</b> {{notification.isAnswer ?\r\n                                      'answered your question' :\r\n                                      'asked a question that might interest you'}}:\r\n    </span>\r\n  </span>\r\n  <span class=\"NotificationSubject\"><b>{{notification.subject}}</b></span>\r\n  <span class=\"NotificationTimeElapsed\">{{getElapsedTime()}} ago</span>\r\n</button>\r\n<mat-divider></mat-divider>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Notification} from '../models/notification.model';\r\nimport {MessagingService} from '../services/messaging.service';\r\nimport {Router} from '@angular/router';\r\n\r\nenum TimeUnit {\r\n  SECONDS, MINUTES, HOURS, DAYS\r\n}\r\n\r\n@Component({\r\n  selector: 'app-notification',\r\n  templateUrl: './notification.component.html',\r\n  styleUrls: ['./notification.component.scss']\r\n})\r\nexport class NotificationComponent implements OnInit {\r\n  @Input() notification: Notification;\r\n  @Input() isNew: boolean;\r\n\r\n  constructor(private messagingService: MessagingService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  // delete notification from db + client and go to referenced question\r\n  goToQuestion() {\r\n    // delete notification\r\n    this.messagingService.deleteNotification(this.notification);\r\n    const origUrl = this.router.url;\r\n    const id = this.notification.questionId;\r\n    this.router.navigate(['question-page'], {queryParams: {id: id}})\r\n      .then(() => {\r\n        if (origUrl.includes('question-page?id=' + id)) {\r\n          location.reload(); // get new answers\r\n        }\r\n      });\r\n  }\r\n\r\n  getElapsedTime(): string {\r\n    const oneDay = 24 * 60 * 60 * 1000;\r\n    const elapsed = new Date(Date.now() - this.notification.timestamp.getTime());\r\n    let value = Math.floor(elapsed.getTime() / oneDay);\r\n    if (value >= 1) {\r\n      return this._timeUnit(value, TimeUnit.DAYS);\r\n    }\r\n    value = elapsed.getHours();\r\n    if (value >= 1) {\r\n      return this._timeUnit(value, TimeUnit.HOURS);\r\n    }\r\n    value = elapsed.getMinutes();\r\n    if (value >= 1) {\r\n      return this._timeUnit(value, TimeUnit.MINUTES);\r\n    }\r\n    return this._timeUnit(elapsed.getSeconds(), TimeUnit.SECONDS);\r\n  }\r\n\r\n  private _timeUnit(value: number, timeUnit: TimeUnit) {\r\n    return value + ' ' + this._getTimeUnitString(value, timeUnit);\r\n  }\r\n\r\n  private _getTimeUnitString(value: number, timeUnit: TimeUnit) {\r\n    const suffix = value === 1 ? '' : 's';\r\n    switch (timeUnit) {\r\n      case TimeUnit.SECONDS:\r\n        return 'second' + suffix;\r\n      case TimeUnit.MINUTES:\r\n        return 'minute' + suffix;\r\n      case TimeUnit.HOURS:\r\n        return 'hour' + suffix;\r\n      case TimeUnit.DAYS:\r\n        return 'day' + suffix;\r\n    }\r\n  }\r\n}\r\n","import {Directive, ViewContainerRef} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appNotificationHost]'\r\n})\r\nexport class NotificationHostDirective {\r\n\r\n  constructor(public viewContainerRef: ViewContainerRef) { }\r\n\r\n}\r\n","<mat-menu #notificationsMenu=\"matMenu\" class=\"NotificationsMenu\">\r\n  <ng-template appNotificationHost></ng-template>\r\n  <button mat-flat-button class=\"NotificationSettingsContainer\" (click)=\"openNotificationSettingsDialog()\">\r\n    <mat-icon class=\"SettingsIcon\">settings_outline</mat-icon>\r\n    <span class=\"NotificationSettings\">Notification settings</span>\r\n  </button>\r\n</mat-menu>\r\n","import {Component, ComponentFactory, ComponentFactoryResolver, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\r\nimport {MatDialog, MatDialogConfig, MatMenu} from '@angular/material';\r\nimport {MessagingService} from '../services/messaging.service';\r\nimport {Notification} from '../models/notification.model';\r\nimport {NotificationHostDirective} from './notification-host.directive';\r\nimport {NotificationComponent} from '../notification/notification.component';\r\nimport {UserService} from '../services/user.service';\r\nimport {NotificationSettingsDialogComponent} from '../notification-settings-dialog/notification-settings-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-notifications-card',\r\n  templateUrl: './notifications-card.component.html',\r\n  styleUrls: ['./notifications-card.component.scss']\r\n})\r\nexport class NotificationsCardComponent implements OnInit {\r\n  @ViewChild('notificationsMenu') notificationsMenu: MatMenu;\r\n  @ViewChild(NotificationHostDirective) notificationsHost: NotificationHostDirective;\r\n\r\n  newNotifications: Notification[];\r\n  seenNotifications: Notification[];\r\n  notificationComponentFactory: ComponentFactory<NotificationComponent>;\r\n\r\n  constructor(private messagingService: MessagingService,\r\n              private userService: UserService,\r\n              private dialog: MatDialog,\r\n              private componentFactoryResolver: ComponentFactoryResolver) {\r\n    this.notificationComponentFactory =\r\n      this.componentFactoryResolver.resolveComponentFactory(NotificationComponent);\r\n  }\r\n\r\n  updateNotifications() {\r\n    this.notificationsHost.viewContainerRef.clear();\r\n    this.newNotifications = this.messagingService.newNotifications.slice();\r\n    this.seenNotifications = this.messagingService.seenNotifications.slice();\r\n    this.newNotifications.forEach((notification) => this._addNotificationToCard(notification));\r\n    this.seenNotifications.forEach((notification) => this._addNotificationToCard(notification));\r\n  }\r\n\r\n  private _addNotificationToCard(notification: Notification) {\r\n    const notificationInstance: NotificationComponent =\r\n        this.notificationsHost\r\n            .viewContainerRef\r\n            .createComponent(this.notificationComponentFactory).instance;\r\n    notificationInstance.notification = notification;\r\n    notificationInstance.isNew = !notification.isSeen;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  async openNotificationSettingsDialog() {\r\n    const user = await this.userService.getUser();\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.width = '500px';\r\n    dialogConfig.data = {\r\n      id: 1,\r\n      title: 'Notification Settings',\r\n      notificationSettings: user.notificationSettings,\r\n    };\r\n    this.dialog.open(NotificationSettingsDialogComponent, dialogConfig);\r\n  }\r\n}\r\n","<div class=\"PostEditor\">\r\n  <mat-card class=\"PostCard\">\r\n    <mat-card-header class=\"PostHeader\">\r\n      <mat-card-title class=\"PostCardTitle\">\r\n        {{postTitle}}\r\n      </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <div *ngIf=\"isAskQuestion\">\r\n        <ng-container *ngTemplateOutlet=\"customContent\"></ng-container>\r\n      </div>\r\n      <div class=\"CourseNameSelector\" *ngIf=\"!isAskQuestion && !isCourseChosen\">\r\n        <h5 class=\"PostTitleText\">Course Name:</h5>\r\n        <div class=\"AutocompletePostContainer\">\r\n          <app-autocomplete [placeholder]=\"'Select course...'\" class=\"AutocompletePost\" #programAutocomplete\r\n                            [editorCss]=\"'AutocompleteInEditor'\"></app-autocomplete>\r\n        </div>\r\n      </div>\r\n      <div class=\"PostTitle\">\r\n        <h5 class=\"PostTitleText\">Title:</h5>\r\n        <app-form-field [label]=\"titleLabel\" #titleField>\r\n        </app-form-field>\r\n      </div>\r\n      <div *ngIf=\"isCourseReview\" class=\"Review\">\r\n        <h5 class=\"PostTitleText\">Rank:</h5>\r\n        <ng-container *ngTemplateOutlet=\"customContent\"></ng-container>\r\n      </div>\r\n      <div class=\"Post\">\r\n        <h5 class=\"PostTitleText\">{{descriptionTitle}}:</h5>\r\n        <angular-editor [config]=\"editorConfig\" class=\"PostTextArea\" [(ngModel)]=\"postContent\">\r\n        </angular-editor>\r\n      </div>\r\n      <div class=\"DoneButtonContainer\">\r\n        <button mat-raised-button class=\"RaisedDoneButton\" (click)=\"submitPost()\">submit</button>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n<ng-template #customContent><ng-content class=\"Post\"></ng-content></ng-template>\r\n","import {Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\r\nimport {AngularEditorConfig} from '@kolkov/angular-editor';\r\nimport {AutocompleteComponent} from '../autocomplete/autocomplete.component';\r\nimport {FormFieldComponent} from '../form-field/form-field.component';\r\nimport {MatSnackBar} from '@angular/material';\r\nimport {CourseService} from '../services/course.service';\r\n\r\nexport class PostContent {\r\n  subject: string;\r\n  course: string;\r\n  content: string;\r\n\r\n  constructor(subject: string, course: string, content: string) {\r\n    this.subject = subject;\r\n    this.course = course;\r\n    this.content = content;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-post-editor',\r\n  templateUrl: './post-editor.component.html',\r\n  styleUrls: ['./post-editor.component.scss']\r\n})\r\nexport class PostEditorComponent implements OnInit {\r\n  @ViewChild('programAutocomplete') programAutocomplete: AutocompleteComponent;\r\n  @ViewChild('titleField') titleFormField: FormFieldComponent;\r\n\r\n  @Input() postTitle: string;\r\n  @Input() isAskQuestion: boolean;\r\n  @Input() isCourseReview: boolean;\r\n  @Input() isCourseChosen: boolean;\r\n  @Input() titleLabel: string;\r\n  @Input() descriptionTitle: string;\r\n  @Output() postSubmitted = new EventEmitter<PostContent>();\r\n\r\n  postContent = '';\r\n  coursesMap = this.courseService.getCoursesMap();\r\n  editorConfig: AngularEditorConfig = {\r\n    editable: true,\r\n    height: '15rem',\r\n    minHeight: '3rem',\r\n    placeholder: 'Enter text here...',\r\n    translate: 'no',\r\n    customClasses: [ // optional\r\n      {\r\n        name: 'redText',\r\n        class: 'redText'\r\n      },\r\n    ]\r\n  };\r\n\r\n  constructor(private snackBar: MatSnackBar, private courseService: CourseService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  submitPost() {\r\n    const subject = this.titleFormField.getContent();\r\n    let course = '';\r\n    if (!this.isAskQuestion && !this.isCourseChosen) {\r\n      course = this.programAutocomplete.getSelection();\r\n    }\r\n    if (subject === '' || (course === '' && !this.isAskQuestion && !this.isCourseChosen) || this.postContent === '') {\r\n      this.snackBar.open('Empty fields aren\\'t allowed', '', {\r\n        duration: 2000 // Prompt the toast 2 seconds.\r\n      });\r\n    } else {\r\n      this.postSubmitted.emit(new PostContent(subject, course, this.postContent));\r\n    }\r\n  }\r\n}\r\n","<app-profile-details [isDetailsDialog]=\"true\"\r\n                     [userToDisplay]=\"user\"\r\n                     [classes]=\"'DetailsDialogClass'\"></app-profile-details>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\r\nimport {UserProfile} from '../models/user-profile.model';\r\n\r\n@Component({\r\n  selector: 'app-profile-details-dialog',\r\n  templateUrl: './profile-details-dialog.component.html',\r\n  styleUrls: ['./profile-details-dialog.component.scss']\r\n})\r\nexport class ProfileDetailsDialogComponent implements OnInit {\r\n  user: UserProfile;\r\n\r\n  constructor(private dialogRef: MatDialogRef<ProfileDetailsDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) data) {\r\n    this.user = data.user;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","<mat-card class=\"HomeCard {{classes}}\" [ngClass]=\"{'mat-elevation-z5': true}\">\r\n  <app-spinner *ngIf=\"!isLoaded\"></app-spinner>\r\n  <ng-container *ngIf=\"isLoaded\">\r\n    <h2 class=\"mat-h2 UserName\" *ngIf=\"!isProfilePage && !isDetailsDialog\">Hello {{userDetails.name.first}}!</h2>\r\n    <h2 class=\"mat-h2 UserName\" *ngIf=\"isProfilePage || isDetailsDialog\">{{userDetails.name.first}} {{userDetails.name.last}}</h2>\r\n    <div class=\"mat-body-2 Program\" *ngIf=\"userDetails.program\">{{userDetails.program}}</div>\r\n    <img *ngIf=\"!userDetails.image\" src=\"{{defaultImage}}\"\r\n         class=\"CardProfileImage {{isDetailsDialog ? 'DetailsDialogImage' : ''}}\">\r\n    <img *ngIf=\"userDetails.image\" src=\"data:image/png;base64,{{userDetails.image}}\"\r\n         class=\"CardProfileImage {{isDetailsDialog ? 'DetailsDialogImage' : ''}}\">\r\n    <div class=\"DividerContainer\">\r\n      <mat-divider></mat-divider>\r\n    </div>\r\n    <div class=\"UserRank\">\r\n      <div class=\"ScoreTitle\">Score: </div> {{userDetails.rank}}\r\n      <img class=\"RankIcon\" src=\"https://img.icons8.com/wired/36/424242/{{rankTitle}}.png\">\r\n    </div>\r\n    <ng-container *ngIf=\"isProfilePage || isDetailsDialog\">\r\n      <div class=\"mat-body About\">\r\n        <div class=\"DescriptionTitle\" *ngIf=\"userDetails.description\">Description:</div>\r\n        <div>{{userDetails.description}}</div>\r\n      </div>\r\n      <div class=\"mat-body About\" *ngIf=\"isDetailsDialog\">\r\n        <app-copy-to-clipboard [email]=\"userDetails.email\"></app-copy-to-clipboard>\r\n      </div>\r\n      <div *ngIf=\"userDetails.skills && userDetails.skills.length > 0\" class=\"mat-body Skills\">\r\n        Skills:\r\n        <mat-chip-list>\r\n          <mat-chip class=\"Chip\" *ngFor=\"let skill of userDetails.skills\" (click)=\"navigateToCoursePage(skill)\">\r\n            {{skill.name}}\r\n          </mat-chip>\r\n        </mat-chip-list>\r\n      </div>\r\n      <button *ngIf=\"!isDetailsDialog\" mat-raised-button class=\"EditProfileButton\" (click)=\"editProfile()\">\r\n        Edit Profile\r\n      </button>\r\n    </ng-container>\r\n  </ng-container>\r\n</mat-card>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {AppService} from '../app.service';\r\nimport {CoursesComponent} from '../courses/courses.component';\r\nimport {AppRoutingDataService} from '../app-routing-data.service';\r\nimport {Router} from '@angular/router';\r\nimport {UiCourse} from '../models/ui-course.model';\r\nimport {UserService} from '../services/user.service';\r\nimport {UserProfile} from '../models/user-profile.model';\r\nimport {MatDialog, MatDialogConfig, MatSnackBar} from '@angular/material';\r\nimport {InitialDetailsDialogComponent} from '../initial-details-dialog/initial-details-dialog.component';\r\nimport {CourseService} from '../services/course.service';\r\nimport {UiCoursesMap} from '../models/ui-courses-map.model';\r\nimport {ProgramService} from '../services/program.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-profile-details',\r\n  templateUrl: './profile-details.component.html',\r\n  styleUrls: ['./profile-details.component.scss']\r\n})\r\nexport class ProfileDetailsComponent implements OnInit {\r\n  @Input() isProfilePage = false;\r\n  @Input() isDetailsDialog = false;\r\n  @Input() classes: string;\r\n  @Input() userToDisplay: UserProfile;\r\n  isLoaded = false;\r\n  userDetails: UserProfile;\r\n  rankTitle: string;\r\n  defaultImage = '../../assets/avatar.png';\r\n  uiCoursesMap: UiCoursesMap;\r\n\r\n  constructor(private appService: AppService,\r\n              private router: Router,\r\n              private userService: UserService,\r\n              private snackBar: MatSnackBar,\r\n              private courseService: CourseService,\r\n              private programService: ProgramService,\r\n              private dialog: MatDialog,\r\n              private routingDataService: AppRoutingDataService) {}\r\n\r\n  ngOnInit() {\r\n    this.userDetails = this.userToDisplay;\r\n    this.getRankTitle();\r\n    this.isLoaded = true;\r\n  }\r\n\r\n  navigateToCoursePage(course: UiCourse) {\r\n    const courseData = new CoursesComponent.CourseNavigationData(course);\r\n    this.routingDataService.setRoutingData(course.courseNumber, courseData);\r\n    this.router.navigate(['/course-page'], { queryParams: { courseId: course.courseNumber } });\r\n  }\r\n\r\n  async editProfile() {\r\n    const programs = await this.programService.getPrograms();\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.width = '500px';\r\n    dialogConfig.data = {title: 'Customize Your Information', user: this.userDetails,\r\n      selectedProgram: this.userDetails.program, description: this.userDetails.description,\r\n      selectedSkills: this.userDetails.skills.map(skill => skill.name),\r\n      firstInit: false, programs: programs};\r\n    await this.courseService.waitForCourses();\r\n    this._initCourses();\r\n    this.dialog.open(InitialDetailsDialogComponent, dialogConfig).afterClosed().subscribe(\r\n      result => {\r\n        if (!result) {\r\n          return;\r\n        }\r\n        this.userDetails.program = result.program;\r\n        this.userDetails.description = result.description;\r\n        this._addUserSkills(result.skills);\r\n        this.userDetails.isNewUser = false;\r\n        this.userService.updateUserDetails(this.userDetails).subscribe(() => {\r\n          this._toast('User details updated');\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  private _toast(msg: string) {\r\n    this.snackBar.open(msg, '', {\r\n      duration: 2000 // Prompt the toast 2 seconds.\r\n    });\r\n  }\r\n\r\n  private _addUserSkills(skills: string[]) {\r\n    this.userDetails.skills = [];\r\n    skills.forEach(skillName => {\r\n      this.userDetails.skills.push(this.uiCoursesMap[skillName]);\r\n    });\r\n  }\r\n\r\n  private _initCourses(): void {\r\n    if (!this.uiCoursesMap) {\r\n      this.uiCoursesMap = this.courseService.getCoursesMap();\r\n    }\r\n  }\r\n\r\n  getRankTitle() {\r\n    const rank = this.userDetails.rank;\r\n    if (rank < 100) {\r\n      this.rankTitle = 'babys-room';\r\n    } else if (rank < 500) {\r\n      this.rankTitle = 'lego-head';\r\n    } else if (rank < 700) {\r\n      this.rankTitle = 'bot';\r\n    } else if (rank < 1000) {\r\n      this.rankTitle = 'rocket';\r\n    } else {\r\n      this.rankTitle = 'iron-man';\r\n    }\r\n  }\r\n}\r\n","<div class=\"QuestionCard\" *ngIf=\"question\">\r\n  <div class=\"UserPicture\">\r\n    <app-clickable-profile-picture\r\n      [isUserOwner]=\"isUserOwner\" [owner]=\"question.owner\"></app-clickable-profile-picture>\r\n    <div>{{question.owner.name.first}} {{question.owner.name.last}}</div>\r\n  </div>\r\n  <mat-card class=\"PostCard\">\r\n    <mat-card-content class=\"ContentAndDetails\">\r\n      <div class=\"QuestionContent\" [innerHtml]=\"question.content\"></div>\r\n      <div class=\"Date\">\r\n        {{question.timestamp | date}}\r\n      </div>\r\n    </mat-card-content>\r\n    <mat-divider></mat-divider>\r\n    <div class=\"QuestionBottom\">\r\n    <span class=\"ButtonsContainer\">\r\n      <button mat-icon-button class=\"Button\" (click)=\"upvote()\">\r\n          <mat-icon class=\"ThumbIcon\">thumb_up</mat-icon>\r\n        </button>\r\n      <span class=\"NumOfLikes\">{{question.upvote.count}}</span>\r\n    </span>\r\n      <button *ngIf=\"!isLocked\" mat-raised-button class=\"AnswerButton\" (click)=\"newAnswer()\">ANSWER</button>\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {Question} from '../models/question.model';\r\nimport {UserProfile} from '../models/user-profile.model';\r\nimport {QuestionService} from '../services/question.service';\r\n\r\n@Component({\r\n  selector: 'app-question-card',\r\n  templateUrl: './question-card.component.html',\r\n  styleUrls: ['./question-card.component.scss']\r\n})\r\nexport class QuestionCardComponent implements OnInit {\r\n  @Input() question: Question;\r\n  @Input() user: UserProfile;\r\n  @Input() isLocked: boolean;\r\n  @Input() isUserOwner: boolean;\r\n  @Output() showAnswerEditor = new EventEmitter<void>();\r\n\r\n  constructor(private questionService: QuestionService) {}\r\n\r\n  upvote() {\r\n    if (this.question.upvote.upvoters.includes(this.user.id)) {\r\n      return;\r\n    }\r\n    this.question.upvote.count++;\r\n    this.question.upvote.upvoters.push(this.user.id);\r\n    this.questionService.updateQuestion(this.question).subscribe(res => {\r\n      console.log('Update Succesful');\r\n    }, err => {\r\n      console.error('Update Unsuccesful');\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  newAnswer() {\r\n    this.showAnswerEditor.emit();\r\n  }\r\n}\r\n","<app-nav-bar></app-nav-bar>\r\n<app-post-editor\r\n  (postSubmitted)=\"postQuestion($event)\"\r\n  [postTitle]=\"'Ask a Question'\"\r\n  [titleLabel]=\"'Write question subject'\"\r\n  [descriptionTitle]=\"'Question'\"\r\n  [isAskQuestion]=\"true\">\r\n  <div class=\"SelectedCourses\">\r\n    <mat-chip-list class=\"ChipList\" *ngIf=\"isCourseChosen\">\r\n      <mat-chip [removable]=\"true\" (removed)=\"remove(course)\"\r\n                class=\"CourseTag\" *ngFor=\"let course of courses\">\r\n        {{course.name}}\r\n        <mat-icon matChipRemove>cancel</mat-icon>\r\n      </mat-chip>\r\n    </mat-chip-list>\r\n    <button mat-icon-button class=\"PlusIconButton\">\r\n      <mat-icon class=\"PlusIcon\">add</mat-icon>\r\n    </button>\r\n  </div>\r\n</app-post-editor>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AppRoutingDataService} from '../app-routing-data.service';\r\nimport {UiCourse} from '../models/ui-course.model';\r\nimport {UserService} from '../services/user.service';\r\nimport {UiCoursesMap} from '../models/ui-courses-map.model';\r\nimport {CourseService} from '../services/course.service';\r\nimport {PostContent} from '../post-editor/post-editor.component';\r\nimport {Question, QuestionNavigationData} from '../models/question.model';\r\nimport {UserProfile} from '../models/user-profile.model';\r\nimport {QuestionService} from '../services/question.service';\r\nimport {Router} from '@angular/router';\r\nimport {MessagingService} from '../services/messaging.service';\r\n\r\n@Component({\r\n  selector: 'app-question-editor',\r\n  templateUrl: './question-editor.component.html',\r\n  styleUrls: ['./question-editor.component.scss']\r\n})\r\nexport class QuestionEditorComponent implements OnInit {\r\n\r\n  isCourseChosen = true;\r\n  courses: UiCourse[] = [];\r\n  user: UserProfile;\r\n  coursesMap: UiCoursesMap;\r\n\r\n  constructor(private userService: UserService,\r\n              private courseService: CourseService,\r\n              private questionService: QuestionService,\r\n              private messagingService: MessagingService,\r\n              private router: Router,\r\n              private routingDataService: AppRoutingDataService) {}\r\n\r\n\r\n  ngOnInit() {\r\n    this.courses = this.routingDataService.getRoutingData('selectedCourses').getData();\r\n    this.userService.getUser().then((user: UserProfile) => {\r\n      this.user = user;\r\n    });\r\n    this.coursesMap = this.courseService.getCoursesMap();\r\n  }\r\n\r\n  remove(course: UiCourse) {\r\n    const index = this.courses.indexOf(course);\r\n    if (index > 0) {\r\n      this.courses.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  postQuestion(event: PostContent) {\r\n    const subject = event.subject;\r\n    const content = event.content;\r\n    const question = new Question(subject, content, this.user.getUiUser(), this.courses);\r\n    this.user.myQuestions.push(question);\r\n    this.questionService.createQuestion(question).subscribe((response: any) => {\r\n      question.id = response.data._id;\r\n      this.user.asked += 1;\r\n      debugger;\r\n      this._sendNotificationToCourseRelatedSkilledUsers(question);\r\n      this.routingDataService.setRoutingData('question', new QuestionNavigationData(question));\r\n      this.router.navigate(['question-page'], {queryParams: {id: question.id}});\r\n    });\r\n  }\r\n\r\n  _sendNotificationToCourseRelatedSkilledUsers(question: Question) {\r\n   this.courses.forEach((course) => {\r\n     this.courseService.getSkilledUsers(course.id).subscribe((users) => {\r\n       users.forEach((user) => {\r\n         this.messagingService.sendMessage(user, question.owner.firebaseToken, question.subject,\r\n           question.owner.name.first + ' ' + question.owner.name.last, question.id, false);\r\n       });\r\n     });\r\n   });\r\n  }\r\n}\r\n","<app-nav-bar></app-nav-bar>\r\n<app-spinner *ngIf=\"!isLoaded\"></app-spinner>\r\n<div class=\"questionPage\" *ngIf=\"isLoaded\" #questionPageContainer>\r\n  <div class=\"coursesChips\">\r\n    <mat-chip-list>\r\n      <mat-chip *ngFor=\"let course of question.relatedCourses\">{{course.name}}</mat-chip>\r\n    </mat-chip-list>\r\n  </div>\r\n  <mat-card-content class=\"QuestionHeader\">\r\n    <div class=\"mat-h2 questionTitle\">\r\n      {{question.subject}}\r\n    </div>\r\n    <span *ngIf=\"isUserQuestionOwner\">\r\n      <button mat-icon-button matTooltip=\"Edit question\" class=\"Button\">\r\n        <mat-icon class=\"Icon\">edit</mat-icon>\r\n      </button>\r\n      <button *ngIf=\"!isQuestionLocked\" mat-icon-button matTooltip=\"Lock this post\" class=\"Button\" (click)=\"LockQuestion()\">\r\n        <mat-icon class=\"Icon\">lock_open</mat-icon>\r\n      </button>\r\n      <button *ngIf=\"isQuestionLocked\" mat-icon-button matTooltip=\"Unlock this post\" class=\"Button\" (click)=\"UnlockQuestion()\">\r\n        <mat-icon class=\"Icon\">lock</mat-icon>\r\n      </button>\r\n    </span>\r\n    <span *ngIf=\"!isUserQuestionOwner\">\r\n      <button *ngIf=\"isQuestionFavorite\" mat-icon-button matTooltip=\"Unmark as favorite\" class=\"Button\"\r\n              (click)=\"UnmarkFavorite()\">\r\n        <mat-icon class=\"Icon\">favorite</mat-icon>\r\n      </button>\r\n      <button *ngIf=\"!isQuestionFavorite\" mat-icon-button matTooltip=\"Mark as favorite\" class=\"Button\"\r\n              (click)=\"MarkFavorite()\">\r\n        <mat-icon class=\"Icon\">favorite_border</mat-icon>\r\n      </button>\r\n    </span>\r\n  </mat-card-content>\r\n  <app-question-card [user]=\"user\" [question]=\"question\" [isLocked]=\"isQuestionLocked\"\r\n                     [isUserOwner]=\"isUserQuestionOwner\"\r\n                     (showAnswerEditor)=\"showAnswerEditor()\"></app-question-card>\r\n  <div class=\"AnswersContainer\">\r\n    <app-answer-card *ngFor=\"let answer of question.answers\" [answer]=\"answer\" [isUserOwner]=\"checkIfUserAnswerOwner(answer.owner.id)\"\r\n                     [isEvenAnswer]=\"1 - isEvenAnswer\">\r\n    </app-answer-card>\r\n    <app-single-answer-editor (answerSubmitted)=\"postAnswer($event)\" (rendered)=\"scrollToBottom()\"\r\n                              (answerCanceled)=\"cancelAnswer()\"\r\n                              *ngIf=\"isShowAnswerEditor\"></app-single-answer-editor>\r\n  </div>\r\n</div>\r\n\r\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {AppRoutingDataService} from '../app-routing-data.service';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {QuestionService} from '../services/question.service';\r\nimport {Question} from '../models/question.model';\r\nimport {PostContent} from '../post-editor/post-editor.component';\r\nimport {Answer} from '../models/answer.model';\r\nimport {AnswerService} from '../services/answer.service';\r\nimport {UserProfile} from '../models/user-profile.model';\r\nimport {UserService} from '../services/user.service';\r\nimport {MessagingService} from '../services/messaging.service';\r\n\r\n@Component({\r\n  selector: 'app-question-page',\r\n  templateUrl: './question-page.component.html',\r\n  styleUrls: ['./question-page.component.scss']\r\n})\r\nexport class QuestionPageComponent implements OnInit {\r\n  @ViewChild('questionPageContainer') questionPageContainer: ElementRef;\r\n\r\n  isShowAnswerEditor: boolean;\r\n  isLoaded = false;\r\n  isUserQuestionOwner: boolean;\r\n  isQuestionLocked: boolean;\r\n  isQuestionFavorite = false;\r\n  question: Question;\r\n  user: UserProfile;\r\n  answerCounter = 0;\r\n\r\n  constructor(private routingDataService: AppRoutingDataService,\r\n              private questionService: QuestionService,\r\n              private userService: UserService,\r\n              private route: ActivatedRoute,\r\n              private answerService: AnswerService,\r\n              private messagingService: MessagingService) {\r\n    this.userService.getUser().then((user: UserProfile) => {\r\n      this.user = user;\r\n      const routingData = routingDataService.getRoutingData('question');\r\n      if (routingData) {\r\n        this.question = routingData.getData();\r\n        this._updateMembers();\r\n        this.isLoaded = true;\r\n        routingDataService.setRoutingData('question', null);\r\n      } else {\r\n        route.queryParams.subscribe(\r\n          (params) => {\r\n            const id = params.id;\r\n            questionService.getQuestion(id).subscribe((question: any) => {\r\n              this.question = Question.deserialize(question);\r\n              this._updateMembers();\r\n              this.isLoaded = true;\r\n            });\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  private _updateMembers() {\r\n    this.isUserQuestionOwner = this.user.id === this.question.owner.id;\r\n    this.isQuestionLocked = this.question.isLocked;\r\n    if (!this.user.favorites || this.user.favorites.length === 0) {\r\n      return;\r\n    }\r\n    this.isQuestionFavorite = this.user.favorites.map((question: Question) => {\r\n      return question.id;\r\n    }).includes(this.question.id);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  showAnswerEditor() {\r\n    this.isShowAnswerEditor = true;\r\n  }\r\n\r\n  scrollToBottom() {\r\n    const questionPageEl = this.questionPageContainer.nativeElement;\r\n    questionPageEl.scrollTop = questionPageEl.scrollHeight;\r\n  }\r\n\r\n  cancelAnswer() {\r\n    this.isShowAnswerEditor = false;\r\n  }\r\n\r\n  postAnswer(event: PostContent) {\r\n    const content = event.content;\r\n    const answer = new Answer(content, this.user, this.question.id);\r\n    this.isShowAnswerEditor = false;\r\n    this.question.answers.push(answer);\r\n    this.answerService.createAnswer(answer).subscribe((response: any) => {\r\n      answer.id = response.data._id;\r\n      this.user.answered += 1;\r\n      // const url = 'http://localhost:4200/question-page?id=';\r\n      this.messagingService.sendMessage(this.question.owner.firebaseToken, this.user.firebaseToken,\r\n        this.question.subject, this.user.name.first + ' ' + this.user.name.last,\r\n        this.question.id, true);\r\n    });\r\n  }\r\n\r\n  isEven() {\r\n    const isEven = this.answerCounter % 2;\r\n    this.answerCounter++;\r\n    return 1 - isEven;\r\n  }\r\n\r\n  UnmarkFavorite() {\r\n    this.isQuestionFavorite = false;\r\n    const index = this.user.favorites.map((question: Question) => question.id)\r\n      .indexOf(this.question.id, 0);\r\n    if (index > -1) {\r\n      this.user.favorites.splice(index, 1);\r\n    }\r\n    this._updateFavorites();\r\n  }\r\n\r\n  MarkFavorite() {\r\n    this.isQuestionFavorite = true;\r\n    this.user.favorites.push(this.question);\r\n    this._updateFavorites();\r\n  }\r\n\r\n  LockQuestion() {\r\n    this.isQuestionLocked = true;\r\n    this.question.isLocked = true;\r\n    this.questionService.updateQuestion(this.question).subscribe(() => {});\r\n  }\r\n\r\n  UnlockQuestion() {\r\n    this.isQuestionLocked = false;\r\n    this.question.isLocked = false;\r\n    this.questionService.updateQuestion(this.question).subscribe(() => {});\r\n  }\r\n\r\n  private _updateFavorites() {\r\n    this.userService.updateFavorites(this.user, this.question).subscribe(() => {});\r\n  }\r\n\r\n  private checkIfUserAnswerOwner(id: string): boolean {\r\n    return this.user.id === id;\r\n  }\r\n}\r\n","<div class=\"SearchComponent\">\r\n  <mat-form-field appearance=\"outline\" class=\"SearchBox\">\r\n    <div *ngIf=\"isSearchQuestion\">\r\n      <input matInput placeholder=\"Search a question...\" [(ngModel)]=\"searchContent\"\r\n             (keydown.enter)=\"initiateSearch()\" #searchBarInput>\r\n    </div>\r\n    <div *ngIf=\"!isSearchQuestion\">\r\n      <input matInput placeholder=\"Search a course...\">\r\n    </div>\r\n    <div matSuffix class=\"ActionButtonsContainer\">\r\n      <button matTooltip=\"Search\" mat-icon-button class=\"SearchIcon\"\r\n              (click)=\"initiateSearch()\" [disabled]=\"!searchContent\">\r\n        <mat-icon>search</mat-icon>\r\n      </button>\r\n      <button matTooltip=\"Filter\" mat-icon-button class=\"SearchIcon\" (click)=\"openDialog()\">\r\n        <mat-icon>filter_list</mat-icon>\r\n      </button>\r\n    </div>\r\n  </mat-form-field>\r\n  <div class=\"FilterChipsContainer\" *ngIf=\"hasFilters\">\r\n    <mat-chip-list>\r\n      <mat-chip\r\n        *ngFor=\"let filter of selectedFilters\"\r\n        [removable]=\"true\"\r\n        (removed)=\"remove(filter)\">\r\n        {{filter}}\r\n        <mat-icon matChipRemove>cancel</mat-icon>\r\n      </mat-chip>\r\n    </mat-chip-list>\r\n  </div>\r\n</div>\r\n","import {Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {MatDialog} from '@angular/material';\r\nimport {FilterDialogComponent} from '../filter-dialog/filter-dialog.component';\r\nimport {MatDialogConfig} from '@angular/material/dialog';\r\nimport {CourseService} from '../services/course.service';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-search-bar',\r\n  templateUrl: './search-bar.component.html',\r\n  styleUrls: ['./search-bar.component.scss']\r\n})\r\nexport class SearchBarComponent implements OnInit {\r\n  @ViewChild('searchBarInput') searchBarInput: ElementRef;\r\n\r\n  constructor(private dialog: MatDialog,\r\n              private courseService: CourseService,\r\n              private router: Router) { }\r\n\r\n  @Input() isSearchQuestion: boolean;\r\n  public searchContent: string;\r\n  private selectedFilters: string[] = [];\r\n  public hasFilters: boolean;\r\n  private isSearchResultsShown = false;\r\n\r\n  async openDialog() {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.width = '500px';\r\n    dialogConfig.data = {\r\n      id: 1,\r\n      title: 'Filter search by course names',\r\n      isSearch: true,\r\n      selected: this.selectedFilters.slice()\r\n    };\r\n    await this.courseService.waitForCourses();\r\n    this.dialog\r\n        .open(FilterDialogComponent, dialogConfig)\r\n        .afterClosed()\r\n        .subscribe( (result: string[]) => {\r\n          this.selectedFilters = result ? result : this.selectedFilters;\r\n          this.hasFilters = this.selectedFilters.length > 0;\r\n          if (this.isSearchResultsShown) {\r\n            this.initiateSearch();\r\n          }\r\n        });\r\n  }\r\n\r\n  remove(filter: string) {\r\n    const index = this.selectedFilters.indexOf(filter);\r\n    if (index >= 0) {\r\n      this.selectedFilters.splice(index, 1);\r\n      this.hasFilters = this.selectedFilters.length > 0;\r\n      if (this.isSearchResultsShown) {\r\n        this.initiateSearch();\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  async updateElementsWithSearchParams(query: string, filters?: string[]) {\r\n    await this.courseService.waitForCourses();\r\n    this.isSearchResultsShown = true;\r\n    this.selectedFilters = [];\r\n    this.searchContent = query;\r\n    if (filters) {\r\n      filters.forEach((courseNumber) => {\r\n        this.selectedFilters.push(this.courseService.getCourseName(courseNumber));\r\n      });\r\n      this.hasFilters = this.selectedFilters.length > 0;\r\n    }\r\n  }\r\n\r\n  async initiateSearch() {\r\n    if (!this.searchContent) {\r\n      return;\r\n    }\r\n    await this.courseService.waitForCourses();\r\n    const courseMap = this.courseService.getCoursesMap();\r\n    const filterIds: string[] = [];\r\n    this.selectedFilters.forEach((filter: string) => {\r\n      filterIds.push(courseMap[filter].courseNumber);\r\n    });\r\n    const query = this.searchContent;\r\n    const queryParams = filterIds.length > 0 ? {query, filters: filterIds.join(',')} : {query};\r\n    this.router.navigate(['home-page'], {queryParams});\r\n  }\r\n}\r\n","<div class=\"MainResult\">\r\n  <div class=\"ResultsHeaderContainer\">\r\n    <button mat-icon-button class=\"BackIconButton\" routerLink=\"/home-page\"><mat-icon>arrow_back</mat-icon></button>\r\n    <h2 mat-header-row class=\"ResultHeader\">{{results.length}} Result{{results.length == 1 ? '' : 's'}}</h2>\r\n  </div>\r\n  <mat-divider></mat-divider>\r\n  <mat-list>\r\n    <mat-list-item class=\"ListItem\" *ngFor=\"let result of results\">\r\n      <mat-divider></mat-divider>\r\n      <div class=\"ResultHeaderContent\">\r\n        <div class=\"QuestionHeaderAndContent\">\r\n          <button mat-button matLine class=\"ResTitleButton\"\r\n                  (click)=\"navigateToQuestionPage(result)\">{{result.subject}}\r\n          </button>\r\n          <div class=\"ResContent\" [innerHtml]=\"result.content\"></div>\r\n        </div>\r\n        <div class=\"QuestionDetailsContainer\">\r\n          <div class=\"QuestionStatsContainer\">\r\n            <div class=\"IconDetails\">\r\n              <mat-icon matTooltip=\"Answers\" matListIcon class=\"IconDetails\">check_circle</mat-icon>\r\n              <div class=\"IconText\">{{result.answers?.length}}</div>\r\n            </div>\r\n            <div class=\"IconDetails\">\r\n              <mat-icon matTooltip=\"Votes\" matListIcon class=\"IconDetails\">thumb_up</mat-icon>\r\n              <span class=\"IconText\">{{result.upvote?.count}}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"NameAndDate\">\r\n            <div class=\"SearchResultName\">{{result.owner.name.first}} {{result.owner.name.last}}</div>\r\n            <div>{{result.timestamp | date}}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </mat-list-item>\r\n  </mat-list>\r\n</div>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {AppRoutingDataService} from '../app-routing-data.service';\r\nimport {Router} from '@angular/router';\r\nimport {CourseService} from '../services/course.service';\r\nimport {UserService} from '../services/user.service';\r\nimport {Question, QuestionNavigationData} from '../models/question.model';\r\n\r\n@Component({\r\n  selector: 'app-search-results',\r\n  templateUrl: './search-results.component.html',\r\n  styleUrls: ['./search-results.component.scss']\r\n})\r\nexport class SearchResultsComponent implements OnInit {\r\n  @Input() results: Question[];\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private courseService: CourseService,\r\n    private userService: UserService,\r\n    private routingDataService: AppRoutingDataService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  navigateToQuestionPage(questionSelected: Question) {\r\n    this.routingDataService.setRoutingData('question', new QuestionNavigationData(questionSelected));\r\n    this.router.navigate(['question-page'], {queryParams: {id: questionSelected.id}});\r\n  }\r\n}\r\n","import {Answer} from '../models/answer.model';\r\nimport { Observable } from 'rxjs';\r\nimport {Injectable} from '@angular/core';\r\nimport {HttpRequestsService} from './http-requests.service';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {HttpHeaders} from '@angular/common/http';\r\nimport { AngularFireDatabase } from '@angular/fire/database';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { AngularFireMessaging } from '@angular/fire/messaging';\r\nimport {UserProfile} from '../models/user-profile.model';\r\nimport {UiCourse} from '../models/ui-course.model';\r\nimport {Notification} from '../models/notification.model';\r\n\r\n// export class Message {\r\n//   title: string;\r\n//   user: string;\r\n//   // relatedCourses: UiCourse[];\r\n//   link: string;\r\n//   constructor(title, user, link) {\r\n//     this.title = title;\r\n//     this.link = link;\r\n//     this.user = user;\r\n//     // this.relatedCourses = relatedCourses;\r\n//   }\r\n// }\r\n//\r\n// export class MessageWrapper {\r\n//   message: Message;\r\n//   to: string;\r\n//   constructor(message, to) {\r\n//     this.message = message;\r\n//     this.to = to;\r\n//   }\r\n// }\r\n\r\n@Injectable()\r\nexport class AnswerService {\r\n\r\n  constructor(\r\n    private httpRequest: HttpRequestsService,\r\n    private http: HttpClient,\r\n    private angularFireDB: AngularFireDatabase,\r\n    private angularFireAuth: AngularFireAuth,\r\n    private angularFireMessaging: AngularFireMessaging) {\r\n  }\r\n\r\n  createAnswer(answer: Answer): Observable<any> {\r\n    return this.httpRequest.post('/answers', answer);\r\n  }\r\n\r\n  updateAnswer(answer: Answer): Observable<any> {\r\n    console.log('update answer');\r\n    return this.httpRequest.put('/answers', answer);\r\n  }\r\n  getAnswer(id: string): Observable<any> {\r\n    return this.httpRequest.get('/answers', [], [id]);\r\n  }\r\n  deleteAnswer(dbId: string) {\r\n    return this.httpRequest.delete('/answers' , dbId);\r\n  }\r\n\r\n  // notifyAnswer(firebaseToken: string, questionName: string, userName: string, relatedCourses: UiCourse[] , questionPath: string) {\r\n  //   const url = 'https://fcm.googleapis.com/fcm/send';\r\n  //   this.angularFireDB.object('/fcmTokens/').valueChanges()\r\n  //     .subscribe((list) => {\r\n  //       const questionOwnerToken = list[firebaseToken];\r\n  //       const headers = new HttpHeaders().set('Authorization', 'key=AAAAc9A8WeQ:APA91bEs459-ePMYaPJjllo7HtqDguA2Og' +\r\n  //         '-vTkrSZM8BvDTxYfBmZ3iBhs6G5MXLQfisQQzOckxyHQZv8-MQ_D5QURI9C_xo4-NMsAQkLQBn5P7FiWD2-BAQsznVrfZ-A20ewuvBIAHk');\r\n  //       const message = new Message(questionName , userName, questionPath);\r\n  //       const data = new MessageWrapper(message, questionOwnerToken);\r\n  //       // send notification to user\r\n  //       this.http.post(url, data, {headers: headers}).subscribe((res: any) => {\r\n  //         // console.log(res);\r\n  //       });\r\n  //       // add notification to db\r\n  //       const notification = new Notification(questionName, userName, null, true, questionPath);\r\n  //       const path = ('notifications/' + firebaseToken);\r\n  //       this.httpRequest.post(path, notification);\r\n  //     });\r\n  // }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, Router} from '@angular/router';\r\nimport {UserService} from '../user.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private router: Router,\r\n              private userService: UserService) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot): Promise<boolean> {\r\n    const isLoginPage = route.url.length === 0;\r\n    return new Promise<boolean>((resolve) => {\r\n      return this.userService.getFirebaseUser().then((user) => {\r\n        if (isLoginPage && user) {\r\n          this.router.navigate(['/home-page']);\r\n          resolve(false);\r\n        } else if (!isLoginPage && !user) {\r\n          this.router.navigate(['']);\r\n          resolve(false);\r\n        }\r\n        resolve(true);\r\n      });\r\n    });\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport * as firebase from 'firebase/app';\r\nimport {UserService} from '../user.service';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n  constructor(\r\n    public afAuth: AngularFireAuth,\r\n    private userService: UserService\r\n  ) {}\r\n\r\n  doGoogleLogin() {\r\n    return new Promise<any>((resolve, reject) => {\r\n      const provider = new firebase.auth.GoogleAuthProvider();\r\n      provider.addScope('profile');\r\n      provider.addScope('email');\r\n      this.afAuth.auth\r\n        .signInWithPopup(provider)\r\n        .then(res => {\r\n          resolve(res);\r\n        }, err => {\r\n          console.log(err);\r\n          reject(err);\r\n        });\r\n    });\r\n  }\r\n\r\n  doRegister(value) {\r\n    return new Promise<any>((resolve, reject) => {\r\n      firebase.auth().createUserWithEmailAndPassword(value.email, value.password)\r\n        .then(res => {\r\n          resolve(res);\r\n        }, err => reject(err));\r\n    });\r\n  }\r\n\r\n  doLogin(value) {\r\n    return new Promise<any>((resolve, reject) => {\r\n      firebase.auth().signInWithEmailAndPassword(value.email, value.password)\r\n        .then(res => {\r\n          resolve(res);\r\n        }, err => reject(err));\r\n    });\r\n  }\r\n\r\n  doLogout() {\r\n    return new Promise((resolve, reject) => {\r\n      this.userService.getFirebaseUser().then(() => {\r\n        this.userService.unregisterFromNotifications();\r\n        this.afAuth.auth.signOut().then(() => resolve(null));\r\n      }, () => {\r\n        this.userService.unregisterFromNotifications();\r\n        this.afAuth.auth.signOut().then(() => resolve(null));\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpRequestsService, QueryParams} from './http-requests.service';\r\nimport {UiCourse} from '../models/ui-course.model';\r\nimport {Observable, of} from 'rxjs';\r\nimport {Course} from '../models/course.model';\r\nimport {UiCoursesMap, UiCoursesMapNumbers} from '../models/ui-courses-map.model';\r\n\r\n@Injectable()\r\nexport class CourseService {\r\n  coursesRequest: Observable<any>;\r\n  private _courses: UiCourse[] = [];\r\n  private _coursesMap: UiCoursesMap = {};\r\n  private _courseNumberToName: UiCoursesMapNumbers = {};\r\n  private readonly _coursesLoadedPromise: Promise<any>;\r\n\r\n  constructor(private httpRequest: HttpRequestsService) {\r\n    this.coursesRequest = this.httpRequest.get('/courses');\r\n    this._coursesLoadedPromise = new Promise<any>(resolve => {\r\n      this.coursesRequest.subscribe((response: any) => {\r\n        const courses = response;\r\n        this._coursesMap = {};\r\n        courses.forEach((course: any) => {\r\n          const uiCourse = new UiCourse(course.id, course.courseName, course.courseNumber);\r\n          this._courses.push(uiCourse);\r\n          this._coursesMap[course.courseName] = uiCourse;\r\n          this._courseNumberToName[course.courseNumber] = course.courseName;\r\n          resolve(null);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  waitForCourses(): Promise<any> {\r\n    return this._coursesLoadedPromise;\r\n  }\r\n\r\n  getCoursesMap(): UiCoursesMap {\r\n    return this._coursesMap;\r\n  }\r\n\r\n  getCourseName(courseNumber: string) {\r\n    return this._courseNumberToName[courseNumber];\r\n  }\r\n\r\n  getCourses(): UiCourse[] {\r\n    return this._courses;\r\n  }\r\n\r\n  getCourse(courseId: string): Observable<Course> {\r\n    return this.httpRequest.get('/courses', [], [courseId]);\r\n  }\r\n\r\n  // get skilled users firebase token\r\n  getSkilledUsers(courseId: string): Observable<any> {\r\n    return this.httpRequest.get('/courses/skilled-users', [], [courseId]);\r\n  }\r\n\r\n  addCourse(uiCourse: UiCourse): Observable<any> {\r\n    return this.httpRequest.post('/courses', new Course(uiCourse));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpParams} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {UiCourse} from '../models/ui-course.model';\r\nimport {query} from '@angular/animations';\r\n\r\nexport class QueryParams {\r\n  paramName: string;\r\n  paramValue: string|string[];\r\n\r\n  constructor(name: string, value: string|string[]) {\r\n    this.paramName = name;\r\n    this.paramValue = value;\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class HttpRequestsService {\r\n\r\n  private _baseUrl = 'http://localhost:3000/api';\r\n\r\n  constructor(private http: HttpClient) {\r\n    // this.http.post(this._baseUrl + '/courses', new UiCourse('blah', '0011'));\r\n  }\r\n\r\n  post(path: string, model: any) {\r\n    return this.http.post(this._baseUrl + path, model);\r\n  }\r\n\r\n  delete(path: string, id: string): Observable<any> {\r\n    path += ('/' + id);\r\n    return this.http.delete(this._baseUrl + path);\r\n  }\r\n\r\n  get(path: string, reqQuery?: QueryParams[], params?: string[]): Observable<any> {\r\n    const queryParams = {};\r\n    let pathAndParams = path;\r\n    if (reqQuery) {\r\n      reqQuery.forEach(param => {\r\n        queryParams[param.paramName] = param.paramValue;\r\n      });\r\n    }\r\n    if (params) {\r\n      const p = params.join('/');\r\n      pathAndParams += '/' + p;\r\n    }\r\n    return this.http.get(this._baseUrl + pathAndParams, {params: queryParams}).pipe(\r\n      map(res  => {\r\n      return res['data'];\r\n  }));\r\n  }\r\n\r\n  put(path: string, model: any) {\r\n    return this.http.put(this._baseUrl + path, model);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFireDatabase } from 'angularfire2/database';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport { AngularFireMessaging } from 'angularfire2/messaging';\r\nimport { take } from 'rxjs/operators';\r\nimport {Notification} from '../models/notification.model';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {HttpRequestsService} from './http-requests.service';\r\nimport {UserProfile} from '../models/user-profile.model';\r\nimport {Question} from '../models/question.model';\r\n\r\n@Injectable()\r\nexport class MessagingService {\r\n  user: UserProfile;\r\n  seenNotifications: Notification[] = [];\r\n  newNotifications: Notification[] = [];\r\n  constructor(\r\n    private angularFireDB: AngularFireDatabase,\r\n    private angularFireAuth: AngularFireAuth,\r\n    private http: HttpClient,\r\n    private httpRequest: HttpRequestsService,\r\n    private angularFireMessaging: AngularFireMessaging) {\r\n    this.angularFireMessaging.messaging.subscribe(\r\n      (_messaging) => {\r\n        _messaging.onMessage = _messaging.onMessage.bind(_messaging);\r\n        _messaging.onTokenRefresh = _messaging.onTokenRefresh.bind(_messaging);\r\n      }\r\n    );\r\n    // hook message receiver\r\n    this.receiveMessage();\r\n  }\r\n\r\n  /**\r\n   * Register user to notification service.\r\n   * @param user\r\n   */\r\n  registerUser(user: UserProfile) {\r\n    this.user = user;\r\n    this.requestPermission();\r\n  }\r\n\r\n  getOfflineNotifications(user: UserProfile) {\r\n    this.user = user;\r\n    this.requestPermission();\r\n    this.httpRequest.get('/notifications', [], [this.user.firebaseToken]).subscribe((res) => {\r\n      if (res) {\r\n        res.forEach((notification) => {\r\n          if (notification.isSeen) {\r\n            this.seenNotifications.push(Notification.deserialize(notification));\r\n          } else {\r\n            this.newNotifications.push(Notification.deserialize(notification));\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * update token in firebase database\r\n   *\r\n   * @param token token as a value\r\n   */\r\n  updateToken(token) {\r\n    // we can change this function to request our backend service\r\n    this.angularFireAuth.authState.pipe(take(1)).subscribe(\r\n      () => {\r\n        const data = {};\r\n        data[this.user.firebaseToken] = token;\r\n        this.angularFireDB.object('fcmTokens/').update(data);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * request permission for notification from firebase cloud messaging\r\n   */\r\n  requestPermission() {\r\n    this.angularFireMessaging.requestToken.subscribe(\r\n      (token) => {\r\n        // console.log(token);\r\n        this.updateToken(token);\r\n      },\r\n      (err) => {\r\n        console.error('Unable to get permission to notify.', err);\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteNotification(notification: Notification) {\r\n    this.httpRequest.delete('/notifications', notification.id).subscribe((response: any) => {\r\n      let index = this.newNotifications.indexOf(notification);\r\n      if (index > -1) {\r\n        this.newNotifications.splice(index, 1);\r\n      } else { // already seen\r\n        index = this.seenNotifications.indexOf(notification);\r\n        if (index > -1) {\r\n          this.seenNotifications.splice(index, 1);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * hook method when new notification received in foreground\r\n   */\r\n  receiveMessage() {\r\n    this.angularFireMessaging.messages.subscribe(\r\n      (payload: any) => {\r\n        const value = payload.valueOf();\r\n        const receivedNotification =\r\n            new Notification(\r\n                value.data['gcm.notification.subject'],\r\n                value.data['gcm.notification.owner'],\r\n                JSON.parse(value.data['gcm.notification.isSeen']),\r\n                JSON.parse(value.data['gcm.notification.isAnswer']),\r\n                value.data['gcm.notification.questionId'],\r\n                value.data['gcm.notification.id'],\r\n                new Date(value.data['gcm.notification.timestamp']));\r\n        this.newNotifications.push(receivedNotification);\r\n      });\r\n  }\r\n\r\n  resetMessage() {\r\n    // this.currentMessage.\r\n    // this.messages = [];\r\n  }\r\n\r\n  markNotificationsAsSeen(justSeenNotification: Notification[]) {\r\n    justSeenNotification.forEach((notification) => {\r\n      notification.isSeen = true;\r\n      this.httpRequest.put('/notifications', notification).subscribe(res => {\r\n        console.log('Update Succesful');\r\n      }, err => {\r\n        console.error('Update Unsuccessful: ' + err);\r\n      });\r\n      this.seenNotifications.push(notification);\r\n    });\r\n  }\r\n\r\n  sendMessage(receiverFbToken: string, senderFbToken: string, questionName: string, senderName: string, questionId: string,\r\n              isSenderAnswered: boolean) {\r\n    // avoid self notifications\r\n    if (receiverFbToken === senderFbToken) {\r\n      return;\r\n    }\r\n    const url = 'https://fcm.googleapis.com/fcm/send';\r\n    this.angularFireDB.object('/fcmTokens/').valueChanges()\r\n      .subscribe((list) => {\r\n        const questionOwnerToken = list[receiverFbToken];\r\n        const headers = new HttpHeaders().set('Authorization', 'key=AAAAc9A8WeQ:APA91bEs459-ePMYaPJjllo7HtqDguA2Og' +\r\n          '-vTkrSZM8BvDTxYfBmZ3iBhs6G5MXLQfisQQzOckxyHQZv8-MQ_D5QURI9C_xo4-NMsAQkLQBn5P7FiWD2-BAQsznVrfZ-A20ewuvBIAHk');\r\n        const notification = new Notification(questionName, senderName, false, isSenderAnswered, questionId);\r\n        // add notification to db\r\n        const path = ('/notifications/' + receiverFbToken);\r\n        this.httpRequest.post(path, notification).subscribe((response: any) => {\r\n          if (response.data) { // if data is null then user don't want to get this notification\r\n            notification.id = response.data._id;\r\n            // send notification to user\r\n            const data = notification.getNotificationWrapper(questionOwnerToken);\r\n            this.http.post(url, data, {headers: headers}).subscribe();\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  unregisterUser() {\r\n    this.seenNotifications.splice(0, this.seenNotifications.length);\r\n    this.newNotifications.splice(0, this.newNotifications.length);\r\n    this.user = null;\r\n  }\r\n}\r\n\r\n","import {PartnerPost} from '../models/partner-post.model';\r\nimport { Observable } from 'rxjs';\r\nimport {Injectable} from '@angular/core';\r\nimport {HttpRequestsService} from './http-requests.service';\r\n\r\n@Injectable()\r\nexport class PartnerPostService {\r\n\r\n  constructor(\r\n    private httpRequest: HttpRequestsService\r\n  ) { }\r\n\r\n  createPartnerPost(partnerPost: PartnerPost): Observable<any> {\r\n    return this.httpRequest.post('/partner-posts', partnerPost);\r\n  }\r\n  deletePartnerPost(dbId: string, isPartnerPost: boolean) {\r\n    const path = isPartnerPost ? '/partner-posts' : '/change-hours';\r\n    return this.httpRequest.delete(path , dbId);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpRequestsService} from './http-requests.service';\r\nimport {Program} from '../models/program.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProgramService {\r\n\r\n  private _programs: Program[] = [];\r\n  private _programsLoaded: Promise<void>;\r\n\r\n  // TODO(or, nati): Add programs to DB and implement the BE.\r\n  private _dummyPrograms: string[] = ['Computer Science', 'Electrical Engineering',\r\n    'Law', 'Computer Science and Electrical Engineering', 'Economics',\r\n    'Management', 'Physics', 'Chemistry'];\r\n  private _implemented = false;\r\n  // end of TODO\r\n\r\n  constructor(private httpRequest: HttpRequestsService) {\r\n    // TODO(or, nati): Remove after implemented.\r\n    if (!this._implemented) {\r\n      this._dummyPrograms.forEach((name) => this._programs.push(new Program('0', name)));\r\n      return;\r\n    }\r\n    // end of TODO\r\n    this._programsLoaded = new Promise<void>((resolve) => {\r\n      this.httpRequest.get('/programs').subscribe((programs: any) => {\r\n        programs.forEach((program) => {\r\n          this._programs.push(Program.deserialize(program));\r\n        });\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  getPrograms(): Promise<Program[]> {\r\n    // TODO(or, nati): Remove after implemented.\r\n    if (!this._implemented) {\r\n      return Promise.resolve(this._programs);\r\n    }\r\n    // end of TODO\r\n    return new Promise<Program[]>(async resolve => {\r\n      await this._programsLoaded;\r\n      resolve(this._programs);\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpRequestsService, QueryParams} from './http-requests.service';\r\nimport {Observable, of} from 'rxjs';\r\nimport {Question} from '../models/question.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QueryService {\r\n  constructor(private httpRequest: HttpRequestsService) {\r\n  }\r\n\r\n  getQueryResult(content: string, filters: string[]): Observable<Question[]> {\r\n    // return /*Observable.*/of(this.cachedCourses);\r\n    const queryString = new QueryParams('content', content);\r\n    const queryFilters = new QueryParams('filters', filters);\r\n    return this.httpRequest.get('/query-results', [queryString, queryFilters]);\r\n  }\r\n}\r\n","import {Question} from '../models/question.model';\r\nimport { Observable } from 'rxjs';\r\nimport {Injectable} from '@angular/core';\r\nimport {HttpRequestsService} from './http-requests.service';\r\nimport {UserProfile} from '../models/user-profile.model';\r\n\r\n@Injectable()\r\nexport class QuestionService {\r\n\r\n  constructor(\r\n    private httpRequest: HttpRequestsService\r\n  ) { }\r\n\r\n  createQuestion(question: Question): Observable<any> {\r\n    return this.httpRequest.post('/questions', question);\r\n  }\r\n  updateQuestion(question: Question): Observable<any> {\r\n    console.log('update question');\r\n    return this.httpRequest.put('/questions', question);\r\n  }\r\n\r\n  //\r\n  // // Read Question, takes no arguments\r\n  // getQuestions(): Observable<Question[]> {\r\n  //   return this.http.get(this.questionUrl).pipe (\r\n  //     map(res  => {\r\n  //       // Maps the response object sent from the server\r\n  //       return res['data'].docs as Question[];\r\n  //     })\r\n  // ); }\r\n  // // Update Question, takes a Question Object as parameter\r\n  // editQuestion( question: Question ) {\r\n  //   const editUrl = `${this.questionUrl}`;\r\n  //   // returns the observable of http put request\r\n  //   return this.http.put(editUrl, question);\r\n  // }\r\n  //\r\n  // deleteQuestion(id: string): any {\r\n  //   // Delete the object by the id\r\n  //   const deleteUrl = `${this.questionUrl}/${id}`;\r\n  //   return this.http.delete(deleteUrl).pipe(\r\n  //     map(res  => {\r\n  //       return res;\r\n  //     })\r\n  //   ); }\r\n  //\r\n  // // Default Error handling method.\r\n  // private handleError(error: any): Promise<any> {\r\n  //   console.error('An error occurred', error); // for demo purposes only\r\n  //   return Promise.reject(error.message || error);\r\n  // }\r\n\r\n\r\n  getQuestion(id: string): Observable<any> {\r\n    return this.httpRequest.get('/questions', [], [id]);\r\n  }\r\n}\r\n","import {CourseReview} from '../models/course-review.model';\r\nimport { Observable } from 'rxjs';\r\nimport {Injectable} from '@angular/core';\r\nimport {HttpRequestsService} from './http-requests.service';\r\n\r\n@Injectable()\r\nexport class ReviewService {\r\n\r\n  constructor(\r\n    private httpRequest: HttpRequestsService\r\n  ) { }\r\n\r\n  createReview(review: CourseReview): Observable<any> {\r\n    return this.httpRequest.post('/course-reviews', review);\r\n  }\r\n\r\n  deleteReview(dbId: string) {\r\n    return this.httpRequest.delete('/course-reviews' , dbId);\r\n  }\r\n\r\n  getReview(id: string): Observable<any> {\r\n    return this.httpRequest.get('/course-reviews', [], [id]);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {AngularFirestore} from 'angularfire2/firestore';\r\nimport {AngularFireAuth} from 'angularfire2/auth';\r\nimport * as firebase from 'firebase/app';\r\nimport {UserProfile} from '../models/user-profile.model';\r\nimport {HttpRequestsService} from './http-requests.service';\r\nimport {Observable} from 'rxjs';\r\nimport {Question} from '../models/question.model';\r\nimport {NotificationSettings} from '../models/notification-settings.model';\r\nimport {MessagingService} from './messaging.service';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  private _currentUser: UserProfile;\r\n  private _getOfflineNotifications = true;\r\n\r\n  constructor(\r\n    public db: AngularFirestore,\r\n    public afAuth: AngularFireAuth,\r\n    private messagingService: MessagingService,\r\n    private httpRequest: HttpRequestsService\r\n  ) {}\r\n\r\n  getCurrentUserId(): string {\r\n    return this._currentUser.firebaseToken;\r\n  }\r\n\r\n  getFirebaseUser() {\r\n    return new Promise<any>((resolve) => {\r\n      firebase.auth().onAuthStateChanged((user: firebase.User) => {\r\n        if (user) {\r\n          // this.httpRequest\r\n          resolve(user);\r\n        } else {\r\n          resolve(null);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  subscribeNewUser(user: UserProfile): Observable<any> {\r\n    console.log('subscribe new user');\r\n    this._currentUser = user;\r\n    const res = this.httpRequest.post('/user', user);\r\n    res.subscribe((response: any) => {\r\n      user.id = response.data._id;\r\n      this.messagingService.registerUser(this._currentUser);\r\n    });\r\n    return res;\r\n  }\r\n\r\n  updateUserDetails(user: UserProfile): Observable<any> {\r\n    console.log('update user');\r\n    return this.httpRequest.put('/user', user);\r\n  }\r\n\r\n  updateFavorites(user: UserProfile, question: Question): Observable<any> {\r\n    return this.httpRequest.put('/user/update-favorite',\r\n      {userId: user.id, questionId: question.id});\r\n  }\r\n\r\n  updateMyCourses(user: UserProfile, courseId: string): Observable<any> {\r\n    return this.httpRequest.put(\r\n      '/user/update-my-courses',\r\n      {userId: user.id, courseId: courseId});\r\n  }\r\n\r\n  addToMyCourses(user: UserProfile, courseIds: string[]): Observable<any> {\r\n    return this.httpRequest.put('/user/add-to-my-courses',\r\n      {userId: user.id, courseIds: courseIds});\r\n  }\r\n\r\n  removeFromMyCourses(user: UserProfile, courseId: string): Observable<any> {\r\n    return this.httpRequest.put('/user/remove-from-my-courses',\r\n      {userId: user.id, courseId: courseId});\r\n  }\r\n\r\n  getUser(fromServer = false): Promise<UserProfile> {\r\n    if (this._currentUser && !fromServer) {\r\n      return Promise.resolve(this._currentUser);\r\n    }\r\n    return new Promise<any>(resolve => {\r\n      this.getFirebaseUser().then((res: firebase.User) => {\r\n        if (!res) {\r\n          return null;\r\n        }\r\n        this.httpRequest.get('/user', [], [res.uid]).subscribe(user => {\r\n          this._currentUser = UserProfile.deserialize(user);\r\n          if (this._getOfflineNotifications) {\r\n            this.messagingService.getOfflineNotifications(this._currentUser);\r\n            this._getOfflineNotifications = false;\r\n          }\r\n          resolve(this._currentUser);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  setCurrentUser(user: UserProfile) {\r\n    this._currentUser = user;\r\n  }\r\n\r\n  updateNotificationSettings(newSettings: NotificationSettings) {\r\n    this._currentUser.notificationSettings = newSettings;\r\n    const userId = this._currentUser.id;\r\n    return this.httpRequest.put('/user/update-notification-settings',\r\n      {userId, newSettings});\r\n  }\r\n\r\n  unregisterFromNotifications() {\r\n    this._getOfflineNotifications = true;\r\n    this.messagingService.unregisterUser();\r\n  }\r\n}\r\n","<div class=\"SignUpPage\">\r\n  <app-nav-bar [isSignUp]=\"true\" (loginAttempt)=\"tryLogin($event)\"></app-nav-bar>\r\n  <mat-card class=\"SignUpCard\">\r\n    <mat-card-header class=\"SignUpHeader\">\r\n      <mat-card-title class=\"SignUpTitle\">\r\n        Sign Up\r\n      </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <div class=\"GoogleLogin\">\r\n        <img src=\"../../assets/google-normal.png\" (click)=\"tryGoogleLogin()\" class=\"GoogleLoginNormal\">\r\n      </div>\r\n      <div class=\"SeparatorContainer\">\r\n        <div class=\"Separator\" content=\"''\"></div>\r\n        <span class=\"OrText\">OR</span>\r\n        <div class=\"Separator\" content=\"''\"></div>\r\n      </div>\r\n      <form [formGroup]=\"signUpForm\" (ngSubmit)=\"tryRegister(signUpForm.value)\">\r\n        <div class=\"Name\">\r\n          <mat-form-field appearance=\"fill\" class=\"ShortField Field\">\r\n            <mat-label>First name</mat-label>\r\n            <input matInput placeholder=\"\" required formControlName=\"firstName\">\r\n          </mat-form-field>\r\n          <mat-form-field appearance=\"fill\" class=\"ShortField Field\">\r\n            <mat-label>Last name</mat-label>\r\n            <input matInput placeholder=\"\" required formControlName=\"lastName\">\r\n          </mat-form-field>\r\n        </div>\r\n        <mat-form-field appearance=\"fill\" class=\"LongField Field\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput placeholder=\"\" required [type]=\"'email'\" formControlName=\"email\">\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\" class=\"LongField Field\">\r\n          <mat-label>Password</mat-label>\r\n          <input matInput placeholder=\"\" required [type]=\"hidePassword ? 'password' : 'text'\"\r\n                 formControlName=\"password\">\r\n          <mat-icon class=\"HideIcon\" matSuffix (click)=\"hidePassword = !hidePassword\">\r\n            {{hidePassword ? 'visibility_off' : 'visibility'}}\r\n          </mat-icon>\r\n        </mat-form-field>\r\n        <div class=\"ButtonContainer\">\r\n          <button mat-raised-button class=\"CreateAccountButton\"\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  [disabled]=\"!signUpForm.valid\">\r\n            Create Account\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\nimport { AuthService } from '../services/auth/auth.service';\r\nimport {Router} from '@angular/router';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {UserService} from '../services/user.service';\r\nimport {UserProfile} from '../models/user-profile.model';\r\nimport {AppRoutingDataService, RoutingData} from '../app-routing-data.service';\r\nimport * as firebase from 'firebase';\r\nimport {MatSnackBar} from '@angular/material';\r\n\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.scss']\r\n})\r\n\r\nexport class SignUpComponent implements OnInit {\r\n  static NewUser = class implements RoutingData<UserProfile> {\r\n    constructor(private user: UserProfile) {}\r\n\r\n    getData(): UserProfile {\r\n      return this.user;\r\n    }\r\n  };\r\n\r\n  signUpForm = new FormGroup({\r\n    firstName: new FormControl('', [Validators.required]),\r\n    lastName: new FormControl('', [Validators.required]),\r\n    email: new FormControl('', [Validators.required, Validators.email]),\r\n    password: new FormControl('', [Validators.required])\r\n  });\r\n  hidePassword = true;\r\n\r\n  private successMessage: string;\r\n  private errorMessage: string;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private userService: UserService,\r\n    private snackBar: MatSnackBar,\r\n    private routingDataService: AppRoutingDataService\r\n  ) { }\r\n\r\n  tryGoogleLogin() {\r\n    this.authService.doGoogleLogin().then(\r\n      response => {\r\n        this._enterApp(response);\r\n      }, () => {}\r\n    );\r\n  }\r\n\r\n  tryRegister(value) {\r\n    this.authService.doRegister(value)\r\n      .then(response => {\r\n        console.log(response);\r\n        this.errorMessage = '';\r\n        this.successMessage = 'Your account has been created';\r\n        this._enterApp(response, value);\r\n      }, err => {\r\n        let message;\r\n        const errCode: string = err.code;\r\n        if (errCode.includes('email-already-in-use')) {\r\n          message = 'Email already in use!';\r\n        }\r\n        this._promptToast(message);\r\n      });\r\n  }\r\n\r\n  private _promptToast(msg?: string) {\r\n    const message = msg ? msg : 'Something went wrong, please try again';\r\n    this.snackBar.open(message, '', {\r\n      duration: 2000 // Prompt the toast 2 seconds.\r\n    });\r\n  }\r\n\r\n  tryLogin(value) {\r\n    this.authService.doLogin(value).then(\r\n        (res) => {\r\n          this._enterApp(res, value);\r\n        },\r\n        (err) => {\r\n          let message;\r\n          const errCode: string = err.code;\r\n          if (errCode.includes('wrong-password')) {\r\n            message = 'Wrong password!';\r\n          } else if (errCode.includes('user-not-found')) {\r\n            message = 'Wrong email!';\r\n          }\r\n          this._promptToast(message);\r\n        });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  private _enterApp(response: firebase.auth.UserCredential, value?: any) {\r\n    if (response.additionalUserInfo.isNewUser) {\r\n      const user = this._createUser(response, value);\r\n      this._subscribeUser(user);\r\n      this._navigateToHomePage(user);\r\n    } else {\r\n      this.userService.getUser(true).then((user: UserProfile) => {\r\n        this._navigateToHomePage(user);\r\n      });\r\n    }\r\n  }\r\n\r\n  private _subscribeUser(user: UserProfile) {\r\n    this.userService.subscribeNewUser(user);\r\n  }\r\n\r\n  private _navigateToHomePage(user: UserProfile) {\r\n    this.userService.setCurrentUser(user);\r\n    const newUser = new SignUpComponent.NewUser(user);\r\n    this.routingDataService.setRoutingData('user', newUser);\r\n    this.router.navigate(['home-page']);\r\n  }\r\n\r\n  private _createUser(response: firebase.auth.UserCredential, value?: any): UserProfile {\r\n    let firstName: string, lastName = '';\r\n    if (value) {\r\n      firstName = value.firstName;\r\n      lastName = value.lastName;\r\n    } else {\r\n      const displayName = response.user.displayName.split(' ');\r\n      firstName = displayName[0];\r\n      if (displayName.length > 1) {\r\n        lastName = displayName.slice(1).join(' ');\r\n      }\r\n    }\r\n    return new UserProfile(\r\n      response.user.uid,\r\n      firstName,\r\n      lastName,\r\n      response.user.email,\r\n      response.additionalUserInfo.isNewUser);\r\n  }\r\n}\r\n","<div class=\"AnswerEditor\">\r\n  <mat-card class=\"AnswerEditorCard\">\r\n    <mat-card-content>\r\n      <div class=\"Question\">\r\n        <span class=\"mat-h2 PostTitleText\">Answer:</span>\r\n        <angular-editor [config]=\"editorConfig\" class=\"QuestionTextArea\" [(ngModel)]=\"content\">\r\n        </angular-editor>\r\n      </div>\r\n      <div class=\"DoneButtonContainer\">\r\n        <button mat-raised-button class=\"Button CancelButton\" (click)=\"cancel()\">cancel</button>\r\n        <button mat-raised-button class=\"Button\" (click)=\"submitAnswer()\">submit</button>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import {AfterViewChecked, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {AngularEditorConfig} from '@kolkov/angular-editor';\r\nimport {PostContent} from '../post-editor/post-editor.component';\r\nimport {MatSnackBar} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-single-answer-editor',\r\n  templateUrl: './single-answer-editor.component.html',\r\n  styleUrls: ['./single-answer-editor.component.scss']\r\n})\r\nexport class SingleAnswerEditorComponent implements OnInit, AfterViewChecked {\r\n  @Output() answerSubmitted = new EventEmitter<PostContent>();\r\n  @Output() answerCanceled = new EventEmitter();\r\n  @Output() rendered = new EventEmitter();\r\n  content = '';\r\n  editorConfig: AngularEditorConfig = {\r\n    editable: true,\r\n    height: '15rem',\r\n    minHeight: '3rem',\r\n    placeholder: 'Enter text here...',\r\n    translate: 'no',\r\n    // uploadUrl: 'v1/images', // if needed\r\n    customClasses: [ // optional\r\n      {\r\n        name: 'redText',\r\n        class: 'redText'\r\n      },\r\n    ]\r\n  };\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  submitAnswer() {\r\n    if (this.content === '') {\r\n      this.snackBar.open('Empty answer isn\\'t allowed', '', {\r\n        duration: 2000 // Prompt the toast 2 seconds.\r\n      });\r\n    } else {\r\n      this.answerSubmitted.emit(new PostContent('', '', this.content));\r\n    }\r\n  }\r\n\r\n  cancel () {\r\n    this.answerCanceled.emit();\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    this.rendered.emit();\r\n  }\r\n\r\n}\r\n","<div class=\"SpinnerContainer\">\r\n  <mat-spinner [diameter]=\"diameter\"></mat-spinner>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  templateUrl: './spinner.component.html',\r\n  styleUrls: ['./spinner.component.scss']\r\n})\r\nexport class SpinnerComponent implements OnInit {\r\n\r\n  @Input() diameter = 40;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<app-nav-bar></app-nav-bar>\r\n<app-spinner *ngIf=\"!isLoaded\"></app-spinner>\r\n<div class=\"CardsWrapper\" *ngIf=\"isLoaded\">\r\n  <app-profile-details [isProfilePage]=\"true\"\r\n                       [userToDisplay]=\"userDetails\"></app-profile-details>\r\n  <div class=\"Page\">\r\n    <mat-tab-group class=\"Tabs\">\r\n      <mat-tab label=\"My Questions\">\r\n        <app-empty-state\r\n          [emptyStateMessage]=\"'You didn\\'t ask any questions...'\"\r\n          *ngIf=\"userDetails.myQuestions.length == 0\"></app-empty-state>\r\n        <ng-container *ngIf=\"userDetails.myQuestions.length > 0\">\r\n          <mat-list-item class=\"ListItem\" *ngFor=\"let question of userDetails.myQuestions\">\r\n            <button mat-flat-button mat-line class=\"mat-h4 QuestionTitle\"\r\n                    (click)=\"navigateToQuestionPage(question)\">{{question.subject}}</button>\r\n            <span mat-line class=\"VotesAndAnswers\">\r\n            <span>votes: {{question.upvote.count}}</span>\r\n            <span>answers: {{question.answers.length}}</span>\r\n          </span>\r\n          </mat-list-item>\r\n        </ng-container>\r\n      </mat-tab>\r\n      <mat-tab label=\"My Posts\">\r\n        <app-empty-state\r\n          [emptyStateMessage]=\"'You didn\\'t write any posts...'\"\r\n          *ngIf=\"cumulativeLength == 0\"></app-empty-state>\r\n        <ng-container *ngIf=\"cumulativeLength > 0\">\r\n          <div mat-subheader class=\"Subheader\" *ngIf=\"userDetails.myPartnerPosts.length != 0\">Find a Partner</div>\r\n          <mat-accordion class=\"CoursePageAccordion\">\r\n            <mat-expansion-panel class=\"CoursePageExpansionPanel\" *ngFor=\"let partner of userDetails.myPartnerPosts\" [hideToggle]=\"true\">\r\n              <mat-expansion-panel-header class=\"Header\">\r\n                <mat-panel-title>\r\n                  <span class=\"CourseReviewSubjectAndRank mat-h4 QuestionTitle\">\r\n                    <span>{{partner.subject}}</span>\r\n                  </span>\r\n                  <span>\r\n                    <mat-icon [inline]=\"true\" (click)=\"tryDeletePost(partner, true, false)\" class=\"DeleteIcon\">delete</mat-icon>\r\n                  </span>\r\n                </mat-panel-title>\r\n              </mat-expansion-panel-header>\r\n              <div [innerHtml]=\"partner.content\"></div>\r\n              <mat-divider class=\"ContactDivider\"></mat-divider>\r\n              <app-copy-to-clipboard [email]=\"partner.owner.email\"></app-copy-to-clipboard>\r\n            </mat-expansion-panel>\r\n          </mat-accordion>\r\n          <mat-divider class=\"CoursePageAccordion\" *ngIf=\"userDetails.myPartnerPosts.length != 0\"></mat-divider>\r\n          <div mat-subheader class=\"Subheader\" *ngIf=\"userDetails.myChangeHoursPosts.length != 0\">Change Hours</div>\r\n          <mat-accordion class=\"CoursePageAccordion\">\r\n            <mat-expansion-panel *ngFor=\"let hour of userDetails.myChangeHoursPosts\" class=\"CoursePageExpansionPanel\" [hideToggle]=\"true\">\r\n              <mat-expansion-panel-header class=\"Header\">\r\n                <mat-panel-title>\r\n                  <span class=\"CourseReviewSubjectAndRank mat-h4 QuestionTitle\">\r\n                    <span>{{hour.subject}}</span>\r\n                  </span>\r\n                  <span>\r\n                    <mat-icon [inline]=\"true\" (click)=\"tryDeletePost(hour, false, false)\" class=\"DeleteIcon\">delete</mat-icon>\r\n                  </span>\r\n                </mat-panel-title>\r\n              </mat-expansion-panel-header>\r\n              <div [innerHtml]=\"hour.content\"></div>\r\n              <mat-divider class=\"ContactDivider\"></mat-divider>\r\n              <app-copy-to-clipboard [email]=\"hour.owner.email\"></app-copy-to-clipboard>\r\n            </mat-expansion-panel>\r\n          </mat-accordion>\r\n          <mat-divider class=\"Divider\" *ngIf=\"userDetails.myChangeHoursPosts.length != 0\"></mat-divider>\r\n          <div mat-subheader class=\"Subheader\" *ngIf=\"userDetails.myCourseReviews.length != 0\">Reviews</div>\r\n          <mat-accordion class=\"CoursePageAccordion\">\r\n            <mat-expansion-panel *ngFor=\"let review of userDetails.myCourseReviews\" class=\"CoursePageExpansionPanel\" [hideToggle]=\"true\">\r\n              <mat-expansion-panel-header class=\"Header\">\r\n                <mat-panel-title>\r\n                  <span class=\"CourseReviewSubjectAndRank mat-h4 QuestionTitle\">\r\n                    <span>{{review.subject}}</span>\r\n                    <span class=\"SmallStarsContainer\">\r\n                      <mat-icon [inline]=\"true\" class=\"SmallStar\" *ngFor=\"let i of range(review.rank)\">\r\n                        star\r\n                      </mat-icon>\r\n                    </span>\r\n                  </span>\r\n                  <span>\r\n                    <mat-icon [inline]=\"true\" (click)=\"tryDeletePost(review, false, true)\" class=\"DeleteIcon\">delete</mat-icon>\r\n                  </span>\r\n                </mat-panel-title>\r\n              </mat-expansion-panel-header>\r\n              <div [innerHtml]=\"review.content\"></div>\r\n            </mat-expansion-panel>\r\n          </mat-accordion>\r\n        </ng-container>\r\n      </mat-tab>\r\n      <mat-tab label=\"Favorites\">\r\n        <app-empty-state\r\n          [emptyStateMessage]=\"'You didn\\'t choose favorite questions...'\"\r\n          *ngIf=\"userDetails.favorites.length == 0\"></app-empty-state>\r\n        <ng-container *ngIf=\"userDetails.favorites.length > 0\">\r\n          <mat-list-item class=\"ListItem\" *ngFor=\"let question of userDetails.favorites\">\r\n            <button mat-flat-button mat-line class=\"mat-h4 QuestionTitle\" (click)=\"navigateToQuestionPage(question)\">{{question.subject}}</button>\r\n            <span mat-line class=\"VotesAndAnswers\">\r\n            <span>votes: {{question.upvote.count}}</span>\r\n            <span>answers: {{question.answers.length}}</span>\r\n          </span>\r\n          </mat-list-item>\r\n        </ng-container>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {UserProfile} from '../models/user-profile.model';\r\nimport {UserService} from '../services/user.service';\r\nimport {Question, QuestionNavigationData} from '../models/question.model';\r\nimport {AppRoutingDataService} from '../app-routing-data.service';\r\nimport {Router} from '@angular/router';\r\nimport {MatDialog, MatDialogConfig, MatSnackBar} from '@angular/material';\r\nimport {DeleteConfirmDialogComponent} from '../delete-confirm-dialog/delete-confirm-dialog.component';\r\nimport {PartnerPostService} from '../services/partner-post.service';\r\nimport {ReviewService} from '../services/review.service';\r\n\r\n@Component({\r\n  selector: 'app-user-profile',\r\n  templateUrl: './user-profile.component.html',\r\n  styleUrls: ['./user-profile.component.scss']\r\n})\r\nexport class UserProfileComponent implements OnInit {\r\n  userDetails: UserProfile;\r\n  isLoaded = false;\r\n  cumulativeLength = 0;\r\n\r\n  constructor(private userService: UserService,\r\n              private partnerPostService: PartnerPostService,\r\n              private routingDataService: AppRoutingDataService,\r\n              private reviewService: ReviewService,\r\n              private router: Router,\r\n              private snackBar: MatSnackBar,\r\n              private dialog: MatDialog) {\r\n    this.userService.getUser(true).then((user: UserProfile) => {\r\n      this.userDetails = user;\r\n      this.cumulativeLength = this.userDetails.myCourseReviews.length +\r\n        this.userDetails.myPartnerPosts.length + this.userDetails.myChangeHoursPosts.length;\r\n      this.isLoaded = true;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  navigateToQuestionPage(question: Question) {\r\n    this.routingDataService.setRoutingData('question', new QuestionNavigationData(question));\r\n    this.router.navigate(['question-page'], {queryParams: {id: question.id}});\r\n  }\r\n\r\n  tryDeletePost(post: any, isPartnerPost: boolean, isReview: boolean) { // if isPartnerPost = false than this is change hour post\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.width = '500px';\r\n    dialogConfig.data = {title: ('Remove ' + (isReview ? 'Review' : 'Post')),\r\n      text: 'Are you sure you want to delete this ' + (isReview ? 'review' : 'post') +\r\n        '? It will be no longer exist'};\r\n    this.dialog.open(DeleteConfirmDialogComponent, dialogConfig).afterClosed().subscribe(\r\n      (result: boolean) => {\r\n        if (result) {\r\n          if (isReview) {\r\n            this.reviewService.deleteReview(post.id).subscribe();\r\n            const index = this.userDetails.myCourseReviews.indexOf(post, 0);\r\n            if (index > -1) {\r\n              this.userDetails.myCourseReviews.splice(index, 1);\r\n            }\r\n          } else {\r\n            // delete post\r\n            this.partnerPostService.deletePartnerPost(post.id, isPartnerPost).subscribe();\r\n            if (isPartnerPost) {\r\n              const index = this.userDetails.myPartnerPosts.indexOf(post, 0);\r\n              if (index > -1) {\r\n                this.userDetails.myPartnerPosts.splice(index, 1);\r\n              }\r\n            } else { // changeHourPost\r\n              const index = this.userDetails.myChangeHoursPosts.indexOf(post, 0);\r\n              if (index > -1) {\r\n                this.userDetails.myChangeHoursPosts.splice(index, 1);\r\n              }\r\n            }\r\n          }\r\n\r\n          this.snackBar.open('Post Successfully Deleted', '', {\r\n            duration: 2000 // Prompt the toast 2 seconds.\r\n          });\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  range(rank: number) {\r\n    return Array(rank - (rank % 1));\r\n  }\r\n}\r\n","\r\nexport { AppServerModule } from './app/app.server.module';\r\n","module.exports = require(\"@angular/animations\");","module.exports = require(\"@angular/animations/browser\");","module.exports = require(\"@angular/cdk/a11y\");","module.exports = require(\"@angular/cdk/accordion\");","module.exports = require(\"@angular/cdk/bidi\");","module.exports = require(\"@angular/cdk/collections\");","module.exports = require(\"@angular/cdk/keycodes\");","module.exports = require(\"@angular/cdk/layout\");","module.exports = require(\"@angular/cdk/observers\");","module.exports = require(\"@angular/cdk/overlay\");","module.exports = require(\"@angular/cdk/platform\");","module.exports = require(\"@angular/cdk/portal\");","module.exports = require(\"@angular/cdk/scrolling\");","module.exports = require(\"@angular/cdk/text-field\");","module.exports = require(\"@angular/common\");","module.exports = require(\"@angular/common/http\");","module.exports = require(\"@angular/core\");","module.exports = require(\"@angular/fire\");","module.exports = require(\"@angular/fire/auth\");","module.exports = require(\"@angular/fire/database\");","module.exports = require(\"@angular/fire/firestore\");","module.exports = require(\"@angular/fire/messaging\");","module.exports = require(\"@angular/forms\");","module.exports = require(\"@angular/http\");","module.exports = require(\"@angular/material\");","module.exports = require(\"@angular/material/autocomplete\");","module.exports = require(\"@angular/material/badge\");","module.exports = require(\"@angular/material/button\");","module.exports = require(\"@angular/material/card\");","module.exports = require(\"@angular/material/checkbox\");","module.exports = require(\"@angular/material/chips\");","module.exports = require(\"@angular/material/core\");","module.exports = require(\"@angular/material/dialog\");","module.exports = require(\"@angular/material/divider\");","module.exports = require(\"@angular/material/expansion\");","module.exports = require(\"@angular/material/form-field\");","module.exports = require(\"@angular/material/icon\");","module.exports = require(\"@angular/material/input\");","module.exports = require(\"@angular/material/list\");","module.exports = require(\"@angular/material/menu\");","module.exports = require(\"@angular/material/progress-spinner\");","module.exports = require(\"@angular/material/select\");","module.exports = require(\"@angular/material/slide-toggle\");","module.exports = require(\"@angular/material/snack-bar\");","module.exports = require(\"@angular/material/tabs\");","module.exports = require(\"@angular/material/toolbar\");","module.exports = require(\"@angular/material/tooltip\");","module.exports = require(\"@angular/platform-browser\");","module.exports = require(\"@angular/platform-browser/animations\");","module.exports = require(\"@angular/platform-server\");","module.exports = require(\"@angular/router\");","module.exports = require(\"@kolkov/angular-editor\");","module.exports = require(\"@nguniversal/module-map-ngfactory-loader\");","module.exports = require(\"angularfire2/auth\");","module.exports = require(\"angularfire2/database\");","module.exports = require(\"angularfire2/firestore\");","module.exports = require(\"angularfire2/messaging\");","module.exports = require(\"firebase/app\");","module.exports = require(\"ngx-clipboard\");","module.exports = require(\"ngx-window-token\");","module.exports = require(\"rxjs\");","module.exports = require(\"rxjs/operators\");","module.exports = require(\"util\");"],"sourceRoot":""}